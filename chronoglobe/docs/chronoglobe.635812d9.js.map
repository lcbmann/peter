{"version":3,"sources":["node_modules/three/build/three.module.js","OrbitControls.js","chronoglobe.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","layerUpdates","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","sort","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this25","isMeshDepthMaterial","_Material4","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","levels","_iterator4","_step4","layerSize","ALPHA","LUMINANCE","LUMINANCE_ALPHA","UNSIGNED_SHORT_5_6_5","_iterator5","_step5","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","DEPTH_COMPONENT","DEPTH_STENCIL","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","_PerspectiveCamera","_this27","isArrayCamera","Group","_Object3D4","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator6","_step6","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator7","_step7","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","isLOD","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","_callee2","glBuffer","_framebuffer2","_callee2$","_context9","PIXEL_PACK_BUFFER","STREAM_READ","flush","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","getBufferSubData","deleteSync","_x4","_x5","_x6","_x7","_x8","_x9","_x10","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","minX","minY","dstX","dstY","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","copyTextureToTexture3D","minZ","dstZ","glTarget","initRenderTarget","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix$1","_invMatrixWorld","_identityMatrix","_whiteColor","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this39","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","getInstanceCountAt","setInstanceCountAt","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","culled","_Material6","_this40","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","checkIntersection","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this42","LineLoop","_Line2","_this43","_Material7","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this47","CompressedTexture","_Texture8","_this48","CompressedArrayTexture","_CompressedTexture","_this49","addLayerUpdates","CompressedCubeTexture","_CompressedTexture2","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_this57","isLineCurve","LineCurve3","_Curve6","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this68","PolyhedronGeometry","_BufferGeometry6","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this74","OctahedronGeometry","_PolyhedronGeometry3","_this75","RingGeometry","_BufferGeometry9","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this79","TorusGeometry","_BufferGeometry12","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this84","RawShaderMaterial","_ShaderMaterial","_this85","_Material9","_this86","_MeshStandardMaterial","_this87","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","_Material10","_this88","_Material11","_this89","_Material12","_this90","_Material13","_this91","_Material14","_this92","_LineBasicMaterial","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref3","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this97","HemisphereLight","_Light","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this99","isSpotLightShadow","SpotLight","_Light2","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_this102","DirectionalLightShadow","_LightShadow3","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_this104","AmbientLight","_Light5","_this105","RectAreaLight","_Light6","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this107","MaterialLoader","_Loader8","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this109","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee3","_callee3$","_context10","parseAsync","_x14","_x15","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee4","_callee4$","_context11","parseImagesAsync","_x16","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee6","_deserializeImage","_deserializedImage2","_callee6$","_context13","_deserializeImage3","_callee5","_url","_callee5$","_context12","_deserializeImage2","_x18","_x17","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this130","isWebGLMultipleRenderTargets","revision","__THREE__","_three","require","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","performCursorZoom","clampDistance","prevRadius","newRadius","radiusDelta","dollyDirection","mouseBefore","mouse","prevZoom","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","getRootNode","interceptControlDown","capture","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","controlActive","getZoomScale","normalizedDelta","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateZoomParameters","rect","getBoundingClientRect","dist","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","isTrackingPointer","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","customWheelEvent","deltaMode","newEvent","interceptControlUp","passive","trackPointer","THREE","_interopRequireWildcard","_OrbitControls","_earth_texture","_interopRequireDefault","_civilization_359BC","_civilization_338BC","_civilization_335BC","_civilization_333BC","_civilization_331BC","_civilization_330BC","_civilization_327BC","_civilization_325BC","_civilization_323BC","__esModule","default","_getRequireWildcardCache","getOwnPropertyDescriptor","civilizationMaps","civilization_359BC","civilization_338BC","civilization_335BC","civilization_333BC","civilization_331BC","civilization_330BC","civilization_327BC","civilization_325BC","civilization_323BC","markerData","lat","lon","textureCache","controls","globe","textureCanvas","markers","innerWidth","innerHeight","appendChild","ambientLight","directionalLight","pointLight","createElement","preloadTextures","drawInitialTexture","initGlobe","animate","onClick","promises","yearKey","img","Image","onload","onerror","all","baseMap","earthTextureSrc","clearRect","drawTextureForYear","selectedYear","civilizationMap","drawMarkersForYear","marker","createMarker","markerGroup","cylinderGeometry","cylinderMaterial","cylinder","sphereGeometry","sphereMaterial","latLonToVector3","createInfoWindow","title","existingWindow","querySelector","infoWindow","className","innerHTML","selectedObject","markerText","timeline","getElementById","yearInput","yearLabel","updateYearLabel","year","innerText"],"mappings":"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","file":"chronoglobe.635812d9.js","sourceRoot":"..","sourcesContent":["/**\r\n * @license\r\n * Copyright 2010-2024 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\nconst REVISION = '165';\r\n\r\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\r\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\r\nconst CullFaceNone = 0;\r\nconst CullFaceBack = 1;\r\nconst CullFaceFront = 2;\r\nconst CullFaceFrontBack = 3;\r\nconst BasicShadowMap = 0;\r\nconst PCFShadowMap = 1;\r\nconst PCFSoftShadowMap = 2;\r\nconst VSMShadowMap = 3;\r\nconst FrontSide = 0;\r\nconst BackSide = 1;\r\nconst DoubleSide = 2;\r\nconst NoBlending = 0;\r\nconst NormalBlending = 1;\r\nconst AdditiveBlending = 2;\r\nconst SubtractiveBlending = 3;\r\nconst MultiplyBlending = 4;\r\nconst CustomBlending = 5;\r\nconst AddEquation = 100;\r\nconst SubtractEquation = 101;\r\nconst ReverseSubtractEquation = 102;\r\nconst MinEquation = 103;\r\nconst MaxEquation = 104;\r\nconst ZeroFactor = 200;\r\nconst OneFactor = 201;\r\nconst SrcColorFactor = 202;\r\nconst OneMinusSrcColorFactor = 203;\r\nconst SrcAlphaFactor = 204;\r\nconst OneMinusSrcAlphaFactor = 205;\r\nconst DstAlphaFactor = 206;\r\nconst OneMinusDstAlphaFactor = 207;\r\nconst DstColorFactor = 208;\r\nconst OneMinusDstColorFactor = 209;\r\nconst SrcAlphaSaturateFactor = 210;\r\nconst ConstantColorFactor = 211;\r\nconst OneMinusConstantColorFactor = 212;\r\nconst ConstantAlphaFactor = 213;\r\nconst OneMinusConstantAlphaFactor = 214;\r\nconst NeverDepth = 0;\r\nconst AlwaysDepth = 1;\r\nconst LessDepth = 2;\r\nconst LessEqualDepth = 3;\r\nconst EqualDepth = 4;\r\nconst GreaterEqualDepth = 5;\r\nconst GreaterDepth = 6;\r\nconst NotEqualDepth = 7;\r\nconst MultiplyOperation = 0;\r\nconst MixOperation = 1;\r\nconst AddOperation = 2;\r\nconst NoToneMapping = 0;\r\nconst LinearToneMapping = 1;\r\nconst ReinhardToneMapping = 2;\r\nconst CineonToneMapping = 3;\r\nconst ACESFilmicToneMapping = 4;\r\nconst CustomToneMapping = 5;\r\nconst AgXToneMapping = 6;\r\nconst NeutralToneMapping = 7;\r\nconst AttachedBindMode = 'attached';\r\nconst DetachedBindMode = 'detached';\r\n\r\nconst UVMapping = 300;\r\nconst CubeReflectionMapping = 301;\r\nconst CubeRefractionMapping = 302;\r\nconst EquirectangularReflectionMapping = 303;\r\nconst EquirectangularRefractionMapping = 304;\r\nconst CubeUVReflectionMapping = 306;\r\nconst RepeatWrapping = 1000;\r\nconst ClampToEdgeWrapping = 1001;\r\nconst MirroredRepeatWrapping = 1002;\r\nconst NearestFilter = 1003;\r\nconst NearestMipmapNearestFilter = 1004;\r\nconst NearestMipMapNearestFilter = 1004;\r\nconst NearestMipmapLinearFilter = 1005;\r\nconst NearestMipMapLinearFilter = 1005;\r\nconst LinearFilter = 1006;\r\nconst LinearMipmapNearestFilter = 1007;\r\nconst LinearMipMapNearestFilter = 1007;\r\nconst LinearMipmapLinearFilter = 1008;\r\nconst LinearMipMapLinearFilter = 1008;\r\nconst UnsignedByteType = 1009;\r\nconst ByteType = 1010;\r\nconst ShortType = 1011;\r\nconst UnsignedShortType = 1012;\r\nconst IntType = 1013;\r\nconst UnsignedIntType = 1014;\r\nconst FloatType = 1015;\r\nconst HalfFloatType = 1016;\r\nconst UnsignedShort4444Type = 1017;\r\nconst UnsignedShort5551Type = 1018;\r\nconst UnsignedInt248Type = 1020;\r\nconst UnsignedInt5999Type = 35902;\r\nconst AlphaFormat = 1021;\r\nconst RGBFormat = 1022;\r\nconst RGBAFormat = 1023;\r\nconst LuminanceFormat = 1024;\r\nconst LuminanceAlphaFormat = 1025;\r\nconst DepthFormat = 1026;\r\nconst DepthStencilFormat = 1027;\r\nconst RedFormat = 1028;\r\nconst RedIntegerFormat = 1029;\r\nconst RGFormat = 1030;\r\nconst RGIntegerFormat = 1031;\r\nconst RGBAIntegerFormat = 1033;\r\n\r\nconst RGB_S3TC_DXT1_Format = 33776;\r\nconst RGBA_S3TC_DXT1_Format = 33777;\r\nconst RGBA_S3TC_DXT3_Format = 33778;\r\nconst RGBA_S3TC_DXT5_Format = 33779;\r\nconst RGB_PVRTC_4BPPV1_Format = 35840;\r\nconst RGB_PVRTC_2BPPV1_Format = 35841;\r\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\r\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\r\nconst RGB_ETC1_Format = 36196;\r\nconst RGB_ETC2_Format = 37492;\r\nconst RGBA_ETC2_EAC_Format = 37496;\r\nconst RGBA_ASTC_4x4_Format = 37808;\r\nconst RGBA_ASTC_5x4_Format = 37809;\r\nconst RGBA_ASTC_5x5_Format = 37810;\r\nconst RGBA_ASTC_6x5_Format = 37811;\r\nconst RGBA_ASTC_6x6_Format = 37812;\r\nconst RGBA_ASTC_8x5_Format = 37813;\r\nconst RGBA_ASTC_8x6_Format = 37814;\r\nconst RGBA_ASTC_8x8_Format = 37815;\r\nconst RGBA_ASTC_10x5_Format = 37816;\r\nconst RGBA_ASTC_10x6_Format = 37817;\r\nconst RGBA_ASTC_10x8_Format = 37818;\r\nconst RGBA_ASTC_10x10_Format = 37819;\r\nconst RGBA_ASTC_12x10_Format = 37820;\r\nconst RGBA_ASTC_12x12_Format = 37821;\r\nconst RGBA_BPTC_Format = 36492;\r\nconst RGB_BPTC_SIGNED_Format = 36494;\r\nconst RGB_BPTC_UNSIGNED_Format = 36495;\r\nconst RED_RGTC1_Format = 36283;\r\nconst SIGNED_RED_RGTC1_Format = 36284;\r\nconst RED_GREEN_RGTC2_Format = 36285;\r\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\r\nconst LoopOnce = 2200;\r\nconst LoopRepeat = 2201;\r\nconst LoopPingPong = 2202;\r\nconst InterpolateDiscrete = 2300;\r\nconst InterpolateLinear = 2301;\r\nconst InterpolateSmooth = 2302;\r\nconst ZeroCurvatureEnding = 2400;\r\nconst ZeroSlopeEnding = 2401;\r\nconst WrapAroundEnding = 2402;\r\nconst NormalAnimationBlendMode = 2500;\r\nconst AdditiveAnimationBlendMode = 2501;\r\nconst TrianglesDrawMode = 0;\r\nconst TriangleStripDrawMode = 1;\r\nconst TriangleFanDrawMode = 2;\r\nconst BasicDepthPacking = 3200;\r\nconst RGBADepthPacking = 3201;\r\nconst TangentSpaceNormalMap = 0;\r\nconst ObjectSpaceNormalMap = 1;\r\n\r\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\r\nconst NoColorSpace = '';\r\nconst SRGBColorSpace = 'srgb';\r\nconst LinearSRGBColorSpace = 'srgb-linear';\r\nconst DisplayP3ColorSpace = 'display-p3';\r\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\r\n\r\nconst LinearTransfer = 'linear';\r\nconst SRGBTransfer = 'srgb';\r\n\r\nconst Rec709Primaries = 'rec709';\r\nconst P3Primaries = 'p3';\r\n\r\nconst ZeroStencilOp = 0;\r\nconst KeepStencilOp = 7680;\r\nconst ReplaceStencilOp = 7681;\r\nconst IncrementStencilOp = 7682;\r\nconst DecrementStencilOp = 7683;\r\nconst IncrementWrapStencilOp = 34055;\r\nconst DecrementWrapStencilOp = 34056;\r\nconst InvertStencilOp = 5386;\r\n\r\nconst NeverStencilFunc = 512;\r\nconst LessStencilFunc = 513;\r\nconst EqualStencilFunc = 514;\r\nconst LessEqualStencilFunc = 515;\r\nconst GreaterStencilFunc = 516;\r\nconst NotEqualStencilFunc = 517;\r\nconst GreaterEqualStencilFunc = 518;\r\nconst AlwaysStencilFunc = 519;\r\n\r\nconst NeverCompare = 512;\r\nconst LessCompare = 513;\r\nconst EqualCompare = 514;\r\nconst LessEqualCompare = 515;\r\nconst GreaterCompare = 516;\r\nconst NotEqualCompare = 517;\r\nconst GreaterEqualCompare = 518;\r\nconst AlwaysCompare = 519;\r\n\r\nconst StaticDrawUsage = 35044;\r\nconst DynamicDrawUsage = 35048;\r\nconst StreamDrawUsage = 35040;\r\nconst StaticReadUsage = 35045;\r\nconst DynamicReadUsage = 35049;\r\nconst StreamReadUsage = 35041;\r\nconst StaticCopyUsage = 35046;\r\nconst DynamicCopyUsage = 35050;\r\nconst StreamCopyUsage = 35042;\r\n\r\nconst GLSL1 = '100';\r\nconst GLSL3 = '300 es';\r\n\r\nconst WebGLCoordinateSystem = 2000;\r\nconst WebGPUCoordinateSystem = 2001;\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nclass EventDispatcher {\r\n\r\n\taddEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thasEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t}\r\n\r\n\tremoveEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tconst listeners = this._listeners;\r\n\t\tconst listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tconst index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tconst listeners = this._listeners;\r\n\t\tconst listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\t// Make a copy, in case listeners are removed while iterating.\r\n\t\t\tconst array = listenerArray.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tevent.target = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\r\n\r\nlet _seed = 1234567;\r\n\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\nfunction generateUUID() {\r\n\r\n\tconst d0 = Math.random() * 0xffffffff | 0;\r\n\tconst d1 = Math.random() * 0xffffffff | 0;\r\n\tconst d2 = Math.random() * 0xffffffff | 0;\r\n\tconst d3 = Math.random() * 0xffffffff | 0;\r\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\r\n\r\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\r\n\treturn uuid.toLowerCase();\r\n\r\n}\r\n\r\nfunction clamp( value, min, max ) {\r\n\r\n\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n}\r\n\r\n// compute euclidean modulo of m % n\r\n// https://en.wikipedia.org/wiki/Modulo_operation\r\nfunction euclideanModulo( n, m ) {\r\n\r\n\treturn ( ( n % m ) + m ) % m;\r\n\r\n}\r\n\r\n// Linear mapping from range <a1, a2> to range <b1, b2>\r\nfunction mapLinear( x, a1, a2, b1, b2 ) {\r\n\r\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n}\r\n\r\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\nfunction inverseLerp( x, y, value ) {\r\n\r\n\tif ( x !== y ) {\r\n\r\n\t\treturn ( value - x ) / ( y - x );\r\n\r\n\t} else {\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Linear_interpolation\r\nfunction lerp( x, y, t ) {\r\n\r\n\treturn ( 1 - t ) * x + t * y;\r\n\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nfunction damp( x, y, lambda, dt ) {\r\n\r\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\r\n\r\n}\r\n\r\n// https://www.desmos.com/calculator/vcsjnyz7x4\r\nfunction pingpong( x, length = 1 ) {\r\n\r\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\r\n\r\n}\r\n\r\n// http://en.wikipedia.org/wiki/Smoothstep\r\nfunction smoothstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * ( 3 - 2 * x );\r\n\r\n}\r\n\r\nfunction smootherstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n}\r\n\r\n// Random integer from <low, high> interval\r\nfunction randInt( low, high ) {\r\n\r\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n}\r\n\r\n// Random float from <low, high> interval\r\nfunction randFloat( low, high ) {\r\n\r\n\treturn low + Math.random() * ( high - low );\r\n\r\n}\r\n\r\n// Random float from <-range/2, range/2> interval\r\nfunction randFloatSpread( range ) {\r\n\r\n\treturn range * ( 0.5 - Math.random() );\r\n\r\n}\r\n\r\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\r\nfunction seededRandom( s ) {\r\n\r\n\tif ( s !== undefined ) _seed = s;\r\n\r\n\t// Mulberry32 generator\r\n\r\n\tlet t = _seed += 0x6D2B79F5;\r\n\r\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\r\n\r\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\r\n\r\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\r\n\r\n}\r\n\r\nfunction degToRad( degrees ) {\r\n\r\n\treturn degrees * DEG2RAD;\r\n\r\n}\r\n\r\nfunction radToDeg( radians ) {\r\n\r\n\treturn radians * RAD2DEG;\r\n\r\n}\r\n\r\nfunction isPowerOfTwo( value ) {\r\n\r\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n}\r\n\r\nfunction ceilPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\nfunction floorPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\r\n\r\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n\r\n\t// rotations are applied to the axes in the order specified by 'order'\r\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t// angles are in radians\r\n\r\n\tconst cos = Math.cos;\r\n\tconst sin = Math.sin;\r\n\r\n\tconst c2 = cos( b / 2 );\r\n\tconst s2 = sin( b / 2 );\r\n\r\n\tconst c13 = cos( ( a + c ) / 2 );\r\n\tconst s13 = sin( ( a + c ) / 2 );\r\n\r\n\tconst c1_3 = cos( ( a - c ) / 2 );\r\n\tconst s1_3 = sin( ( a - c ) / 2 );\r\n\r\n\tconst c3_1 = cos( ( c - a ) / 2 );\r\n\tconst s3_1 = sin( ( c - a ) / 2 );\r\n\r\n\tswitch ( order ) {\r\n\r\n\t\tcase 'XYX':\r\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YZY':\r\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZXZ':\r\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'XZX':\r\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YXY':\r\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZYZ':\r\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction denormalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint32Array:\r\n\r\n\t\t\treturn value / 4294967295.0;\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn value / 65535.0;\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn value / 255.0;\r\n\r\n\t\tcase Int32Array:\r\n\r\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction normalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint32Array:\r\n\r\n\t\t\treturn Math.round( value * 4294967295.0 );\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn Math.round( value * 65535.0 );\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn Math.round( value * 255.0 );\r\n\r\n\t\tcase Int32Array:\r\n\r\n\t\t\treturn Math.round( value * 2147483647.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.round( value * 32767.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.round( value * 127.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst MathUtils = {\r\n\tDEG2RAD: DEG2RAD,\r\n\tRAD2DEG: RAD2DEG,\r\n\tgenerateUUID: generateUUID,\r\n\tclamp: clamp,\r\n\teuclideanModulo: euclideanModulo,\r\n\tmapLinear: mapLinear,\r\n\tinverseLerp: inverseLerp,\r\n\tlerp: lerp,\r\n\tdamp: damp,\r\n\tpingpong: pingpong,\r\n\tsmoothstep: smoothstep,\r\n\tsmootherstep: smootherstep,\r\n\trandInt: randInt,\r\n\trandFloat: randFloat,\r\n\trandFloatSpread: randFloatSpread,\r\n\tseededRandom: seededRandom,\r\n\tdegToRad: degToRad,\r\n\tradToDeg: radToDeg,\r\n\tisPowerOfTwo: isPowerOfTwo,\r\n\tceilPowerOfTwo: ceilPowerOfTwo,\r\n\tfloorPowerOfTwo: floorPowerOfTwo,\r\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\r\n\tnormalize: normalize,\r\n\tdenormalize: denormalize\r\n};\r\n\r\nclass Vector2 {\r\n\r\n\tconstructor( x = 0, y = 0 ) {\r\n\r\n\t\tVector2.prototype.isVector2 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t}\r\n\r\n\tset( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t}\r\n\r\n\tcross( v ) {\r\n\r\n\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tangle() {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t}\r\n\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t}\r\n\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateAround( center, angle ) {\r\n\r\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tconst x = this.x - center.x;\r\n\t\tconst y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix3 {\r\n\r\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tMatrix3.prototype.isMatrix3 = true;\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrix3Column( this, 0 );\r\n\t\tyAxis.setFromMatrix3Column( this, 1 );\r\n\t\tzAxis.setFromMatrix3Column( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix4( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\r\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\r\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\tte[ 3 ] = t12 * detInv;\r\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\tte[ 6 ] = t13 * detInv;\r\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tlet tmp;\r\n\t\tconst m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetNormalMatrix( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\r\n\r\n\t}\r\n\r\n\ttransposeIntoArray( r ) {\r\n\r\n\t\tconst m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\tconst c = Math.cos( rotation );\r\n\t\tconst s = Math.sin( rotation );\r\n\r\n\t\tthis.set(\r\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tscale( sx, sy ) {\r\n\r\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotate( theta ) {\r\n\r\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( tx, ty ) {\r\n\r\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// for 2D Transforms\r\n\r\n\tmakeTranslation( x, y ) {\r\n\r\n\t\tif ( x.isVector2 ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, x.x,\r\n\t\t\t\t0, 1, x.y,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, x,\r\n\t\t\t\t0, 1, y,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotation( theta ) {\r\n\r\n\t\t// counterclockwise\r\n\r\n\t\tconst c = Math.cos( theta );\r\n\t\tconst s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0,\r\n\t\t\ts, c, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0,\r\n\t\t\t0, y, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _m3 = /*@__PURE__*/ new Matrix3();\r\n\r\nfunction arrayNeedsUint32( array ) {\r\n\r\n\t// assumes larger values usually on last\r\n\r\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\r\n\r\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nconst TYPED_ARRAYS = {\r\n\tInt8Array: Int8Array,\r\n\tUint8Array: Uint8Array,\r\n\tUint8ClampedArray: Uint8ClampedArray,\r\n\tInt16Array: Int16Array,\r\n\tUint16Array: Uint16Array,\r\n\tInt32Array: Int32Array,\r\n\tUint32Array: Uint32Array,\r\n\tFloat32Array: Float32Array,\r\n\tFloat64Array: Float64Array\r\n};\r\n\r\nfunction getTypedArray( type, buffer ) {\r\n\r\n\treturn new TYPED_ARRAYS[ type ]( buffer );\r\n\r\n}\r\n\r\nfunction createElementNS( name ) {\r\n\r\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\r\n\r\n}\r\n\r\nfunction createCanvasElement() {\r\n\r\n\tconst canvas = createElementNS( 'canvas' );\r\n\tcanvas.style.display = 'block';\r\n\treturn canvas;\r\n\r\n}\r\n\r\nconst _cache = {};\r\n\r\nfunction warnOnce( message ) {\r\n\r\n\tif ( message in _cache ) return;\r\n\r\n\t_cache[ message ] = true;\r\n\r\n\tconsole.warn( message );\r\n\r\n}\r\n\r\nfunction probeAsync( gl, sync, interval ) {\r\n\r\n\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\tfunction probe() {\r\n\r\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\r\n\r\n\t\t\t\tcase gl.WAIT_FAILED:\r\n\t\t\t\t\treject();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\r\n\t\t\t\t\tsetTimeout( probe, interval );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresolve();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsetTimeout( probe, interval );\r\n\r\n\t} );\r\n\r\n}\r\n\r\n/**\r\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\r\n * or clipping. Based on W3C specifications for sRGB and Display P3,\r\n * and ICC specifications for the D50 connection space. Values in/out\r\n * are _linear_ sRGB and _linear_ Display P3.\r\n *\r\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\r\n *\r\n * Reference:\r\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\r\n */\r\n\r\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\r\n\t0.8224621, 0.177538, 0.0,\r\n\t0.0331941, 0.9668058, 0.0,\r\n\t0.0170827, 0.0723974, 0.9105199,\r\n);\r\n\r\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\r\n\t1.2249401, - 0.2249404, 0.0,\r\n\t- 0.0420569, 1.0420571, 0.0,\r\n\t- 0.0196376, - 0.0786361, 1.0982735\r\n);\r\n\r\n/**\r\n * Defines supported color spaces by transfer function and primaries,\r\n * and provides conversions to/from the Linear-sRGB reference space.\r\n */\r\nconst COLOR_SPACES = {\r\n\t[ LinearSRGBColorSpace ]: {\r\n\t\ttransfer: LinearTransfer,\r\n\t\tprimaries: Rec709Primaries,\r\n\t\ttoReference: ( color ) => color,\r\n\t\tfromReference: ( color ) => color,\r\n\t},\r\n\t[ SRGBColorSpace ]: {\r\n\t\ttransfer: SRGBTransfer,\r\n\t\tprimaries: Rec709Primaries,\r\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\r\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\r\n\t},\r\n\t[ LinearDisplayP3ColorSpace ]: {\r\n\t\ttransfer: LinearTransfer,\r\n\t\tprimaries: P3Primaries,\r\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\r\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\r\n\t},\r\n\t[ DisplayP3ColorSpace ]: {\r\n\t\ttransfer: SRGBTransfer,\r\n\t\tprimaries: P3Primaries,\r\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\r\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\r\n\t},\r\n};\r\n\r\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\r\n\r\nconst ColorManagement = {\r\n\r\n\tenabled: true,\r\n\r\n\t_workingColorSpace: LinearSRGBColorSpace,\r\n\r\n\tget workingColorSpace() {\r\n\r\n\t\treturn this._workingColorSpace;\r\n\r\n\t},\r\n\r\n\tset workingColorSpace( colorSpace ) {\r\n\r\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\r\n\r\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\r\n\r\n\t\t}\r\n\r\n\t\tthis._workingColorSpace = colorSpace;\r\n\r\n\t},\r\n\r\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\r\n\r\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\r\n\r\n\t\t\treturn color;\r\n\r\n\t\t}\r\n\r\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\r\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\r\n\r\n\t\treturn targetFromReference( sourceToReference( color ) );\r\n\r\n\t},\r\n\r\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\r\n\r\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\r\n\r\n\t},\r\n\r\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\r\n\r\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\r\n\r\n\t},\r\n\r\n\tgetPrimaries: function ( colorSpace ) {\r\n\r\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\r\n\r\n\t},\r\n\r\n\tgetTransfer: function ( colorSpace ) {\r\n\r\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\r\n\r\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\r\n\r\n\t},\r\n\r\n};\r\n\r\n\r\nfunction SRGBToLinear( c ) {\r\n\r\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n}\r\n\r\nfunction LinearToSRGB( c ) {\r\n\r\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n}\r\n\r\nlet _canvas;\r\n\r\nclass ImageUtils {\r\n\r\n\tstatic getDataURL( image ) {\r\n\r\n\t\tif ( /^data:/i.test( image.src ) ) {\r\n\r\n\t\t\treturn image.src;\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\r\n\r\n\t\t\treturn image.src;\r\n\r\n\t\t}\r\n\r\n\t\tlet canvas;\r\n\r\n\t\tif ( image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tcanvas = image;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\r\n\r\n\t\t\t_canvas.width = image.width;\r\n\t\t\t_canvas.height = image.height;\r\n\r\n\t\t\tconst context = _canvas.getContext( '2d' );\r\n\r\n\t\t\tif ( image instanceof ImageData ) {\r\n\r\n\t\t\t\tcontext.putImageData( image, 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcanvas = _canvas;\r\n\r\n\t\t}\r\n\r\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\r\n\r\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic sRGBToLinear( image ) {\r\n\r\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t\tconst canvas = createElementNS( 'canvas' );\r\n\r\n\t\t\tcanvas.width = image.width;\r\n\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\tconst context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\r\n\t\t\tconst data = imageData.data;\r\n\r\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t} else if ( image.data ) {\r\n\r\n\t\t\tconst data = image.data.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\r\n\r\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// assuming float\r\n\r\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: data,\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _sourceId = 0;\r\n\r\nclass Source {\r\n\r\n\tconstructor( data = null ) {\r\n\r\n\t\tthis.isSource = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.data = data;\r\n\t\tthis.dataReady = true;\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.images[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tconst output = {\r\n\t\t\tuuid: this.uuid,\r\n\t\t\turl: ''\r\n\t\t};\r\n\r\n\t\tconst data = this.data;\r\n\r\n\t\tif ( data !== null ) {\r\n\r\n\t\t\tlet url;\r\n\r\n\t\t\tif ( Array.isArray( data ) ) {\r\n\r\n\t\t\t\t// cube texture\r\n\r\n\t\t\t\turl = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\r\n\r\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// texture\r\n\r\n\t\t\t\turl = serializeImage( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.url = url;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\tmeta.images[ this.uuid ] = output;\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction serializeImage( image ) {\r\n\r\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t// default images\r\n\r\n\t\treturn ImageUtils.getDataURL( image );\r\n\r\n\t} else {\r\n\r\n\t\tif ( image.data ) {\r\n\r\n\t\t\t// images of DataTexture\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: Array.from( image.data ),\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height,\r\n\t\t\t\ttype: image.data.constructor.name\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\r\n\t\t\treturn {};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _textureId = 0;\r\n\r\nclass Texture extends EventDispatcher {\r\n\r\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isTexture = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.source = new Source( image );\r\n\t\tthis.mipmaps = [];\r\n\r\n\t\tthis.mapping = mapping;\r\n\t\tthis.channel = 0;\r\n\r\n\t\tthis.wrapS = wrapS;\r\n\t\tthis.wrapT = wrapT;\r\n\r\n\t\tthis.magFilter = magFilter;\r\n\t\tthis.minFilter = minFilter;\r\n\r\n\t\tthis.anisotropy = anisotropy;\r\n\r\n\t\tthis.format = format;\r\n\t\tthis.internalFormat = null;\r\n\t\tthis.type = type;\r\n\r\n\t\tthis.offset = new Vector2( 0, 0 );\r\n\t\tthis.repeat = new Vector2( 1, 1 );\r\n\t\tthis.center = new Vector2( 0, 0 );\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.matrixAutoUpdate = true;\r\n\t\tthis.matrix = new Matrix3();\r\n\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\t\tthis.colorSpace = colorSpace;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\r\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\r\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\r\n\r\n\t}\r\n\r\n\tget image() {\r\n\r\n\t\treturn this.source.data;\r\n\r\n\t}\r\n\r\n\tset image( value = null ) {\r\n\r\n\t\tthis.source.data = value;\r\n\r\n\t}\r\n\r\n\tupdateMatrix() {\r\n\r\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.source = source.source;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\t\tthis.channel = source.channel;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.internalFormat = source.internalFormat;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\t\tthis.center.copy( source.center );\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrix.copy( source.matrix );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\tthis.colorSpace = source.colorSpace;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tconst output = {\r\n\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\timage: this.source.toJSON( meta ).uuid,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\t\t\tchannel: this.channel,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\tcenter: [ this.center.x, this.center.y ],\r\n\t\t\trotation: this.rotation,\r\n\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tformat: this.format,\r\n\t\t\tinternalFormat: this.internalFormat,\r\n\t\t\ttype: this.type,\r\n\t\t\tcolorSpace: this.colorSpace,\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy,\r\n\r\n\t\t\tflipY: this.flipY,\r\n\r\n\t\t\tgenerateMipmaps: this.generateMipmaps,\r\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\tunpackAlignment: this.unpackAlignment\r\n\r\n\t\t};\r\n\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\r\n\r\n\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\ttransformUv( uv ) {\r\n\r\n\t\tif ( this.mapping !== UVMapping ) return uv;\r\n\r\n\t\tuv.applyMatrix3( this.matrix );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn uv;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) {\r\n\r\n\t\t\tthis.version ++;\r\n\t\t\tthis.source.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset needsPMREMUpdate( value ) {\r\n\r\n\t\tif ( value === true ) {\r\n\r\n\t\t\tthis.pmremVersion ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nTexture.DEFAULT_IMAGE = null;\r\nTexture.DEFAULT_MAPPING = UVMapping;\r\nTexture.DEFAULT_ANISOTROPY = 1;\r\n\r\nclass Vector4 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tVector4.prototype.isVector4 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.z;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.z = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.w;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.w = value;\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\tthis.w *= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromQuaternion( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\tthis.x = 1;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = q.x / s;\r\n\t\t\tthis.y = q.y / s;\r\n\t\t\tthis.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tlet angle, x, y, z; // variables for result\r\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tconst xx = ( m11 + 1 ) / 2;\r\n\t\t\tconst yy = ( m22 + 1 ) / 2;\r\n\t\t\tconst zz = ( m33 + 1 ) / 2;\r\n\t\t\tconst xy = ( m12 + m21 ) / 4;\r\n\t\t\tconst xz = ( m13 + m31 ) / 4;\r\n\t\t\tconst yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\t\tthis.z = Math.trunc( this.z );\r\n\t\tthis.w = Math.trunc( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\t\tthis.w = attribute.getW( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\tthis.w = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\t\tyield this.w;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\r\nclass RenderTarget extends EventDispatcher {\r\n\r\n\tconstructor( width = 1, height = 1, options = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isRenderTarget = true;\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = 1;\r\n\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\tconst image = { width: width, height: height, depth: 1 };\r\n\r\n\t\toptions = Object.assign( {\r\n\t\t\tgenerateMipmaps: false,\r\n\t\t\tinternalFormat: null,\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tdepthBuffer: true,\r\n\t\t\tstencilBuffer: false,\r\n\t\t\tresolveDepthBuffer: true,\r\n\t\t\tresolveStencilBuffer: true,\r\n\t\t\tdepthTexture: null,\r\n\t\t\tsamples: 0,\r\n\t\t\tcount: 1\r\n\t\t}, options );\r\n\r\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\r\n\r\n\t\ttexture.flipY = false;\r\n\t\ttexture.generateMipmaps = options.generateMipmaps;\r\n\t\ttexture.internalFormat = options.internalFormat;\r\n\r\n\t\tthis.textures = [];\r\n\r\n\t\tconst count = options.count;\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.textures[ i ] = texture.clone();\r\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\r\n\r\n\t\t}\r\n\r\n\t\tthis.depthBuffer = options.depthBuffer;\r\n\t\tthis.stencilBuffer = options.stencilBuffer;\r\n\r\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\r\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\r\n\r\n\t\tthis.depthTexture = options.depthTexture;\r\n\r\n\t\tthis.samples = options.samples;\r\n\r\n\t}\r\n\r\n\tget texture() {\r\n\r\n\t\treturn this.textures[ 0 ];\r\n\r\n\t}\r\n\r\n\tset texture( value ) {\r\n\r\n\t\tthis.textures[ 0 ] = value;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height, depth = 1 ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = depth;\r\n\r\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.textures[ i ].image.width = width;\r\n\t\t\t\tthis.textures[ i ].image.height = height;\r\n\t\t\t\tthis.textures[ i ].image.depth = depth;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\t\tthis.depth = source.depth;\r\n\r\n\t\tthis.scissor.copy( source.scissor );\r\n\t\tthis.scissorTest = source.scissorTest;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.textures.length = 0;\r\n\r\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\r\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\r\n\r\n\t\t}\r\n\r\n\t\t// ensure image object is not shared, see #20328\r\n\r\n\t\tconst image = Object.assign( {}, source.texture.image );\r\n\t\tthis.texture.source = new Source( image );\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\r\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\r\n\r\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\r\n\r\n\t\tthis.samples = source.samples;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLRenderTarget extends RenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isWebGLRenderTarget = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DataArrayTexture extends Texture {\r\n\r\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n\r\n\t\tsuper( null );\r\n\r\n\t\tthis.isDataArrayTexture = true;\r\n\r\n\t\tthis.image = { data, width, height, depth };\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t\tthis.layerUpdates = new Set();\r\n\r\n\t}\r\n\r\n\taddLayerUpdate( layerIndex ) {\r\n\r\n\t\tthis.layerUpdates.add( layerIndex );\r\n\r\n\t}\r\n\r\n\tclearLayerUpdates() {\r\n\r\n\t\tthis.layerUpdates.clear();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isWebGLArrayRenderTarget = true;\r\n\r\n\t\tthis.depth = depth;\r\n\r\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Data3DTexture extends Texture {\r\n\r\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n\r\n\t\t// We're going to add .setXXX() methods for setting properties later.\r\n\t\t// Users can still set in DataTexture3D directly.\r\n\t\t//\r\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\r\n\t\t// \ttexture.anisotropy = 16;\r\n\t\t//\r\n\t\t// See #14839\r\n\r\n\t\tsuper( null );\r\n\r\n\t\tthis.isData3DTexture = true;\r\n\r\n\t\tthis.image = { data, width, height, depth };\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isWebGL3DRenderTarget = true;\r\n\r\n\t\tthis.depth = depth;\r\n\r\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Quaternion {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tthis.isQuaternion = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t}\r\n\r\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( t === 0 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x1;\r\n\t\t\tdst[ dstOffset + 1 ] = y1;\r\n\t\t\tdst[ dstOffset + 2 ] = z1;\r\n\t\t\tdst[ dstOffset + 3 ] = w1;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tlet s = 1 - t;\r\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\r\n\r\n\t\tconst x0 = src0[ srcOffset0 ];\r\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\r\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\r\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 ];\r\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\r\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\r\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n\r\n\t\treturn dst;\r\n\r\n\t}\r\n\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget w() {\r\n\r\n\t\treturn this._w;\r\n\r\n\t}\r\n\r\n\tset w( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n\tcopy( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromEuler( euler, update = true ) {\r\n\r\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tconst cos = Math.cos;\r\n\t\tconst sin = Math.sin;\r\n\r\n\t\tconst c1 = cos( x / 2 );\r\n\t\tconst c2 = cos( y / 2 );\r\n\t\tconst c3 = cos( z / 2 );\r\n\r\n\t\tconst s1 = sin( x / 2 );\r\n\t\tconst s2 = sin( y / 2 );\r\n\t\tconst s3 = sin( z / 2 );\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromUnitVectors( vFrom, vTo ) {\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tlet r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\tif ( r < Number.EPSILON ) {\r\n\r\n\t\t\t// vFrom and vTo point in opposite directions\r\n\r\n\t\t\tr = 0;\r\n\r\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tangleTo( q ) {\r\n\r\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t}\r\n\r\n\trotateTowards( q, step ) {\r\n\r\n\t\tconst angle = this.angleTo( q );\r\n\r\n\t\tif ( angle === 0 ) return this;\r\n\r\n\t\tconst t = Math.min( 1, step / angle );\r\n\r\n\t\tthis.slerp( q, t );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\treturn this.set( 0, 0, 0, 1 );\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// quaternion is assumed to have unit length\r\n\r\n\t\treturn this.conjugate();\r\n\r\n\t}\r\n\r\n\tconjugate() {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\tlet l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t}\r\n\r\n\tpremultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t}\r\n\r\n\tmultiplyQuaternions( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tslerp( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\tconst s = 1 - t;\r\n\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tslerpQuaternions( qa, qb, t ) {\r\n\r\n\t\treturn this.copy( qa ).slerp( qb, t );\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\t// sets this quaternion to a uniform random unit quaternnion\r\n\r\n\t\t// Ken Shoemake\r\n\t\t// Uniform random rotations\r\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\r\n\r\n\t\tconst theta1 = 2 * Math.PI * Math.random();\r\n\t\tconst theta2 = 2 * Math.PI * Math.random();\r\n\r\n\t\tconst x0 = Math.random();\r\n\t\tconst r1 = Math.sqrt( 1 - x0 );\r\n\t\tconst r2 = Math.sqrt( x0 );\r\n\r\n\t\treturn this.set(\r\n\t\t\tr1 * Math.sin( theta1 ),\r\n\t\t\tr1 * Math.cos( theta1 ),\r\n\t\t\tr2 * Math.sin( theta2 ),\r\n\t\t\tr2 * Math.cos( theta2 ),\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tequals( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis._x = attribute.getX( index );\r\n\t\tthis._y = attribute.getY( index );\r\n\t\tthis._z = attribute.getZ( index );\r\n\t\tthis._w = attribute.getW( index );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.toArray();\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._w;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector3 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0 ) {\r\n\r\n\t\tVector3.prototype.isVector3 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t}\r\n\r\n\tset( x, y, z ) {\r\n\r\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyEuler( euler ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\r\n\r\n\t}\r\n\r\n\tapplyAxisAngle( axis, angle ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\treturn this.applyMatrix3( m ).normalize();\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\t// quaternion q is assumed to have unit length\r\n\r\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\r\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// t = 2 * cross( q.xyz, v );\r\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\r\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\r\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\r\n\r\n\t\t// v + q.w * t + cross( q.xyz, t );\r\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\r\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\r\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tproject( camera ) {\r\n\r\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t}\r\n\r\n\tunproject( camera ) {\r\n\r\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\t\tthis.z = Math.trunc( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcross( v ) {\r\n\r\n\t\treturn this.crossVectors( this, v );\r\n\r\n\t}\r\n\r\n\tcrossVectors( a, b ) {\r\n\r\n\t\tconst ax = a.x, ay = a.y, az = a.z;\r\n\t\tconst bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprojectOnVector( v ) {\r\n\r\n\t\tconst denominator = v.lengthSq();\r\n\r\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\r\n\r\n\t\tconst scalar = v.dot( this ) / denominator;\r\n\r\n\t\treturn this.copy( v ).multiplyScalar( scalar );\r\n\r\n\t}\r\n\r\n\tprojectOnPlane( planeNormal ) {\r\n\r\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\treturn this.sub( _vector$c );\r\n\r\n\t}\r\n\r\n\treflect( normal ) {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t}\r\n\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t}\r\n\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t}\r\n\r\n\tsetFromSpherical( s ) {\r\n\r\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t}\r\n\r\n\tsetFromSphericalCoords( radius, phi, theta ) {\r\n\r\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCylindrical( c ) {\r\n\r\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t}\r\n\r\n\tsetFromCylindricalCoords( radius, theta, y ) {\r\n\r\n\t\tthis.x = radius * Math.sin( theta );\r\n\t\tthis.y = y;\r\n\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 12 ];\r\n\t\tthis.y = e[ 13 ];\r\n\t\tthis.z = e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixScale( m ) {\r\n\r\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixColumn( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3Column( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 3 );\r\n\r\n\t}\r\n\r\n\tsetFromEuler( e ) {\r\n\r\n\t\tthis.x = e._x;\r\n\t\tthis.y = e._y;\r\n\t\tthis.z = e._z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromColor( c ) {\r\n\r\n\t\tthis.x = c.r;\r\n\t\tthis.y = c.g;\r\n\t\tthis.z = c.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandomDirection() {\r\n\r\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\r\n\r\n\t\tconst theta = Math.random() * Math.PI * 2;\r\n\t\tconst u = Math.random() * 2 - 1;\r\n\t\tconst c = Math.sqrt( 1 - u * u );\r\n\r\n\t\tthis.x = c * Math.cos( theta );\r\n\t\tthis.y = u;\r\n\t\tthis.z = c * Math.sin( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$c = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\r\n\r\nclass Box3 {\r\n\r\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.isBox3 = true;\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromArray( array ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\r\n\r\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromBufferAttribute( attribute ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromObject( object, precise = false ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\treturn this.expandByObject( object, precise );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByObject( object, precise = false ) {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tobject.updateWorldMatrix( false, false );\r\n\r\n\t\tconst geometry = object.geometry;\r\n\r\n\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\r\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\r\n\r\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\r\n\r\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( object.isMesh === true ) {\r\n\r\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\r\n\t\t\t\t\tthis.expandByPoint( _vector$b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( object.boundingBox !== undefined ) {\r\n\r\n\t\t\t\t\t// object-level bounding box\r\n\r\n\t\t\t\t\tif ( object.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tobject.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_box$4.copy( object.boundingBox );\r\n\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// geometry-level bounding box\r\n\r\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tthis.union( _box$4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.expandByObject( children[ i ], precise );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\r\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\tthis.clampPoint( sphere.center, _vector$b );\r\n\r\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tlet min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\r\n\r\n\t}\r\n\r\n\tintersectsTriangle( triangle ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// compute box center and extents\r\n\t\tthis.getCenter( _center );\r\n\t\t_extents.subVectors( this.max, _center );\r\n\r\n\t\t// translate triangle to aabb origin\r\n\t\t_v0$2.subVectors( triangle.a, _center );\r\n\t\t_v1$7.subVectors( triangle.b, _center );\r\n\t\t_v2$4.subVectors( triangle.c, _center );\r\n\r\n\t\t// compute edge vectors for triangle\r\n\t\t_f0.subVectors( _v1$7, _v0$2 );\r\n\t\t_f1.subVectors( _v2$4, _v1$7 );\r\n\t\t_f2.subVectors( _v0$2, _v2$4 );\r\n\r\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\tlet axes = [\r\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\r\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\r\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\r\n\t\t];\r\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// test 3 face normals from the aabb\r\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// finally testing the face normal of the triangle\r\n\t\t// use already existing triangle edge vectors here\r\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\r\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\r\n\r\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\r\n\r\n\t}\r\n\r\n\tgetBoundingSphere( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\ttarget.makeEmpty();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.getCenter( target.center );\r\n\r\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\t// transform of empty box is an empty box.\r\n\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\tthis.setFromPoints( _points );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _points = [\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3()\r\n];\r\n\r\nconst _vector$b = /*@__PURE__*/ new Vector3();\r\n\r\nconst _box$4 = /*@__PURE__*/ new Box3();\r\n\r\n// triangle centered vertices\r\n\r\nconst _v0$2 = /*@__PURE__*/ new Vector3();\r\nconst _v1$7 = /*@__PURE__*/ new Vector3();\r\nconst _v2$4 = /*@__PURE__*/ new Vector3();\r\n\r\n// triangle edge vectors\r\n\r\nconst _f0 = /*@__PURE__*/ new Vector3();\r\nconst _f1 = /*@__PURE__*/ new Vector3();\r\nconst _f2 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _center = /*@__PURE__*/ new Vector3();\r\nconst _extents = /*@__PURE__*/ new Vector3();\r\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\r\nconst _testAxis = /*@__PURE__*/ new Vector3();\r\n\r\nfunction satForAxes( axes, v0, v1, v2, extents ) {\r\n\r\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t_testAxis.fromArray( axes, i );\r\n\t\t// project the aabb onto the separating axis\r\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\r\n\t\t// project all 3 vertices of the triangle onto the separating axis\r\n\t\tconst p0 = v0.dot( _testAxis );\r\n\t\tconst p1 = v1.dot( _testAxis );\r\n\t\tconst p2 = v2.dot( _testAxis );\r\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t// the axis is separating and we can exit\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nconst _box$3 = /*@__PURE__*/ new Box3();\r\nconst _v1$6 = /*@__PURE__*/ new Vector3();\r\nconst _v2$3 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Sphere {\r\n\r\n\tconstructor( center = new Vector3(), radius = - 1 ) {\r\n\r\n\t\tthis.isSphere = true;\r\n\r\n\t\tthis.center = center;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tset( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points, optionalCenter ) {\r\n\r\n\t\tconst center = this.center;\r\n\r\n\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t}\r\n\r\n\t\tlet maxRadiusSq = 0;\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\treturn ( this.radius < 0 );\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.center.set( 0, 0, 0 );\r\n\t\tthis.radius = - 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\ttarget.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetBoundingBox( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t// Empty sphere produces empty bounding box\r\n\t\t\ttarget.makeEmpty();\r\n\t\t\treturn target;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.set( this.center, this.center );\r\n\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\tthis.center.copy( point );\r\n\r\n\t\t\tthis.radius = 0;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t_v1$6.subVectors( point, this.center );\r\n\r\n\t\tconst lengthSq = _v1$6.lengthSq();\r\n\r\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\t// calculate the minimal sphere\r\n\r\n\t\t\tconst length = Math.sqrt( lengthSq );\r\n\r\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\r\n\r\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\r\n\r\n\t\t\tthis.radius += delta;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( sphere ) {\r\n\r\n\t\tif ( sphere.isEmpty() ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\tthis.copy( sphere );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.center.equals( sphere.center ) === true ) {\r\n\r\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\r\n\r\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\r\n\r\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$a = /*@__PURE__*/ new Vector3();\r\nconst _segCenter = /*@__PURE__*/ new Vector3();\r\nconst _segDir = /*@__PURE__*/ new Vector3();\r\nconst _diff = /*@__PURE__*/ new Vector3();\r\n\r\nconst _edge1 = /*@__PURE__*/ new Vector3();\r\nconst _edge2 = /*@__PURE__*/ new Vector3();\r\nconst _normal$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Ray {\r\n\r\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\r\n\r\n\t\tthis.origin = origin;\r\n\t\tthis.direction = direction;\r\n\r\n\t}\r\n\r\n\tset( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tat( t, target ) {\r\n\r\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\r\n\r\n\t}\r\n\r\n\tlookAt( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trecast( t ) {\r\n\r\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, target ) {\r\n\r\n\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\tconst directionDistance = target.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t}\r\n\r\n\tdistanceSqToPoint( point ) {\r\n\r\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t// point behind the ray\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t}\r\n\r\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\r\n\r\n\t\treturn _vector$a.distanceToSquared( point );\r\n\r\n\t}\r\n\r\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t// It returns the min distance between the ray and the segment\r\n\t\t// defined by v0 and v1\r\n\t\t// It can also set two optional targets :\r\n\t\t// - The closest point on the ray\r\n\t\t// - The closest point on the segment\r\n\r\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t_diff.copy( this.origin ).sub( _segCenter );\r\n\r\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\tconst a01 = - this.direction.dot( _segDir );\r\n\t\tconst b0 = _diff.dot( this.direction );\r\n\t\tconst b1 = - _diff.dot( _segDir );\r\n\t\tconst c = _diff.lengthSq();\r\n\t\tconst det = Math.abs( 1 - a01 * a01 );\r\n\t\tlet s0, s1, sqrDist, extDet;\r\n\r\n\t\tif ( det > 0 ) {\r\n\r\n\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\textDet = segExtent * det;\r\n\r\n\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\tconst invDet = 1 / det;\r\n\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn sqrDist;\r\n\r\n\t}\r\n\r\n\tintersectSphere( sphere, target ) {\r\n\r\n\t\t_vector$a.subVectors( sphere.center, this.origin );\r\n\t\tconst tca = _vector$a.dot( this.direction );\r\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\r\n\t\tconst radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\tconst thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\tconst t0 = tca - thc;\r\n\r\n\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\tconst t1 = tca + thc;\r\n\r\n\t\t// test to see if t1 is behind the ray - if so, return null\r\n\t\tif ( t1 < 0 ) return null;\r\n\r\n\t\t// test to see if t0 is behind the ray:\r\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\treturn this.at( t0, target );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\tdistanceToPlane( plane ) {\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t : null;\r\n\r\n\t}\r\n\r\n\tintersectPlane( plane, target ) {\r\n\r\n\t\tconst t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, target );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tintersectBox( box, target ) {\r\n\r\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tconst invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tconst origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\r\n\r\n\t}\r\n\r\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t_edge1.subVectors( b, a );\r\n\t\t_edge2.subVectors( c, a );\r\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\r\n\r\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\tlet DdN = this.direction.dot( _normal$1 );\r\n\t\tlet sign;\r\n\r\n\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\tsign = 1;\r\n\r\n\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\tsign = - 1;\r\n\t\t\tDdN = - DdN;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t_diff.subVectors( this.origin, a );\r\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\r\n\r\n\t\t// b1 < 0, no intersection\r\n\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\r\n\r\n\t\t// b2 < 0, no intersection\r\n\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// b1+b2 > 1, no intersection\r\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Line intersects triangle, check if ray does.\r\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\r\n\r\n\t\t// t < 0, no intersection\r\n\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Ray intersects triangle.\r\n\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix4 ) {\r\n\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix4 {\r\n\r\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tMatrix4.prototype.isMatrix4 = true;\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyPosition( m ) {\r\n\r\n\t\tconst te = this.elements, me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractRotation( m ) {\r\n\r\n\t\t// this method does not support reflection matrices\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromEuler( euler ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\r\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\r\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\r\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// bottom row\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// last column\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromQuaternion( q ) {\r\n\r\n\t\treturn this.compose( _zero, q, _one );\r\n\r\n\t}\r\n\r\n\tlookAt( eye, target, up ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\t_z.subVectors( eye, target );\r\n\r\n\t\tif ( _z.lengthSq() === 0 ) {\r\n\r\n\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t_z.z = 1;\r\n\r\n\t\t}\r\n\r\n\t\t_z.normalize();\r\n\t\t_x.crossVectors( up, _z );\r\n\r\n\t\tif ( _x.lengthSq() === 0 ) {\r\n\r\n\t\t\t// up and z are parallel\r\n\r\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t_z.x += 0.0001;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_z.z += 0.0001;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\t\t\t_x.crossVectors( up, _z );\r\n\r\n\t\t}\r\n\r\n\t\t_x.normalize();\r\n\t\t_y.crossVectors( _z, _x );\r\n\r\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\r\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\r\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tlet tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetPosition( x, y, z ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tte[ 12 ] = x.x;\r\n\t\t\tte[ 13 ] = x.y;\r\n\t\t\tte[ 14 ] = x.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tte[ 12 ] = x;\r\n\t\t\tte[ 13 ] = y;\r\n\t\t\tte[ 14 ] = z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\r\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\r\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\r\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( v ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMaxScaleOnAxis() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t}\r\n\r\n\tmakeTranslation( x, y, z ) {\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x.x,\r\n\t\t\t\t0, 1, 0, x.y,\r\n\t\t\t\t0, 0, 1, x.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationX( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationY( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationZ( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts, c, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationAxis( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tconst c = Math.cos( angle );\r\n\t\tconst s = Math.sin( angle );\r\n\t\tconst t = 1 - c;\r\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\r\n\t\tconst tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, yx, zx, 0,\r\n\t\t\txy, 1, zy, 0,\r\n\t\t\txz, yz, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\tte[ 1 ] = ( xy + wz ) * sx;\r\n\t\tte[ 2 ] = ( xz - wy ) * sx;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = ( xy - wz ) * sy;\r\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\tte[ 6 ] = ( yz + wx ) * sy;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = ( xz + wy ) * sz;\r\n\t\tte[ 9 ] = ( yz - wx ) * sz;\r\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = position.x;\r\n\t\tte[ 13 ] = position.y;\r\n\t\tte[ 14 ] = position.z;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdecompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t// if determine is negative, we need to invert one scale\r\n\t\tconst det = this.determinant();\r\n\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\tposition.x = te[ 12 ];\r\n\t\tposition.y = te[ 13 ];\r\n\t\tposition.z = te[ 14 ];\r\n\r\n\t\t// scale the rotation part\r\n\t\t_m1$4.copy( this );\r\n\r\n\t\tconst invSX = 1 / sx;\r\n\t\tconst invSY = 1 / sy;\r\n\t\tconst invSZ = 1 / sz;\r\n\r\n\t\t_m1$4.elements[ 0 ] *= invSX;\r\n\t\t_m1$4.elements[ 1 ] *= invSX;\r\n\t\t_m1$4.elements[ 2 ] *= invSX;\r\n\r\n\t\t_m1$4.elements[ 4 ] *= invSY;\r\n\t\t_m1$4.elements[ 5 ] *= invSY;\r\n\t\t_m1$4.elements[ 6 ] *= invSY;\r\n\r\n\t\t_m1$4.elements[ 8 ] *= invSZ;\r\n\t\t_m1$4.elements[ 9 ] *= invSZ;\r\n\t\t_m1$4.elements[ 10 ] *= invSZ;\r\n\r\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\r\n\r\n\t\tscale.x = sx;\r\n\t\tscale.y = sy;\r\n\t\tscale.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = 2 * near / ( right - left );\r\n\t\tconst y = 2 * near / ( top - bottom );\r\n\r\n\t\tconst a = ( right + left ) / ( right - left );\r\n\t\tconst b = ( top + bottom ) / ( top - bottom );\r\n\r\n\t\tlet c, d;\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tc = - ( far + near ) / ( far - near );\r\n\t\t\td = ( - 2 * far * near ) / ( far - near );\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tc = - far / ( far - near );\r\n\t\t\td = ( - far * near ) / ( far - near );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst w = 1.0 / ( right - left );\r\n\t\tconst h = 1.0 / ( top - bottom );\r\n\t\tconst p = 1.0 / ( far - near );\r\n\r\n\t\tconst x = ( right + left ) * w;\r\n\t\tconst y = ( top + bottom ) * h;\r\n\r\n\t\tlet z, zInv;\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tz = ( far + near ) * p;\r\n\t\t\tzInv = - 2 * p;\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tz = near * p;\r\n\t\t\tzInv = - 1 * p;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v1$5 = /*@__PURE__*/ new Vector3();\r\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\r\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\r\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\r\nconst _x = /*@__PURE__*/ new Vector3();\r\nconst _y = /*@__PURE__*/ new Vector3();\r\nconst _z = /*@__PURE__*/ new Vector3();\r\n\r\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\r\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\r\n\r\nclass Euler {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\r\n\r\n\t\tthis.isEuler = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t}\r\n\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget order() {\r\n\r\n\t\treturn this._order;\r\n\r\n\t}\r\n\r\n\tset order( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tset( x, y, z, order = this._order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n\tcopy( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements;\r\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromQuaternion( q, order, update ) {\r\n\r\n\t\t_matrix$2.makeRotationFromQuaternion( q );\r\n\r\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v, order = this._order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order );\r\n\r\n\t}\r\n\r\n\treorder( newOrder ) {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\t_quaternion$3.setFromEuler( this );\r\n\r\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\r\n\r\n\t}\r\n\r\n\tequals( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t}\r\n\r\n\tfromArray( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._order;\r\n\r\n\t}\r\n\r\n}\r\n\r\nEuler.DEFAULT_ORDER = 'XYZ';\r\n\r\nclass Layers {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.mask = 1 | 0;\r\n\r\n\t}\r\n\r\n\tset( channel ) {\r\n\r\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\r\n\r\n\t}\r\n\r\n\tenable( channel ) {\r\n\r\n\t\tthis.mask |= 1 << channel | 0;\r\n\r\n\t}\r\n\r\n\tenableAll() {\r\n\r\n\t\tthis.mask = 0xffffffff | 0;\r\n\r\n\t}\r\n\r\n\ttoggle( channel ) {\r\n\r\n\t\tthis.mask ^= 1 << channel | 0;\r\n\r\n\t}\r\n\r\n\tdisable( channel ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\r\n\r\n\t}\r\n\r\n\tdisableAll() {\r\n\r\n\t\tthis.mask = 0;\r\n\r\n\t}\r\n\r\n\ttest( layers ) {\r\n\r\n\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t}\r\n\r\n\tisEnabled( channel ) {\r\n\r\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _object3DId = 0;\r\n\r\nconst _v1$4 = /*@__PURE__*/ new Vector3();\r\nconst _q1 = /*@__PURE__*/ new Quaternion();\r\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\r\nconst _target = /*@__PURE__*/ new Vector3();\r\n\r\nconst _position$3 = /*@__PURE__*/ new Vector3();\r\nconst _scale$2 = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\r\n\r\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\r\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\r\n\r\nconst _addedEvent = { type: 'added' };\r\nconst _removedEvent = { type: 'removed' };\r\n\r\nconst _childaddedEvent = { type: 'childadded', child: null };\r\nconst _childremovedEvent = { type: 'childremoved', child: null };\r\n\r\nclass Object3D extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isObject3D = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\r\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\r\n\r\n\t\tconst position = new Vector3();\r\n\t\tconst rotation = new Euler();\r\n\t\tconst quaternion = new Quaternion();\r\n\t\tconst scale = new Vector3( 1, 1, 1 );\r\n\r\n\t\tfunction onRotationChange() {\r\n\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onQuaternionChange() {\r\n\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t\trotation._onChange( onRotationChange );\r\n\t\tquaternion._onChange( onQuaternionChange );\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.matrixWorld = new Matrix4();\r\n\r\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\r\n\r\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\tthis.layers = new Layers();\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\r\n\t\tthis.animations = [];\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\r\n\r\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\r\n\r\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n\r\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tthis.matrix.premultiply( matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\tthis.quaternion.premultiply( q );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRotationFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t}\r\n\r\n\tsetRotationFromEuler( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t}\r\n\r\n\tsetRotationFromMatrix( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t}\r\n\r\n\tsetRotationFromQuaternion( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t}\r\n\r\n\trotateOnAxis( axis, angle ) {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\t_q1.setFromAxisAngle( axis, angle );\r\n\r\n\t\tthis.quaternion.multiply( _q1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateOnWorldAxis( axis, angle ) {\r\n\r\n\t\t// rotate object on axis in world space\r\n\t\t// axis is assumed to be normalized\r\n\t\t// method assumes no rotated parent\r\n\r\n\t\t_q1.setFromAxisAngle( axis, angle );\r\n\r\n\t\tthis.quaternion.premultiply( _q1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateX( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _xAxis, angle );\r\n\r\n\t}\r\n\r\n\trotateY( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _yAxis, angle );\r\n\r\n\t}\r\n\r\n\trotateZ( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _zAxis, angle );\r\n\r\n\t}\r\n\r\n\ttranslateOnAxis( axis, distance ) {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslateX( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _xAxis, distance );\r\n\r\n\t}\r\n\r\n\ttranslateY( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _yAxis, distance );\r\n\r\n\t}\r\n\r\n\ttranslateZ( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _zAxis, distance );\r\n\r\n\t}\r\n\r\n\tlocalToWorld( vector ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\tworldToLocal( vector ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\r\n\r\n\t}\r\n\r\n\tlookAt( x, y, z ) {\r\n\r\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t_target.copy( x );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_target.set( x, y, z );\r\n\r\n\t\t}\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tif ( this.isCamera || this.isLight ) {\r\n\r\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\r\n\r\n\t\t}\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\r\n\r\n\t\tif ( parent ) {\r\n\r\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\r\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\r\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tadd( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object && object.isObject3D ) {\r\n\r\n\t\t\tobject.removeFromParent();\r\n\t\t\tobject.parent = this;\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t\tobject.dispatchEvent( _addedEvent );\r\n\r\n\t\t\t_childaddedEvent.child = object;\r\n\t\t\tthis.dispatchEvent( _childaddedEvent );\r\n\t\t\t_childaddedEvent.child = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremove( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\tobject.dispatchEvent( _removedEvent );\r\n\r\n\t\t\t_childremovedEvent.child = object;\r\n\t\t\tthis.dispatchEvent( _childremovedEvent );\r\n\t\t\t_childremovedEvent.child = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremoveFromParent() {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tparent.remove( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\treturn this.remove( ... this.children );\r\n\r\n\t}\r\n\r\n\tattach( object ) {\r\n\r\n\t\t// adds object as a child of this, while maintaining the object's world transform\r\n\r\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t_m1$3.copy( this.matrixWorld ).invert();\r\n\r\n\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\tobject.parent.updateWorldMatrix( true, false );\r\n\r\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tobject.applyMatrix4( _m1$3 );\r\n\r\n\t\tobject.removeFromParent();\r\n\t\tobject.parent = this;\r\n\t\tthis.children.push( object );\r\n\r\n\t\tobject.updateWorldMatrix( false, true );\r\n\r\n\t\tobject.dispatchEvent( _addedEvent );\r\n\r\n\t\t_childaddedEvent.child = object;\r\n\t\tthis.dispatchEvent( _childaddedEvent );\r\n\t\t_childaddedEvent.child = null;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetObjectById( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t}\r\n\r\n\tgetObjectByName( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t}\r\n\r\n\tgetObjectByProperty( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = this.children[ i ];\r\n\t\t\tconst object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\tgetObjectsByProperty( name, value, result = [] ) {\r\n\r\n\t\tif ( this[ name ] === value ) result.push( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tgetWorldPosition( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\tgetWorldQuaternion( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetWorldScale( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetWorldDirection( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tconst e = this.matrixWorld.elements;\r\n\r\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n\r\n\t}\r\n\r\n\traycast( /* raycaster, intersects */ ) {}\r\n\r\n\ttraverse( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttraverseVisible( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttraverseAncestors( callback ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrix() {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = children[ i ];\r\n\r\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\r\n\r\n\t\t\t\tchild.updateMatrixWorld( force );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateWorldMatrix( updateParents, updateChildren ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\r\n\r\n\t\t\tparent.updateWorldMatrix( true, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tif ( this.parent === null ) {\r\n\r\n\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tif ( updateChildren === true ) {\r\n\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = children[ i ];\r\n\r\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\t// meta is a string when called from JSON.stringify\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tconst output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tshapes: {},\r\n\t\t\t\tskeletons: {},\r\n\t\t\t\tanimations: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tconst object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\r\n\r\n\t\tobject.layers = this.layers.mask;\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\t\tobject.up = this.up.toArray();\r\n\r\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n\r\n\t\t// object specific properties\r\n\r\n\t\tif ( this.isInstancedMesh ) {\r\n\r\n\t\t\tobject.type = 'InstancedMesh';\r\n\t\t\tobject.count = this.count;\r\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\r\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isBatchedMesh ) {\r\n\r\n\t\t\tobject.type = 'BatchedMesh';\r\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\r\n\t\t\tobject.sortObjects = this.sortObjects;\r\n\r\n\t\t\tobject.drawRanges = this._drawRanges;\r\n\t\t\tobject.reservedRanges = this._reservedRanges;\r\n\r\n\t\t\tobject.visibility = this._visibility;\r\n\t\t\tobject.active = this._active;\r\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\r\n\t\t\t\tboxInitialized: bound.boxInitialized,\r\n\t\t\t\tboxMin: bound.box.min.toArray(),\r\n\t\t\t\tboxMax: bound.box.max.toArray(),\r\n\r\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\r\n\t\t\t\tsphereRadius: bound.sphere.radius,\r\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\r\n\t\t\t} ) );\r\n\r\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\r\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\r\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\r\n\r\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\r\n\t\t\tobject.geometryCount = this._geometryCount;\r\n\r\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\r\n\r\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tobject.boundingSphere = {\r\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: object.boundingSphere.radius\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tobject.boundingBox = {\r\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\r\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction serialize( library, element ) {\r\n\r\n\t\t\tif ( library[ element.uuid ] === undefined ) {\r\n\r\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn element.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isScene ) {\r\n\r\n\t\t\tif ( this.background ) {\r\n\r\n\t\t\t\tif ( this.background.isColor ) {\r\n\r\n\t\t\t\t\tobject.background = this.background.toJSON();\r\n\r\n\t\t\t\t} else if ( this.background.isTexture ) {\r\n\r\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\r\n\r\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\r\n\r\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\r\n\r\n\t\t\tconst parameters = this.geometry.parameters;\r\n\r\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n\r\n\t\t\t\tconst shapes = parameters.shapes;\r\n\r\n\t\t\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\t\t\t\tserialize( meta.shapes, shape );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tserialize( meta.shapes, shapes );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isSkinnedMesh ) {\r\n\r\n\t\t\tobject.bindMode = this.bindMode;\r\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\r\n\r\n\t\t\tif ( this.skeleton !== undefined ) {\r\n\r\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\r\n\r\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( Array.isArray( this.material ) ) {\r\n\r\n\t\t\t\tconst uuids = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.material = uuids;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.animations.length > 0 ) {\r\n\r\n\t\t\tobject.animations = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\t\tconst animation = this.animations[ i ];\r\n\r\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tconst geometries = extractFromCache( meta.geometries );\r\n\t\t\tconst materials = extractFromCache( meta.materials );\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst shapes = extractFromCache( meta.shapes );\r\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\r\n\t\t\tconst animations = extractFromCache( meta.animations );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\r\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\r\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\r\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive = true ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.rotation.order = source.rotation.order;\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.layers.mask = source.layers.mask;\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.animations = source.animations.slice();\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\r\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\r\n\r\nconst _v0$1 = /*@__PURE__*/ new Vector3();\r\nconst _v1$3 = /*@__PURE__*/ new Vector3();\r\nconst _v2$2 = /*@__PURE__*/ new Vector3();\r\nconst _v3$2 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vab = /*@__PURE__*/ new Vector3();\r\nconst _vac = /*@__PURE__*/ new Vector3();\r\nconst _vbc = /*@__PURE__*/ new Vector3();\r\nconst _vap = /*@__PURE__*/ new Vector3();\r\nconst _vbp = /*@__PURE__*/ new Vector3();\r\nconst _vcp = /*@__PURE__*/ new Vector3();\r\n\r\nclass Triangle {\r\n\r\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\r\n\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\r\n\t}\r\n\r\n\tstatic getNormal( a, b, c, target ) {\r\n\r\n\t\ttarget.subVectors( c, b );\r\n\t\t_v0$1.subVectors( a, b );\r\n\t\ttarget.cross( _v0$1 );\r\n\r\n\t\tconst targetLengthSq = target.lengthSq();\r\n\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t}\r\n\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tstatic getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t_v0$1.subVectors( c, a );\r\n\t\t_v1$3.subVectors( b, a );\r\n\t\t_v2$2.subVectors( point, a );\r\n\r\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\r\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\r\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\r\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\r\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\r\n\r\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\ttarget.set( 0, 0, 0 );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst invDenom = 1 / denom;\r\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t}\r\n\r\n\tstatic containsPoint( point, a, b, c ) {\r\n\r\n\t\t// if the triangle is degenerate then we can't contain a point\r\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\r\n\r\n\t}\r\n\r\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\r\n\r\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\r\n\r\n\t\t\ttarget.x = 0;\r\n\t\t\ttarget.y = 0;\r\n\t\t\tif ( 'z' in target ) target.z = 0;\r\n\t\t\tif ( 'w' in target ) target.w = 0;\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.setScalar( 0 );\r\n\t\ttarget.addScaledVector( v1, _v3$2.x );\r\n\t\ttarget.addScaledVector( v2, _v3$2.y );\r\n\t\ttarget.addScaledVector( v3, _v3$2.z );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tstatic isFrontFacing( a, b, c, direction ) {\r\n\r\n\t\t_v0$1.subVectors( c, b );\r\n\t\t_v1$3.subVectors( a, b );\r\n\r\n\t\t// strictly front facing\r\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\r\n\r\n\t}\r\n\r\n\tset( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\r\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\r\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetArea() {\r\n\r\n\t\t_v0$1.subVectors( this.c, this.b );\r\n\t\t_v1$3.subVectors( this.a, this.b );\r\n\r\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\r\n\r\n\t}\r\n\r\n\tgetMidpoint( target ) {\r\n\r\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t}\r\n\r\n\tgetNormal( target ) {\r\n\r\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\tgetPlane( target ) {\r\n\r\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\tgetBarycoord( point, target ) {\r\n\r\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\tgetInterpolation( point, v1, v2, v3, target ) {\r\n\r\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\tisFrontFacing( direction ) {\r\n\r\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsTriangle( this );\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( p, target ) {\r\n\r\n\t\tconst a = this.a, b = this.b, c = this.c;\r\n\t\tlet v, w;\r\n\r\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t_vab.subVectors( b, a );\r\n\t\t_vac.subVectors( c, a );\r\n\t\t_vap.subVectors( p, a );\r\n\t\tconst d1 = _vab.dot( _vap );\r\n\t\tconst d2 = _vac.dot( _vap );\r\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\treturn target.copy( a );\r\n\r\n\t\t}\r\n\r\n\t\t_vbp.subVectors( p, b );\r\n\t\tconst d3 = _vab.dot( _vbp );\r\n\t\tconst d4 = _vac.dot( _vbp );\r\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\treturn target.copy( b );\r\n\r\n\t\t}\r\n\r\n\t\tconst vc = d1 * d4 - d3 * d2;\r\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\r\n\r\n\t\t}\r\n\r\n\t\t_vcp.subVectors( p, c );\r\n\t\tconst d5 = _vab.dot( _vcp );\r\n\t\tconst d6 = _vac.dot( _vcp );\r\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\treturn target.copy( c );\r\n\r\n\t\t}\r\n\r\n\t\tconst vb = d5 * d2 - d1 * d6;\r\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\r\n\r\n\t\t}\r\n\r\n\t\tconst va = d3 * d6 - d5 * d4;\r\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t_vbc.subVectors( c, b );\r\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\r\n\r\n\t\t}\r\n\r\n\t\t// face region\r\n\t\tconst denom = 1 / ( va + vb + vc );\r\n\t\t// u = va * denom\r\n\t\tv = vb * denom;\r\n\t\tw = vc * denom;\r\n\r\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\r\n\r\n\t}\r\n\r\n\tequals( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\nconst _hslA = { h: 0, s: 0, l: 0 };\r\nconst _hslB = { h: 0, s: 0, l: 0 };\r\n\r\nfunction hue2rgb( p, q, t ) {\r\n\r\n\tif ( t < 0 ) t += 1;\r\n\tif ( t > 1 ) t -= 1;\r\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\tif ( t < 1 / 2 ) return q;\r\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\treturn p;\r\n\r\n}\r\n\r\nclass Color {\r\n\r\n\tconstructor( r, g, b ) {\r\n\r\n\t\tthis.isColor = true;\r\n\r\n\t\tthis.r = 1;\r\n\t\tthis.g = 1;\r\n\t\tthis.b = 1;\r\n\r\n\t\treturn this.set( r, g, b );\r\n\r\n\t}\r\n\r\n\tset( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\r\n\t\t\tconst value = r;\r\n\r\n\t\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\t\tthis.copy( value );\r\n\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\t\tthis.setHex( value );\r\n\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\t\tthis.setStyle( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.setRGB( r, g, b );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\th = euclideanModulo( h, 1 );\r\n\t\ts = clamp( s, 0, 1 );\r\n\t\tl = clamp( l, 0, 1 );\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tconst q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tlet m;\r\n\r\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tlet color;\r\n\t\t\tconst name = m[ 1 ];\r\n\t\t\tconst components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL(\r\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\r\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\r\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tconst hex = m[ 1 ];\r\n\t\t\tconst size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\r\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\r\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\r\n\t\t\t\t\tcolorSpace\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( style && style.length > 0 ) {\r\n\r\n\t\t\treturn this.setColorName( style, colorSpace );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\t// color keywords\r\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\r\n\r\n\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t// red\r\n\t\t\tthis.setHex( hex, colorSpace );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// unknown color\r\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n\tcopy( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopySRGBToLinear( color ) {\r\n\r\n\t\tthis.r = SRGBToLinear( color.r );\r\n\t\tthis.g = SRGBToLinear( color.g );\r\n\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyLinearToSRGB( color ) {\r\n\r\n\t\tthis.r = LinearToSRGB( color.r );\r\n\t\tthis.g = LinearToSRGB( color.g );\r\n\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertSRGBToLinear() {\r\n\r\n\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertLinearToSRGB() {\r\n\r\n\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetHex( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\r\n\r\n\t}\r\n\r\n\tgetHexString( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\r\n\r\n\t}\r\n\r\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\r\n\r\n\t\tconst max = Math.max( r, g, b );\r\n\t\tconst min = Math.min( r, g, b );\r\n\r\n\t\tlet hue, saturation;\r\n\t\tconst lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.h = hue;\r\n\t\ttarget.s = saturation;\r\n\t\ttarget.l = lightness;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\ttarget.r = _color.r;\r\n\t\ttarget.g = _color.g;\r\n\t\ttarget.b = _color.b;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetStyle( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\r\n\r\n\t\tif ( colorSpace !== SRGBColorSpace ) {\r\n\r\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\r\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\r\n\r\n\t\t}\r\n\r\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\r\n\r\n\t}\r\n\r\n\toffsetHSL( h, s, l ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\r\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\r\n\r\n\t}\r\n\r\n\tadd( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddColors( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( color ) {\r\n\r\n\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerp( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpColors( color1, color2, alpha ) {\r\n\r\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\r\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\r\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpHSL( color, alpha ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\t\tcolor.getHSL( _hslB );\r\n\r\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\r\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\r\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\r\n\r\n\t\tthis.setHSL( h, s, l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\tthis.r = v.x;\r\n\t\tthis.g = v.y;\r\n\t\tthis.b = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst r = this.r, g = this.g, b = this.b;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\r\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\r\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.r = attribute.getX( index );\r\n\t\tthis.g = attribute.getY( index );\r\n\t\tthis.b = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.getHex();\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.r;\r\n\t\tyield this.g;\r\n\t\tyield this.b;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _color = /*@__PURE__*/ new Color();\r\n\r\nColor.NAMES = _colorKeywords;\r\n\r\nlet _materialId = 0;\r\n\r\nclass Material extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMaterial = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\r\n\t\tthis.blending = NormalBlending;\r\n\t\tthis.side = FrontSide;\r\n\t\tthis.vertexColors = false;\r\n\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\tthis.alphaHash = false;\r\n\r\n\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.blendColor = new Color( 0, 0, 0 );\r\n\t\tthis.blendAlpha = 0;\r\n\r\n\t\tthis.depthFunc = LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\r\n\t\tthis.stencilWriteMask = 0xff;\r\n\t\tthis.stencilFunc = AlwaysStencilFunc;\r\n\t\tthis.stencilRef = 0;\r\n\t\tthis.stencilFuncMask = 0xff;\r\n\t\tthis.stencilFail = KeepStencilOp;\r\n\t\tthis.stencilZFail = KeepStencilOp;\r\n\t\tthis.stencilZPass = KeepStencilOp;\r\n\t\tthis.stencilWrite = false;\r\n\r\n\t\tthis.clippingPlanes = null;\r\n\t\tthis.clipIntersection = false;\r\n\t\tthis.clipShadows = false;\r\n\r\n\t\tthis.shadowSide = null;\r\n\r\n\t\tthis.colorWrite = true;\r\n\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\r\n\t\tthis.dithering = false;\r\n\r\n\t\tthis.alphaToCoverage = false;\r\n\t\tthis.premultipliedAlpha = false;\r\n\t\tthis.forceSinglePass = false;\r\n\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.toneMapped = true;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t\tthis._alphaTest = 0;\r\n\r\n\t}\r\n\r\n\tget alphaTest() {\r\n\r\n\t\treturn this._alphaTest;\r\n\r\n\t}\r\n\r\n\tset alphaTest( value ) {\r\n\r\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._alphaTest = value;\r\n\r\n\t}\r\n\r\n\tonBuild( /* shaderobject, renderer */ ) {}\r\n\r\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\r\n\r\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\r\n\r\n\tcustomProgramCacheKey() {\r\n\r\n\t\treturn this.onBeforeCompile.toString();\r\n\r\n\t}\r\n\r\n\tsetValues( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( const key in values ) {\r\n\r\n\t\t\tconst newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue && currentValue.isColor ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n\r\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\r\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\r\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\r\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n\r\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\r\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\r\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\r\n\r\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\r\n\r\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\r\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\r\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\r\n\r\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\r\n\r\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\r\n\r\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\r\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\r\n\r\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\r\n\r\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\r\n\r\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\r\n\r\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.envMap && this.envMap.isTexture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\r\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\r\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\r\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\r\n\r\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\r\n\r\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\r\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\r\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\r\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\r\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = true;\r\n\r\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\r\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\r\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\r\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\r\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\r\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\r\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\r\n\r\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\r\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\r\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\r\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\r\n\r\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\r\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\r\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\r\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\r\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\r\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\r\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\r\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\r\n\r\n\t\t// rotation (SpriteMaterial)\r\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\r\n\r\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\r\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\r\n\r\n\t\tif ( this.dithering === true ) data.dithering = true;\r\n\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\r\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\r\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\r\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\r\n\r\n\t\tif ( this.wireframe === true ) data.wireframe = true;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\t\tif ( this.flatShading === true ) data.flatShading = true;\r\n\r\n\t\tif ( this.visible === false ) data.visible = false;\r\n\r\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\r\n\r\n\t\tif ( this.fog === false ) data.fog = false;\r\n\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.blending = source.blending;\r\n\t\tthis.side = source.side;\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\tthis.blendColor.copy( source.blendColor );\r\n\t\tthis.blendAlpha = source.blendAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\r\n\t\tthis.stencilFunc = source.stencilFunc;\r\n\t\tthis.stencilRef = source.stencilRef;\r\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\r\n\t\tthis.stencilFail = source.stencilFail;\r\n\t\tthis.stencilZFail = source.stencilZFail;\r\n\t\tthis.stencilZPass = source.stencilZPass;\r\n\t\tthis.stencilWrite = source.stencilWrite;\r\n\r\n\t\tconst srcPlanes = source.clippingPlanes;\r\n\t\tlet dstPlanes = null;\r\n\r\n\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\tconst n = srcPlanes.length;\r\n\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.clippingPlanes = dstPlanes;\r\n\t\tthis.clipIntersection = source.clipIntersection;\r\n\t\tthis.clipShadows = source.clipShadows;\r\n\r\n\t\tthis.shadowSide = source.shadowSide;\r\n\r\n\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.dithering = source.dithering;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\t\tthis.alphaHash = source.alphaHash;\r\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\r\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\t\tthis.forceSinglePass = source.forceSinglePass;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.toneMapped = source.toneMapped;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshBasicMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshBasicMaterial = true;\r\n\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // emissive\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\r\n\r\nconst _tables = /*@__PURE__*/ _generateTables();\r\n\r\nfunction _generateTables() {\r\n\r\n\t// float32 to float16 helpers\r\n\r\n\tconst buffer = new ArrayBuffer( 4 );\r\n\tconst floatView = new Float32Array( buffer );\r\n\tconst uint32View = new Uint32Array( buffer );\r\n\r\n\tconst baseTable = new Uint32Array( 512 );\r\n\tconst shiftTable = new Uint32Array( 512 );\r\n\r\n\tfor ( let i = 0; i < 256; ++ i ) {\r\n\r\n\t\tconst e = i - 127;\r\n\r\n\t\t// very small number (0, -0)\r\n\r\n\t\tif ( e < - 27 ) {\r\n\r\n\t\t\tbaseTable[ i ] = 0x0000;\r\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\r\n\t\t\tshiftTable[ i ] = 24;\r\n\t\t\tshiftTable[ i | 0x100 ] = 24;\r\n\r\n\t\t\t// small number (denorm)\r\n\r\n\t\t} else if ( e < - 14 ) {\r\n\r\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\r\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\r\n\t\t\tshiftTable[ i ] = - e - 1;\r\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\r\n\r\n\t\t\t// normal number\r\n\r\n\t\t} else if ( e <= 15 ) {\r\n\r\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\r\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\r\n\t\t\tshiftTable[ i ] = 13;\r\n\t\t\tshiftTable[ i | 0x100 ] = 13;\r\n\r\n\t\t\t// large number (Infinity, -Infinity)\r\n\r\n\t\t} else if ( e < 128 ) {\r\n\r\n\t\t\tbaseTable[ i ] = 0x7c00;\r\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\r\n\t\t\tshiftTable[ i ] = 24;\r\n\t\t\tshiftTable[ i | 0x100 ] = 24;\r\n\r\n\t\t\t// stay (NaN, Infinity, -Infinity)\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbaseTable[ i ] = 0x7c00;\r\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\r\n\t\t\tshiftTable[ i ] = 13;\r\n\t\t\tshiftTable[ i | 0x100 ] = 13;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// float16 to float32 helpers\r\n\r\n\tconst mantissaTable = new Uint32Array( 2048 );\r\n\tconst exponentTable = new Uint32Array( 64 );\r\n\tconst offsetTable = new Uint32Array( 64 );\r\n\r\n\tfor ( let i = 1; i < 1024; ++ i ) {\r\n\r\n\t\tlet m = i << 13; // zero pad mantissa bits\r\n\t\tlet e = 0; // zero exponent\r\n\r\n\t\t// normalized\r\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\r\n\r\n\t\t\tm <<= 1;\r\n\t\t\te -= 0x00800000; // decrement exponent\r\n\r\n\t\t}\r\n\r\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\r\n\t\te += 0x38800000; // adjust bias\r\n\r\n\t\tmantissaTable[ i ] = m | e;\r\n\r\n\t}\r\n\r\n\tfor ( let i = 1024; i < 2048; ++ i ) {\r\n\r\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 1; i < 31; ++ i ) {\r\n\r\n\t\texponentTable[ i ] = i << 23;\r\n\r\n\t}\r\n\r\n\texponentTable[ 31 ] = 0x47800000;\r\n\texponentTable[ 32 ] = 0x80000000;\r\n\r\n\tfor ( let i = 33; i < 63; ++ i ) {\r\n\r\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\r\n\r\n\t}\r\n\r\n\texponentTable[ 63 ] = 0xc7800000;\r\n\r\n\tfor ( let i = 1; i < 64; ++ i ) {\r\n\r\n\t\tif ( i !== 32 ) {\r\n\r\n\t\t\toffsetTable[ i ] = 1024;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tfloatView: floatView,\r\n\t\tuint32View: uint32View,\r\n\t\tbaseTable: baseTable,\r\n\t\tshiftTable: shiftTable,\r\n\t\tmantissaTable: mantissaTable,\r\n\t\texponentTable: exponentTable,\r\n\t\toffsetTable: offsetTable\r\n\t};\r\n\r\n}\r\n\r\n// float32 to float16\r\n\r\nfunction toHalfFloat( val ) {\r\n\r\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\r\n\r\n\tval = clamp( val, - 65504, 65504 );\r\n\r\n\t_tables.floatView[ 0 ] = val;\r\n\tconst f = _tables.uint32View[ 0 ];\r\n\tconst e = ( f >> 23 ) & 0x1ff;\r\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\r\n\r\n}\r\n\r\n// float16 to float32\r\n\r\nfunction fromHalfFloat( val ) {\r\n\r\n\tconst m = val >> 10;\r\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\r\n\treturn _tables.floatView[ 0 ];\r\n\r\n}\r\n\r\nconst DataUtils = {\r\n\ttoHalfFloat: toHalfFloat,\r\n\tfromHalfFloat: fromHalfFloat,\r\n};\r\n\r\nconst _vector$9 = /*@__PURE__*/ new Vector3();\r\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\r\n\r\nclass BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized = false ) {\r\n\r\n\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isBufferAttribute = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\tthis.normalized = normalized;\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis._updateRange = { offset: 0, count: - 1 };\r\n\t\tthis.updateRanges = [];\r\n\t\tthis.gpuType = FloatType;\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tonUploadCallback() {}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tget updateRange() {\r\n\r\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\r\n\t\treturn this._updateRange;\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddUpdateRange( start, count ) {\r\n\r\n\t\tthis.updateRanges.push( { start, count } );\r\n\r\n\t}\r\n\r\n\tclearUpdateRanges() {\r\n\r\n\t\tthis.updateRanges.length = 0;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\t\tthis.count = source.count;\r\n\t\tthis.normalized = source.normalized;\r\n\r\n\t\tthis.usage = source.usage;\r\n\t\tthis.gpuType = source.gpuType;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyAt( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyArray( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tif ( this.itemSize === 2 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\r\n\t\t\t\t_vector2$1.applyMatrix3( m );\r\n\r\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.itemSize === 3 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\t\t\t\t_vector$9.applyMatrix3( m );\r\n\r\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$9.applyMatrix4( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$9.applyNormalMatrix( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$9.transformDirection( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( value, offset = 0 ) {\r\n\r\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index, component ) {\r\n\r\n\t\tlet value = this.array[ index * this.itemSize + component ];\r\n\r\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, component, value ) {\r\n\r\n\t\tif ( this.normalized ) value = normalize( value, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + component ] = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = this.array[ index * this.itemSize ];\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tonUpload( callback ) {\r\n\r\n\t\tthis.onUploadCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\titemSize: this.itemSize,\r\n\t\t\ttype: this.array.constructor.name,\r\n\t\t\tarray: Array.from( this.array ),\r\n\t\t\tnormalized: this.normalized\r\n\t\t};\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//\r\n\r\nclass Int8BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint8BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Int16BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint16BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Int32BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint32BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Float16BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t\tthis.isFloat16BufferAttribute = true;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\r\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nclass Float32BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _id$2 = 0;\r\n\r\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\r\nconst _obj = /*@__PURE__*/ new Object3D();\r\nconst _offset = /*@__PURE__*/ new Vector3();\r\nconst _box$2 = /*@__PURE__*/ new Box3();\r\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\r\nconst _vector$8 = /*@__PURE__*/ new Vector3();\r\n\r\nclass BufferGeometry extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isBufferGeometry = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\r\n\t\tthis.morphAttributes = {};\r\n\t\tthis.morphTargetsRelative = false;\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tgetIndex() {\r\n\r\n\t\treturn this.index;\r\n\r\n\t}\r\n\r\n\tsetIndex( index ) {\r\n\r\n\t\tif ( Array.isArray( index ) ) {\r\n\r\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.index = index;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetAttribute( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t}\r\n\r\n\tsetAttribute( name, attribute ) {\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeleteAttribute( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\thasAttribute( name ) {\r\n\r\n\t\treturn this.attributes[ name ] !== undefined;\r\n\r\n\t}\r\n\r\n\taddGroup( start, count, materialIndex = 0 ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tclearGroups() {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t}\r\n\r\n\tsetDrawRange( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tconst position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tposition.applyMatrix4( matrix );\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst tangent = this.attributes.tangent;\r\n\r\n\t\tif ( tangent !== undefined ) {\r\n\r\n\t\t\ttangent.transformDirection( matrix );\r\n\r\n\t\t\ttangent.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\t_m1$2.makeRotationFromQuaternion( q );\r\n\r\n\t\tthis.applyMatrix4( _m1$2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateX( angle ) {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\t_m1$2.makeRotationX( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1$2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateY( angle ) {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\t_m1$2.makeRotationY( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1$2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateZ( angle ) {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\t_m1$2.makeRotationZ( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1$2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( x, y, z ) {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\t_m1$2.makeTranslation( x, y, z );\r\n\r\n\t\tthis.applyMatrix4( _m1$2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( x, y, z ) {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\t_m1$2.makeScale( x, y, z );\r\n\r\n\t\tthis.applyMatrix4( _m1$2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlookAt( vector ) {\r\n\r\n\t\t_obj.lookAt( vector );\r\n\r\n\t\t_obj.updateMatrix();\r\n\r\n\t\tthis.applyMatrix4( _obj.matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcenter() {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tthis.boundingBox.getCenter( _offset ).negate();\r\n\r\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tconst position = [];\r\n\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = points[ i ];\r\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.attributes.position;\r\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\tif ( position && position.isGLBufferAttribute ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\r\n\r\n\t\t\tthis.boundingBox.set(\r\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\r\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\r\n\t\t\t);\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.attributes.position;\r\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\tif ( position && position.isGLBufferAttribute ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\r\n\r\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( position ) {\r\n\r\n\t\t\t// first, find the center of the bounding sphere\r\n\r\n\t\t\tconst center = this.boundingSphere.center;\r\n\r\n\t\t\t_box$2.setFromBufferAttribute( position );\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\r\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\r\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\r\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_box$2.getCenter( center );\r\n\r\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\r\n\r\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\r\n\t\t\t\t\t\t\t_vector$8.add( _offset );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeTangents() {\r\n\r\n\t\tconst index = this.index;\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( index === null ||\r\n\t\t\t attributes.position === undefined ||\r\n\t\t\t attributes.normal === undefined ||\r\n\t\t\t attributes.uv === undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst positionAttribute = attributes.position;\r\n\t\tconst normalAttribute = attributes.normal;\r\n\t\tconst uvAttribute = attributes.uv;\r\n\r\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\r\n\r\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\r\n\r\n\t\tconst tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\ttan1[ i ] = new Vector3();\r\n\t\t\ttan2[ i ] = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tconst vA = new Vector3(),\r\n\t\t\tvB = new Vector3(),\r\n\t\t\tvC = new Vector3(),\r\n\r\n\t\t\tuvA = new Vector2(),\r\n\t\t\tuvB = new Vector2(),\r\n\t\t\tuvC = new Vector2(),\r\n\r\n\t\t\tsdir = new Vector3(),\r\n\t\t\ttdir = new Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\r\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\r\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\r\n\r\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\r\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\r\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\r\n\r\n\t\t\tvB.sub( vA );\r\n\t\t\tvC.sub( vA );\r\n\r\n\t\t\tuvB.sub( uvA );\r\n\t\t\tuvC.sub( uvA );\r\n\r\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\r\n\r\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\r\n\r\n\t\t\tif ( ! isFinite( r ) ) return;\r\n\r\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\r\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tlet groups = this.groups;\r\n\r\n\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\tgroups = [ {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tcount: index.count\r\n\t\t\t} ];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\tconst start = group.start;\r\n\t\t\tconst count = group.count;\r\n\r\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\thandleTriangle(\r\n\t\t\t\t\tindex.getX( j + 0 ),\r\n\t\t\t\t\tindex.getX( j + 1 ),\r\n\t\t\t\t\tindex.getX( j + 2 )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\r\n\t\tconst n = new Vector3(), n2 = new Vector3();\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tconst t = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\r\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\tconst start = group.start;\r\n\t\t\tconst count = group.count;\r\n\r\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\r\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\r\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeVertexNormals() {\r\n\r\n\t\tconst index = this.index;\r\n\t\tconst positionAttribute = this.getAttribute( 'position' );\r\n\r\n\t\tif ( positionAttribute !== undefined ) {\r\n\r\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\r\n\r\n\t\t\tif ( normalAttribute === undefined ) {\r\n\r\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\r\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\r\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst vA = index.getX( i + 0 );\r\n\t\t\t\t\tconst vB = index.getX( i + 1 );\r\n\t\t\t\t\tconst vC = index.getX( i + 2 );\r\n\r\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\r\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\r\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\r\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\r\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\r\n\r\n\t\t\t\t\tnA.add( cb );\r\n\t\t\t\t\tnB.add( cb );\r\n\t\t\t\t\tnC.add( cb );\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\r\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\r\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tnormalAttribute.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tnormalizeNormals() {\r\n\r\n\t\tconst normals = this.attributes.normal;\r\n\r\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\r\n\r\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\r\n\r\n\t\t\t_vector$8.normalize();\r\n\r\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoNonIndexed() {\r\n\r\n\t\tfunction convertBufferAttribute( attribute, indices ) {\r\n\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst itemSize = attribute.itemSize;\r\n\t\t\tconst normalized = attribute.normalized;\r\n\r\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\tlet index = 0, index2 = 0;\r\n\r\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.index === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry2 = new BufferGeometry();\r\n\r\n\t\tconst indices = this.index.array;\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// attributes\r\n\r\n\t\tfor ( const name in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ name ];\r\n\r\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\tgeometry2.setAttribute( name, newAttribute );\r\n\r\n\t\t}\r\n\r\n\t\t// morph attributes\r\n\r\n\t\tconst morphAttributes = this.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst morphArray = [];\r\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attribute = morphAttribute[ i ];\r\n\r\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\t\tmorphArray.push( newAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t// groups\r\n\r\n\t\tconst groups = this.groups;\r\n\r\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry2;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tconst parameters = this.parameters;\r\n\r\n\t\t\tfor ( const key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tconst index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ key ];\r\n\r\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\r\n\r\n\t\t}\r\n\r\n\t\tconst morphAttributes = {};\r\n\t\tlet hasMorphAttributes = false;\r\n\r\n\t\tfor ( const key in this.morphAttributes ) {\r\n\r\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attribute = attributeArray[ i ];\r\n\r\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( array.length > 0 ) {\r\n\r\n\t\t\t\tmorphAttributes[ key ] = array;\r\n\r\n\t\t\t\thasMorphAttributes = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( hasMorphAttributes ) {\r\n\r\n\t\t\tdata.data.morphAttributes = morphAttributes;\r\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t}\r\n\r\n\t\tconst groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\t// reset\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\tthis.morphAttributes = {};\r\n\t\tthis.groups = [];\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// used for storing cloned, shared data\r\n\r\n\t\tconst data = {};\r\n\r\n\t\t// name\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\t// index\r\n\r\n\t\tconst index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone( data ) );\r\n\r\n\t\t}\r\n\r\n\t\t// attributes\r\n\r\n\t\tconst attributes = source.attributes;\r\n\r\n\t\tfor ( const name in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ name ];\r\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\r\n\r\n\t\t}\r\n\r\n\t\t// morph attributes\r\n\r\n\t\tconst morphAttributes = source.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst array = [];\r\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\r\n\r\n\t\t// groups\r\n\r\n\t\tconst groups = source.groups;\r\n\r\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// bounding box\r\n\r\n\t\tconst boundingBox = source.boundingBox;\r\n\r\n\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\t// bounding sphere\r\n\r\n\t\tconst boundingSphere = source.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\t// draw range\r\n\r\n\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\tthis.drawRange.count = source.drawRange.count;\r\n\r\n\t\t// user data\r\n\r\n\t\tthis.userData = source.userData;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\r\nconst _ray$3 = /*@__PURE__*/ new Ray();\r\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\r\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vA$1 = /*@__PURE__*/ new Vector3();\r\nconst _vB$1 = /*@__PURE__*/ new Vector3();\r\nconst _vC$1 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _tempA = /*@__PURE__*/ new Vector3();\r\nconst _morphA = /*@__PURE__*/ new Vector3();\r\n\r\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\r\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\r\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\r\n\r\nconst _normalA = /*@__PURE__*/ new Vector3();\r\nconst _normalB = /*@__PURE__*/ new Vector3();\r\nconst _normalC = /*@__PURE__*/ new Vector3();\r\n\r\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\r\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\r\n\r\nclass Mesh extends Object3D {\r\n\r\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMesh = true;\r\n\r\n\t\tthis.type = 'Mesh';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\r\n\t\t}\r\n\r\n\t\tif ( source.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n\r\n\t\t}\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetVertexPosition( index, target ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst position = geometry.attributes.position;\r\n\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\r\n\t\ttarget.fromBufferAttribute( position, index );\r\n\r\n\t\tconst morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\tif ( morphPosition && morphInfluences ) {\r\n\r\n\t\t\t_morphA.set( 0, 0, 0 );\r\n\r\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst influence = morphInfluences[ i ];\r\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\r\n\r\n\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\r\n\r\n\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.add( _morphA );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst material = this.material;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere in world space\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere$6.copy( geometry.boundingSphere );\r\n\t\t_sphere$6.applyMatrix4( matrixWorld );\r\n\r\n\t\t// check distance from ray origin to bounding sphere\r\n\r\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\r\n\r\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\r\n\r\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\r\n\r\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// convert ray to local space of mesh\r\n\r\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\r\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\r\n\r\n\t\t// test with bounding box in local space\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// test for intersections with geometry\r\n\r\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\r\n\r\n\t}\r\n\r\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\r\n\r\n\t\tlet intersection;\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst material = this.material;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst position = geometry.attributes.position;\r\n\t\tconst uv = geometry.attributes.uv;\r\n\t\tconst uv1 = geometry.attributes.uv1;\r\n\t\tconst normal = geometry.attributes.normal;\r\n\t\tconst groups = geometry.groups;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\t// indexed buffer geometry\r\n\r\n\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n\r\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = index.getX( j );\r\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\r\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst a = index.getX( i );\r\n\t\t\t\t\tconst b = index.getX( i + 1 );\r\n\t\t\t\t\tconst c = index.getX( i + 2 );\r\n\r\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t// non-indexed buffer geometry\r\n\r\n\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n\r\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = j;\r\n\t\t\t\t\t\tconst b = j + 1;\r\n\t\t\t\t\t\tconst c = j + 2;\r\n\r\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst a = i;\r\n\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\tconst c = i + 2;\r\n\r\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\tlet intersect;\r\n\r\n\tif ( material.side === BackSide ) {\r\n\r\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t} else {\r\n\r\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\r\n\r\n\t}\r\n\r\n\tif ( intersect === null ) return null;\r\n\r\n\t_intersectionPointWorld.copy( point );\r\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\treturn {\r\n\t\tdistance: distance,\r\n\t\tpoint: _intersectionPointWorld.clone(),\r\n\t\tobject: object\r\n\t};\r\n\r\n}\r\n\r\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\r\n\r\n\tobject.getVertexPosition( a, _vA$1 );\r\n\tobject.getVertexPosition( b, _vB$1 );\r\n\tobject.getVertexPosition( c, _vC$1 );\r\n\r\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tif ( uv ) {\r\n\r\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\r\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\r\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\r\n\r\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv1 ) {\r\n\r\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\r\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\r\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\r\n\r\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( normal ) {\r\n\r\n\t\t\t_normalA.fromBufferAttribute( normal, a );\r\n\t\t\t_normalB.fromBufferAttribute( normal, b );\r\n\t\t\t_normalC.fromBufferAttribute( normal, c );\r\n\r\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\r\n\r\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\r\n\r\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst face = {\r\n\t\t\ta: a,\r\n\t\t\tb: b,\r\n\t\t\tc: c,\r\n\t\t\tnormal: new Vector3(),\r\n\t\t\tmaterialIndex: 0\r\n\t\t};\r\n\r\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\r\n\r\n\t\tintersection.face = face;\r\n\r\n\t}\r\n\r\n\treturn intersection;\r\n\r\n}\r\n\r\nclass BoxGeometry extends BufferGeometry {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'BoxGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\t// segments\r\n\r\n\t\twidthSegments = Math.floor( widthSegments );\r\n\t\theightSegments = Math.floor( heightSegments );\r\n\t\tdepthSegments = Math.floor( depthSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet numberOfVertices = 0;\r\n\t\tlet groupStart = 0;\r\n\r\n\t\t// build each side of the box geometry\r\n\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\t\tlet vertexCounter = 0;\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\tconst vector = new Vector3();\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\r\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\r\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// uvs\r\n\r\n\t\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t\t\t// counters\r\n\r\n\t\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// increase counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t\t// update total number of vertices\r\n\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nfunction cloneUniforms( src ) {\r\n\r\n\tconst dst = {};\r\n\r\n\tfor ( const u in src ) {\r\n\r\n\t\tdst[ u ] = {};\r\n\r\n\t\tfor ( const p in src[ u ] ) {\r\n\r\n\t\t\tconst property = src[ u ][ p ];\r\n\r\n\t\t\tif ( property && ( property.isColor ||\r\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\r\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\r\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\r\n\r\n\t\t\t\tif ( property.isRenderTargetTexture ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\r\n\t\t\t\t\tdst[ u ][ p ] = null;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( Array.isArray( property ) ) {\r\n\r\n\t\t\t\tdst[ u ][ p ] = property.slice();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdst[ u ][ p ] = property;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn dst;\r\n\r\n}\r\n\r\nfunction mergeUniforms( uniforms ) {\r\n\r\n\tconst merged = {};\r\n\r\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\r\n\r\n\t\tfor ( const p in tmp ) {\r\n\r\n\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn merged;\r\n\r\n}\r\n\r\nfunction cloneUniformsGroups( src ) {\r\n\r\n\tconst dst = [];\r\n\r\n\tfor ( let u = 0; u < src.length; u ++ ) {\r\n\r\n\t\tdst.push( src[ u ].clone() );\r\n\r\n\t}\r\n\r\n\treturn dst;\r\n\r\n}\r\n\r\nfunction getUnlitUniformColorSpace( renderer ) {\r\n\r\n\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\tif ( currentRenderTarget === null ) {\r\n\r\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\r\n\t\treturn renderer.outputColorSpace;\r\n\r\n\t}\r\n\r\n\t// https://github.com/mrdoob/three.js/issues/27868\r\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\treturn currentRenderTarget.texture.colorSpace;\r\n\r\n\t}\r\n\r\n\treturn ColorManagement.workingColorSpace;\r\n\r\n}\r\n\r\n// Legacy\r\n\r\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\r\n\r\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\r\n\r\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\r\n\r\nclass ShaderMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isShaderMaterial = true;\r\n\r\n\t\tthis.type = 'ShaderMaterial';\r\n\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\tthis.uniformsGroups = [];\r\n\r\n\t\tthis.vertexShader = default_vertex;\r\n\t\tthis.fragmentShader = default_fragment;\r\n\r\n\t\tthis.linewidth = 1;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\tthis.forceSinglePass = true;\r\n\r\n\t\tthis.extensions = {\r\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\r\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\r\n\t\t};\r\n\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv1': [ 0, 0 ]\r\n\t\t};\r\n\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\tthis.uniformsNeedUpdate = false;\r\n\r\n\t\tthis.glslVersion = null;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tthis.setValues( parameters );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\r\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\r\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\r\n\r\n\t\tthis.defines = Object.assign( {}, source.defines );\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.fog = source.fog;\r\n\t\tthis.lights = source.lights;\r\n\t\tthis.clipping = source.clipping;\r\n\r\n\t\tthis.extensions = Object.assign( {}, source.extensions );\r\n\r\n\t\tthis.glslVersion = source.glslVersion;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.glslVersion = this.glslVersion;\r\n\t\tdata.uniforms = {};\r\n\r\n\t\tfor ( const name in this.uniforms ) {\r\n\r\n\t\t\tconst uniform = this.uniforms[ name ];\r\n\t\t\tconst value = uniform.value;\r\n\r\n\t\t\tif ( value && value.isTexture ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 't',\r\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isColor ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector2 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\t\tdata.lights = this.lights;\r\n\t\tdata.clipping = this.clipping;\r\n\r\n\t\tconst extensions = {};\r\n\r\n\t\tfor ( const key in this.extensions ) {\r\n\r\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Camera extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCamera = true;\r\n\r\n\t\tthis.type = 'Camera';\r\n\r\n\t\tthis.matrixWorldInverse = new Matrix4();\r\n\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\r\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n\r\n\t\tthis.coordinateSystem = source.coordinateSystem;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetWorldDirection( target ) {\r\n\r\n\t\treturn super.getWorldDirection( target ).negate();\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t}\r\n\r\n\tupdateWorldMatrix( updateParents, updateChildren ) {\r\n\r\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\r\n\r\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v3$1 = /*@__PURE__*/ new Vector3();\r\nconst _minTarget = /*@__PURE__*/ new Vector2();\r\nconst _maxTarget = /*@__PURE__*/ new Vector2();\r\n\r\n\r\nclass PerspectiveCamera extends Camera {\r\n\r\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPerspectiveCamera = true;\r\n\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\r\n\t\tthis.fov = fov;\r\n\t\tthis.zoom = 1;\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.aspect = aspect;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\tthis.filmGauge = source.filmGauge;\r\n\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t *\r\n\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t * a 35mm (full frame) camera.\r\n\t *\r\n\t * Values for focal length and film gauge must have the same unit.\r\n\t */\r\n\tsetFocalLength( focalLength ) {\r\n\r\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t */\r\n\tgetFocalLength() {\r\n\r\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t}\r\n\r\n\tgetEffectiveFOV() {\r\n\r\n\t\treturn RAD2DEG * 2 * Math.atan(\r\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t}\r\n\r\n\tgetFilmWidth() {\r\n\r\n\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t}\r\n\r\n\tgetFilmHeight() {\r\n\r\n\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\r\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\r\n\t */\r\n\tgetViewBounds( distance, minTarget, maxTarget ) {\r\n\r\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\r\n\r\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\r\n\r\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\r\n\r\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\r\n\t * Copies the result into the target Vector2, where x is width and y is height.\r\n\t */\r\n\tgetViewSize( distance, target ) {\r\n\r\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\r\n\r\n\t\treturn target.subVectors( _maxTarget, _minTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   const w = 1920;\r\n\t *   const h = 1080;\r\n\t *   const fullWidth = w * 3;\r\n\t *   const fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst near = this.near;\r\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\r\n\t\tlet height = 2 * top;\r\n\t\tlet width = this.aspect * height;\r\n\t\tlet left = - 0.5 * width;\r\n\t\tconst view = this.view;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst fullWidth = view.fullWidth,\r\n\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\twidth *= view.width / fullWidth;\r\n\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t}\r\n\r\n\t\tconst skew = this.filmOffset;\r\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\tdata.object.focus = this.focus;\r\n\r\n\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst fov = - 90; // negative fov is not an error\r\nconst aspect = 1;\r\n\r\nclass CubeCamera extends Object3D {\r\n\r\n\tconstructor( near, far, renderTarget ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CubeCamera';\r\n\r\n\t\tthis.renderTarget = renderTarget;\r\n\t\tthis.coordinateSystem = null;\r\n\t\tthis.activeMipmapLevel = 0;\r\n\r\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.layers = this.layers;\r\n\t\tthis.add( cameraPX );\r\n\r\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.layers = this.layers;\r\n\t\tthis.add( cameraNX );\r\n\r\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.layers = this.layers;\r\n\t\tthis.add( cameraPY );\r\n\r\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.layers = this.layers;\r\n\t\tthis.add( cameraNY );\r\n\r\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.layers = this.layers;\r\n\t\tthis.add( cameraPZ );\r\n\r\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.layers = this.layers;\r\n\t\tthis.add( cameraNZ );\r\n\r\n\t}\r\n\r\n\tupdateCoordinateSystem() {\r\n\r\n\t\tconst coordinateSystem = this.coordinateSystem;\r\n\r\n\t\tconst cameras = this.children.concat();\r\n\r\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\r\n\r\n\t\tfor ( const camera of cameras ) this.remove( camera );\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tcameraPX.up.set( 0, 1, 0 );\r\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\r\n\r\n\t\t\tcameraNX.up.set( 0, 1, 0 );\r\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\r\n\r\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\r\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\r\n\r\n\t\t\tcameraNY.up.set( 0, 0, 1 );\r\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\r\n\r\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\r\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\r\n\r\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\r\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\r\n\r\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\r\n\r\n\t\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\r\n\r\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\r\n\r\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\r\n\r\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const camera of cameras ) {\r\n\r\n\t\t\tthis.add( camera );\r\n\r\n\t\t\tcamera.updateMatrixWorld();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tconst { renderTarget, activeMipmapLevel } = this;\r\n\r\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\r\n\r\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\r\n\r\n\t\t\tthis.updateCoordinateSystem();\r\n\r\n\t\t}\r\n\r\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\r\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\r\n\r\n\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\r\n\t\trenderer.xr.enabled = false;\r\n\r\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPX );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNX );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPY );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNY );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPZ );\r\n\r\n\t\t// mipmaps are generated during the last call of render()\r\n\t\t// at this point, all sides of the cube render target are defined\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNZ );\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\r\n\r\n\t\trenderer.xr.enabled = currentXrEnabled;\r\n\r\n\t\trenderTarget.texture.needsPMREMUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CubeTexture extends Texture {\r\n\r\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\r\n\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\r\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\tthis.isCubeTexture = true;\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tget images() {\r\n\r\n\t\treturn this.image;\r\n\r\n\t}\r\n\r\n\tset images( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n\r\n\tconstructor( size = 1, options = {} ) {\r\n\r\n\t\tsuper( size, size, options );\r\n\r\n\t\tthis.isWebGLCubeRenderTarget = true;\r\n\r\n\t\tconst image = { width: size, height: size, depth: 1 };\r\n\t\tconst images = [ image, image, image, image, image, image ];\r\n\r\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\r\n\r\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n\r\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\r\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\r\n\t}\r\n\r\n\tfromEquirectangularTexture( renderer, texture ) {\r\n\r\n\t\tthis.texture.type = texture.type;\r\n\t\tthis.texture.colorSpace = texture.colorSpace;\r\n\r\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\tthis.texture.magFilter = texture.magFilter;\r\n\r\n\t\tconst shader = {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: /* glsl */`\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t\t#include <project_vertex>\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\r\n\t\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\t\tuniform sampler2D tEquirect;\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\t#include <common>\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t\t\t\t}\r\n\t\t\t`\r\n\t\t};\r\n\r\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\r\n\r\n\t\tconst material = new ShaderMaterial( {\r\n\r\n\t\t\tname: 'CubemapFromEquirect',\r\n\r\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\tside: BackSide,\r\n\t\t\tblending: NoBlending\r\n\r\n\t\t} );\r\n\r\n\t\tmaterial.uniforms.tEquirect.value = texture;\r\n\r\n\t\tconst mesh = new Mesh( geometry, material );\r\n\r\n\t\tconst currentMinFilter = texture.minFilter;\r\n\r\n\t\t// Avoid blurred poles\r\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\r\n\r\n\t\tconst camera = new CubeCamera( 1, 10, this );\r\n\t\tcamera.update( renderer, mesh );\r\n\r\n\t\ttexture.minFilter = currentMinFilter;\r\n\r\n\t\tmesh.geometry.dispose();\r\n\t\tmesh.material.dispose();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclear( renderer, color, depth, stencil ) {\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\trenderer.setRenderTarget( this, i );\r\n\r\n\t\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector1 = /*@__PURE__*/ new Vector3();\r\nconst _vector2 = /*@__PURE__*/ new Vector3();\r\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\r\n\r\nclass Plane {\r\n\r\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\r\n\r\n\t\tthis.isPlane = true;\r\n\r\n\t\t// normal is assumed to be normalized\r\n\r\n\t\tthis.normal = normal;\r\n\t\tthis.constant = constant;\r\n\r\n\t}\r\n\r\n\tset( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponents( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t}\r\n\r\n\tdistanceToSphere( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t}\r\n\r\n\tprojectPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\r\n\r\n\t}\r\n\r\n\tintersectLine( line, target ) {\r\n\r\n\t\tconst direction = line.delta( _vector1 );\r\n\r\n\t\tconst denominator = this.normal.dot( direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\r\n\r\n\t}\r\n\r\n\tintersectsLine( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tconst startSign = this.distanceToPoint( line.start );\r\n\t\tconst endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\tcoplanarPoint( target ) {\r\n\r\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\r\n\r\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\r\n\r\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\r\nconst _vector$7 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Frustum {\r\n\r\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\r\n\r\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\r\n\r\n\t}\r\n\r\n\tset( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( frustum ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\t\tconst me = m.elements;\r\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tintersectsObject( object ) {\r\n\r\n\t\tif ( object.boundingSphere !== undefined ) {\r\n\r\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.intersectsSphere( _sphere$5 );\r\n\r\n\t}\r\n\r\n\tintersectsSprite( sprite ) {\r\n\r\n\t\t_sphere$5.center.set( 0, 0, 0 );\r\n\t\t_sphere$5.radius = 0.7071067811865476;\r\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\treturn this.intersectsSphere( _sphere$5 );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\t\tconst center = sphere.center;\r\n\t\tconst negRadius = - sphere.radius;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst plane = planes[ i ];\r\n\r\n\t\t\t// corner at max distance\r\n\r\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction WebGLAnimation() {\r\n\r\n\tlet context = null;\r\n\tlet isAnimating = false;\r\n\tlet animationLoop = null;\r\n\tlet requestId = null;\r\n\r\n\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\tanimationLoop( time, frame );\r\n\r\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tstart: function () {\r\n\r\n\t\t\tif ( isAnimating === true ) return;\r\n\t\t\tif ( animationLoop === null ) return;\r\n\r\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t\tisAnimating = true;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tcontext.cancelAnimationFrame( requestId );\r\n\r\n\t\t\tisAnimating = false;\r\n\r\n\t\t},\r\n\r\n\t\tsetAnimationLoop: function ( callback ) {\r\n\r\n\t\t\tanimationLoop = callback;\r\n\r\n\t\t},\r\n\r\n\t\tsetContext: function ( value ) {\r\n\r\n\t\t\tcontext = value;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLAttributes( gl ) {\r\n\r\n\tconst buffers = new WeakMap();\r\n\r\n\tfunction createBuffer( attribute, bufferType ) {\r\n\r\n\t\tconst array = attribute.array;\r\n\t\tconst usage = attribute.usage;\r\n\t\tconst size = array.byteLength;\r\n\r\n\t\tconst buffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( bufferType, buffer );\r\n\t\tgl.bufferData( bufferType, array, usage );\r\n\r\n\t\tattribute.onUploadCallback();\r\n\r\n\t\tlet type;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\ttype = gl.FLOAT;\r\n\r\n\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\r\n\r\n\t\t\t\ttype = gl.HALF_FLOAT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\ttype = gl.SHORT;\r\n\r\n\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_INT;\r\n\r\n\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\ttype = gl.INT;\r\n\r\n\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\ttype = gl.BYTE;\r\n\r\n\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tbuffer: buffer,\r\n\t\t\ttype: type,\r\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\tversion: attribute.version,\r\n\t\t\tsize: size\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\r\n\r\n\t\tconst array = attribute.array;\r\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\r\n\t\tconst updateRanges = attribute.updateRanges;\r\n\r\n\t\tgl.bindBuffer( bufferType, buffer );\r\n\r\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\t\t\tgl.bufferSubData( bufferType, 0, array );\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateRanges.length !== 0 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst range = updateRanges[ i ];\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray, range.start, range.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattribute.clearUpdateRanges();\r\n\r\n\t\t}\r\n\r\n\t\t// @deprecated, r159\r\n\t\tif ( updateRange.count !== - 1 ) {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\tarray, updateRange.offset, updateRange.count );\r\n\r\n\t\t\tupdateRange.count = - 1; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattribute.onUploadCallback();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction get( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\treturn buffers.get( attribute );\r\n\r\n\t}\r\n\r\n\tfunction remove( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\tconst data = buffers.get( attribute );\r\n\r\n\t\tif ( data ) {\r\n\r\n\t\t\tgl.deleteBuffer( data.buffer );\r\n\r\n\t\t\tbuffers.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction update( attribute, bufferType ) {\r\n\r\n\t\tif ( attribute.isGLBufferAttribute ) {\r\n\r\n\t\t\tconst cached = buffers.get( attribute );\r\n\r\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\r\n\r\n\t\t\t\tbuffers.set( attribute, {\r\n\t\t\t\t\tbuffer: attribute.buffer,\r\n\t\t\t\t\ttype: attribute.type,\r\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\r\n\t\t\t\t\tversion: attribute.version\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\tconst data = buffers.get( attribute );\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n\r\n\t\t} else if ( data.version < attribute.version ) {\r\n\r\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\r\n\r\n\t\t\tdata.version = attribute.version;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tget: get,\r\n\t\tremove: remove,\r\n\t\tupdate: update\r\n\r\n\t};\r\n\r\n}\r\n\r\nclass PlaneGeometry extends BufferGeometry {\r\n\r\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'PlaneGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\tconst width_half = width / 2;\r\n\t\tconst height_half = height / 2;\r\n\r\n\t\tconst gridX = Math.floor( widthSegments );\r\n\t\tconst gridY = Math.floor( heightSegments );\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segment_width = width / gridX;\r\n\t\tconst segment_height = height / gridY;\r\n\r\n\t\t//\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tconst y = iy * segment_height - height_half;\r\n\r\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tconst x = ix * segment_width - width_half;\r\n\r\n\t\t\t\tvertices.push( x, - y, 0 );\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\r\n\r\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\r\n\r\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\r\n\r\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n\r\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\r\n\r\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\r\n\r\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\r\n\r\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\r\n\r\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\r\n\r\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\r\n\r\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\r\n\r\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\r\n\r\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\r\n\r\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\r\n\r\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n\r\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\r\n\r\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\r\n\r\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\r\n\r\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( batchId );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\r\n\r\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\r\n\r\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\r\n\r\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\r\n\r\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\r\n\r\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\r\n\r\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\r\n\r\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\r\n\r\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\r\n\r\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\r\n\r\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\r\n\r\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\r\n\r\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\r\n\r\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\r\n\r\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n\r\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\r\n\r\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\r\n\r\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\r\n\r\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\r\n\r\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\r\n\r\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\r\n\r\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\r\n\r\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\r\n\r\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n\r\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\r\n\r\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\r\n\r\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\r\n\r\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\r\n\r\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\r\n\r\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\r\n\r\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\r\n\r\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\r\n\r\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\r\n\r\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\r\n\r\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\r\n\r\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\r\n\r\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\r\n\r\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\r\n\r\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\r\n\r\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n\r\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\r\n\r\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\r\n\r\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n\r\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\r\n\r\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\r\n\r\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\r\n\r\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\r\n\r\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\r\n\r\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\r\n\r\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\r\n\r\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\r\n\r\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\r\n\r\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\r\n\r\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\r\n\r\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\r\n\r\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\r\n\r\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\r\n\r\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\r\n\r\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\r\n\r\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\r\n\r\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\r\n\r\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\r\n\r\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\r\n\r\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n#endif\";\r\n\r\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\r\n\r\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\r\n\r\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\r\n\r\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\r\n\r\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\r\n\r\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\r\n\r\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n\r\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\r\n\r\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\r\n\r\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\r\n\r\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\r\n\r\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\r\n\r\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\r\n\r\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\r\n\r\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\r\n\r\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\r\n\r\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\r\n\r\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\r\n\r\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\r\n\r\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\r\n\r\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\r\n\r\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\r\n\r\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\r\n\r\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\r\n\r\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\r\n\r\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\r\n\r\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\r\n\r\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n\r\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\r\n\r\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\r\n\r\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\r\n\r\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\r\n\r\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n\r\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n\r\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n\r\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n\r\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n\r\nconst ShaderChunk = {\r\n\talphahash_fragment: alphahash_fragment,\r\n\talphahash_pars_fragment: alphahash_pars_fragment,\r\n\talphamap_fragment: alphamap_fragment,\r\n\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\talphatest_fragment: alphatest_fragment,\r\n\talphatest_pars_fragment: alphatest_pars_fragment,\r\n\taomap_fragment: aomap_fragment,\r\n\taomap_pars_fragment: aomap_pars_fragment,\r\n\tbatching_pars_vertex: batching_pars_vertex,\r\n\tbatching_vertex: batching_vertex,\r\n\tbegin_vertex: begin_vertex,\r\n\tbeginnormal_vertex: beginnormal_vertex,\r\n\tbsdfs: bsdfs,\r\n\tiridescence_fragment: iridescence_fragment,\r\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\tclipping_planes_fragment: clipping_planes_fragment,\r\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\tclipping_planes_vertex: clipping_planes_vertex,\r\n\tcolor_fragment: color_fragment,\r\n\tcolor_pars_fragment: color_pars_fragment,\r\n\tcolor_pars_vertex: color_pars_vertex,\r\n\tcolor_vertex: color_vertex,\r\n\tcommon: common,\r\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\tdisplacementmap_vertex: displacementmap_vertex,\r\n\temissivemap_fragment: emissivemap_fragment,\r\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\tcolorspace_fragment: colorspace_fragment,\r\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\r\n\tenvmap_fragment: envmap_fragment,\r\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\r\n\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\tenvmap_vertex: envmap_vertex,\r\n\tfog_vertex: fog_vertex,\r\n\tfog_pars_vertex: fog_pars_vertex,\r\n\tfog_fragment: fog_fragment,\r\n\tfog_pars_fragment: fog_pars_fragment,\r\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\tlights_lambert_fragment: lights_lambert_fragment,\r\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\r\n\tlights_pars_begin: lights_pars_begin,\r\n\tlights_toon_fragment: lights_toon_fragment,\r\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\r\n\tlights_phong_fragment: lights_phong_fragment,\r\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\tlights_physical_fragment: lights_physical_fragment,\r\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\tlights_fragment_begin: lights_fragment_begin,\r\n\tlights_fragment_maps: lights_fragment_maps,\r\n\tlights_fragment_end: lights_fragment_end,\r\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\tmap_fragment: map_fragment,\r\n\tmap_pars_fragment: map_pars_fragment,\r\n\tmap_particle_fragment: map_particle_fragment,\r\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\tmorphinstance_vertex: morphinstance_vertex,\r\n\tmorphcolor_vertex: morphcolor_vertex,\r\n\tmorphnormal_vertex: morphnormal_vertex,\r\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\tmorphtarget_vertex: morphtarget_vertex,\r\n\tnormal_fragment_begin: normal_fragment_begin,\r\n\tnormal_fragment_maps: normal_fragment_maps,\r\n\tnormal_pars_fragment: normal_pars_fragment,\r\n\tnormal_pars_vertex: normal_pars_vertex,\r\n\tnormal_vertex: normal_vertex,\r\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\r\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\r\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\r\n\tiridescence_pars_fragment: iridescence_pars_fragment,\r\n\topaque_fragment: opaque_fragment,\r\n\tpacking: packing,\r\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\tproject_vertex: project_vertex,\r\n\tdithering_fragment: dithering_fragment,\r\n\tdithering_pars_fragment: dithering_pars_fragment,\r\n\troughnessmap_fragment: roughnessmap_fragment,\r\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\tshadowmap_vertex: shadowmap_vertex,\r\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\tskinbase_vertex: skinbase_vertex,\r\n\tskinning_pars_vertex: skinning_pars_vertex,\r\n\tskinning_vertex: skinning_vertex,\r\n\tskinnormal_vertex: skinnormal_vertex,\r\n\tspecularmap_fragment: specularmap_fragment,\r\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\ttonemapping_fragment: tonemapping_fragment,\r\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\ttransmission_fragment: transmission_fragment,\r\n\ttransmission_pars_fragment: transmission_pars_fragment,\r\n\tuv_pars_fragment: uv_pars_fragment,\r\n\tuv_pars_vertex: uv_pars_vertex,\r\n\tuv_vertex: uv_vertex,\r\n\tworldpos_vertex: worldpos_vertex,\r\n\r\n\tbackground_vert: vertex$h,\r\n\tbackground_frag: fragment$h,\r\n\tbackgroundCube_vert: vertex$g,\r\n\tbackgroundCube_frag: fragment$g,\r\n\tcube_vert: vertex$f,\r\n\tcube_frag: fragment$f,\r\n\tdepth_vert: vertex$e,\r\n\tdepth_frag: fragment$e,\r\n\tdistanceRGBA_vert: vertex$d,\r\n\tdistanceRGBA_frag: fragment$d,\r\n\tequirect_vert: vertex$c,\r\n\tequirect_frag: fragment$c,\r\n\tlinedashed_vert: vertex$b,\r\n\tlinedashed_frag: fragment$b,\r\n\tmeshbasic_vert: vertex$a,\r\n\tmeshbasic_frag: fragment$a,\r\n\tmeshlambert_vert: vertex$9,\r\n\tmeshlambert_frag: fragment$9,\r\n\tmeshmatcap_vert: vertex$8,\r\n\tmeshmatcap_frag: fragment$8,\r\n\tmeshnormal_vert: vertex$7,\r\n\tmeshnormal_frag: fragment$7,\r\n\tmeshphong_vert: vertex$6,\r\n\tmeshphong_frag: fragment$6,\r\n\tmeshphysical_vert: vertex$5,\r\n\tmeshphysical_frag: fragment$5,\r\n\tmeshtoon_vert: vertex$4,\r\n\tmeshtoon_frag: fragment$4,\r\n\tpoints_vert: vertex$3,\r\n\tpoints_frag: fragment$3,\r\n\tshadow_vert: vertex$2,\r\n\tshadow_frag: fragment$2,\r\n\tsprite_vert: vertex$1,\r\n\tsprite_frag: fragment$1\r\n};\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nconst UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\r\n\t\tmap: { value: null },\r\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\r\n\t\talphaMap: { value: null },\r\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\r\n\t\talphaTest: { value: 0 }\r\n\r\n\t},\r\n\r\n\tspecularmap: {\r\n\r\n\t\tspecularMap: { value: null },\r\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tenvmap: {\r\n\r\n\t\tenvMap: { value: null },\r\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tflipEnvMap: { value: - 1 },\r\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\r\n\t\tior: { value: 1.5 }, // physical\r\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\taoMap: { value: null },\r\n\t\taoMapIntensity: { value: 1 },\r\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\tlightMap: { value: null },\r\n\t\tlightMapIntensity: { value: 1 },\r\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\tbumpMap: { value: null },\r\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tbumpScale: { value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\tnormalMap: { value: null },\r\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\tdisplacementMap: { value: null },\r\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tdisplacementScale: { value: 1 },\r\n\t\tdisplacementBias: { value: 0 }\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\temissiveMap: { value: null },\r\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tmetalnessmap: {\r\n\r\n\t\tmetalnessMap: { value: null },\r\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\troughnessmap: {\r\n\r\n\t\troughnessMap: { value: null },\r\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tgradientmap: {\r\n\r\n\t\tgradientMap: { value: null }\r\n\r\n\t},\r\n\r\n\tfog: {\r\n\r\n\t\tfogDensity: { value: 0.00025 },\r\n\t\tfogNear: { value: 1 },\r\n\t\tfogFar: { value: 2000 },\r\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\tambientLightColor: { value: [] },\r\n\r\n\t\tlightProbe: { value: [] },\r\n\r\n\t\tdirectionalLights: { value: [], properties: {\r\n\t\t\tdirection: {},\r\n\t\t\tcolor: {}\r\n\t\t} },\r\n\r\n\t\tdirectionalLightShadows: { value: [], properties: {\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {}\r\n\t\t} },\r\n\r\n\t\tdirectionalShadowMap: { value: [] },\r\n\t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n\t\tspotLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\tdirection: {},\r\n\t\t\tdistance: {},\r\n\t\t\tconeCos: {},\r\n\t\t\tpenumbraCos: {},\r\n\t\t\tdecay: {}\r\n\t\t} },\r\n\r\n\t\tspotLightShadows: { value: [], properties: {\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {}\r\n\t\t} },\r\n\r\n\t\tspotLightMap: { value: [] },\r\n\t\tspotShadowMap: { value: [] },\r\n\t\tspotLightMatrix: { value: [] },\r\n\r\n\t\tpointLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\tdecay: {},\r\n\t\t\tdistance: {}\r\n\t\t} },\r\n\r\n\t\tpointLightShadows: { value: [], properties: {\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {},\r\n\t\t\tshadowCameraNear: {},\r\n\t\t\tshadowCameraFar: {}\r\n\t\t} },\r\n\r\n\t\tpointShadowMap: { value: [] },\r\n\t\tpointShadowMatrix: { value: [] },\r\n\r\n\t\themisphereLights: { value: [], properties: {\r\n\t\t\tdirection: {},\r\n\t\t\tskyColor: {},\r\n\t\t\tgroundColor: {}\r\n\t\t} },\r\n\r\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\trectAreaLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\twidth: {},\r\n\t\t\theight: {}\r\n\t\t} },\r\n\r\n\t\tltc_1: { value: null },\r\n\t\tltc_2: { value: null }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\t\tsize: { value: 1.0 },\r\n\t\tscale: { value: 1.0 },\r\n\t\tmap: { value: null },\r\n\t\talphaMap: { value: null },\r\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\talphaTest: { value: 0 },\r\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tsprite: {\r\n\r\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\r\n\t\trotation: { value: 0.0 },\r\n\t\tmap: { value: null },\r\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\talphaMap: { value: null },\r\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\talphaTest: { value: 0 }\r\n\r\n\t}\r\n\r\n};\r\n\r\nconst ShaderLib = {\r\n\r\n\tbasic: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n\t},\r\n\r\n\tlambert: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n\t},\r\n\r\n\tphong: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\r\n\t\t\t\tshininess: { value: 30 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n\t},\r\n\r\n\tstandard: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.roughnessmap,\r\n\t\t\tUniformsLib.metalnessmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\t\troughness: { value: 1.0 },\r\n\t\t\t\tmetalness: { value: 0.0 },\r\n\t\t\t\tenvMapIntensity: { value: 1 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t},\r\n\r\n\ttoon: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.gradientmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\r\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\r\n\r\n\t},\r\n\r\n\tmatcap: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tmatcap: { value: null }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.points,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n\t},\r\n\r\n\tdashed: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tscale: { value: 1 },\r\n\t\t\t\tdashSize: { value: 1 },\r\n\t\t\t\ttotalSize: { value: 2 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n\t},\r\n\r\n\tdepth: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.displacementmap\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n\t},\r\n\r\n\tnormal: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\t{\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\r\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\r\n\r\n\t},\r\n\r\n\tsprite: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.sprite,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\r\n\t},\r\n\r\n\tbackground: {\r\n\r\n\t\tuniforms: {\r\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tt2D: { value: null },\r\n\t\t\tbackgroundIntensity: { value: 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.background_vert,\r\n\t\tfragmentShader: ShaderChunk.background_frag\r\n\r\n\t},\r\n\r\n\tbackgroundCube: {\r\n\r\n\t\tuniforms: {\r\n\t\t\tenvMap: { value: null },\r\n\t\t\tflipEnvMap: { value: - 1 },\r\n\t\t\tbackgroundBlurriness: { value: 0 },\r\n\t\t\tbackgroundIntensity: { value: 1 },\r\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\r\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\r\n\r\n\t},\r\n\r\n\tcube: {\r\n\r\n\t\tuniforms: {\r\n\t\t\ttCube: { value: null },\r\n\t\t\ttFlip: { value: - 1 },\r\n\t\t\topacity: { value: 1.0 }\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n\t},\r\n\r\n\tequirect: {\r\n\r\n\t\tuniforms: {\r\n\t\t\ttEquirect: { value: null },\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n\t},\r\n\r\n\tdistanceRGBA: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\t{\r\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\r\n\t\t\t\tnearDistance: { value: 1 },\r\n\t\t\t\tfarDistance: { value: 1000 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n\t},\r\n\r\n\tshadow: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.lights,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t},\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\r\n\t}\r\n\r\n};\r\n\r\nShaderLib.physical = {\r\n\r\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\tShaderLib.standard.uniforms,\r\n\t\t{\r\n\t\t\tclearcoat: { value: 0 },\r\n\t\t\tclearcoatMap: { value: null },\r\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tclearcoatNormalMap: { value: null },\r\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\r\n\t\t\tclearcoatRoughness: { value: 0 },\r\n\t\t\tclearcoatRoughnessMap: { value: null },\r\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tdispersion: { value: 0 },\r\n\t\t\tiridescence: { value: 0 },\r\n\t\t\tiridescenceMap: { value: null },\r\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tiridescenceIOR: { value: 1.3 },\r\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\r\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\r\n\t\t\tiridescenceThicknessMap: { value: null },\r\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tsheen: { value: 0 },\r\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\tsheenColorMap: { value: null },\r\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tsheenRoughness: { value: 1 },\r\n\t\t\tsheenRoughnessMap: { value: null },\r\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\ttransmission: { value: 0 },\r\n\t\t\ttransmissionMap: { value: null },\r\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\r\n\t\t\ttransmissionSamplerMap: { value: null },\r\n\t\t\tthickness: { value: 0 },\r\n\t\t\tthicknessMap: { value: null },\r\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tattenuationDistance: { value: 0 },\r\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\r\n\t\t\tspecularColorMap: { value: null },\r\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tspecularIntensity: { value: 1 },\r\n\t\t\tspecularIntensityMap: { value: null },\r\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\r\n\t\t\tanisotropyMap: { value: null },\r\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t}\r\n\t] ),\r\n\r\n\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n};\r\n\r\nconst _rgb = { r: 0, b: 0, g: 0 };\r\nconst _e1$1 = /*@__PURE__*/ new Euler();\r\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\r\n\r\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\r\n\r\n\tconst clearColor = new Color( 0x000000 );\r\n\tlet clearAlpha = alpha === true ? 0 : 1;\r\n\r\n\tlet planeMesh;\r\n\tlet boxMesh;\r\n\r\n\tlet currentBackground = null;\r\n\tlet currentBackgroundVersion = 0;\r\n\tlet currentTonemapping = null;\r\n\r\n\tfunction getBackground( scene ) {\r\n\r\n\t\tlet background = scene.isScene === true ? scene.background : null;\r\n\r\n\t\tif ( background && background.isTexture ) {\r\n\r\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\r\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\r\n\r\n\t\t}\r\n\r\n\t\treturn background;\r\n\r\n\t}\r\n\r\n\tfunction render( scene ) {\r\n\r\n\t\tlet forceClear = false;\r\n\t\tconst background = getBackground( scene );\r\n\r\n\t\tif ( background === null ) {\r\n\r\n\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t} else if ( background && background.isColor ) {\r\n\r\n\t\t\tsetClear( background, 1 );\r\n\t\t\tforceClear = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\r\n\r\n\t\tif ( environmentBlendMode === 'additive' ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\r\n\r\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderer.autoClear || forceClear ) {\r\n\r\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction addToRenderList( renderList, scene ) {\r\n\r\n\t\tconst background = getBackground( scene );\r\n\r\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\r\n\r\n\t\t\tif ( boxMesh === undefined ) {\r\n\r\n\t\t\t\tboxMesh = new Mesh(\r\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\r\n\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\r\n\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\r\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\r\n\r\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\r\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\r\n\r\n\t\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tobjects.update( boxMesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_e1$1.copy( scene.backgroundRotation );\r\n\r\n\t\t\t// accommodate left-handed frame\r\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\r\n\r\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\r\n\r\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\r\n\t\t\t\t_e1$1.y *= - 1;\r\n\t\t\t\t_e1$1.z *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\r\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\r\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\r\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\r\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\r\n\r\n\t\t\tif ( currentBackground !== background ||\r\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\r\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\r\n\r\n\t\t\t\tboxMesh.material.needsUpdate = true;\r\n\r\n\t\t\t\tcurrentBackground = background;\r\n\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tboxMesh.layers.enableAll();\r\n\r\n\t\t\t// push to the pre-sorted opaque render list\r\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\r\n\r\n\t\t} else if ( background && background.isTexture ) {\r\n\r\n\t\t\tif ( planeMesh === undefined ) {\r\n\r\n\t\t\t\tplaneMesh = new Mesh(\r\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\r\n\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\tname: 'BackgroundMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\r\n\t\t\t\t\t\tside: FrontSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\r\n\r\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\r\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\r\n\r\n\t\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tobjects.update( planeMesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\r\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\r\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\r\n\r\n\t\t\tif ( background.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\tbackground.updateMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\r\n\r\n\t\t\tif ( currentBackground !== background ||\r\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\r\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\r\n\r\n\t\t\t\tplaneMesh.material.needsUpdate = true;\r\n\r\n\t\t\t\tcurrentBackground = background;\r\n\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tplaneMesh.layers.enableAll();\r\n\r\n\t\t\t// push to the pre-sorted opaque render list\r\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setClear( color, alpha ) {\r\n\r\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\r\n\r\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tgetClearColor: function () {\r\n\r\n\t\t\treturn clearColor;\r\n\r\n\t\t},\r\n\t\tsetClearColor: function ( color, alpha = 1 ) {\r\n\r\n\t\t\tclearColor.set( color );\r\n\t\t\tclearAlpha = alpha;\r\n\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t},\r\n\t\tgetClearAlpha: function () {\r\n\r\n\t\t\treturn clearAlpha;\r\n\r\n\t\t},\r\n\t\tsetClearAlpha: function ( alpha ) {\r\n\r\n\t\t\tclearAlpha = alpha;\r\n\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t},\r\n\t\trender: render,\r\n\t\taddToRenderList: addToRenderList\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLBindingStates( gl, attributes ) {\r\n\r\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\r\n\tconst bindingStates = {};\r\n\r\n\tconst defaultState = createBindingState( null );\r\n\tlet currentState = defaultState;\r\n\tlet forceUpdate = false;\r\n\r\n\tfunction setup( object, material, program, geometry, index ) {\r\n\r\n\t\tlet updateBuffers = false;\r\n\r\n\t\tconst state = getBindingState( geometry, program, material );\r\n\r\n\t\tif ( currentState !== state ) {\r\n\r\n\t\t\tcurrentState = state;\r\n\t\t\tbindVertexArrayObject( currentState.object );\r\n\r\n\t\t}\r\n\r\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\r\n\r\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers || forceUpdate ) {\r\n\r\n\t\t\tforceUpdate = false;\r\n\r\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createVertexArrayObject() {\r\n\r\n\t\treturn gl.createVertexArray();\r\n\r\n\t}\r\n\r\n\tfunction bindVertexArrayObject( vao ) {\r\n\r\n\t\treturn gl.bindVertexArray( vao );\r\n\r\n\t}\r\n\r\n\tfunction deleteVertexArrayObject( vao ) {\r\n\r\n\t\treturn gl.deleteVertexArray( vao );\r\n\r\n\t}\r\n\r\n\tfunction getBindingState( geometry, program, material ) {\r\n\r\n\t\tconst wireframe = ( material.wireframe === true );\r\n\r\n\t\tlet programMap = bindingStates[ geometry.id ];\r\n\r\n\t\tif ( programMap === undefined ) {\r\n\r\n\t\t\tprogramMap = {};\r\n\t\t\tbindingStates[ geometry.id ] = programMap;\r\n\r\n\t\t}\r\n\r\n\t\tlet stateMap = programMap[ program.id ];\r\n\r\n\t\tif ( stateMap === undefined ) {\r\n\r\n\t\t\tstateMap = {};\r\n\t\t\tprogramMap[ program.id ] = stateMap;\r\n\r\n\t\t}\r\n\r\n\t\tlet state = stateMap[ wireframe ];\r\n\r\n\t\tif ( state === undefined ) {\r\n\r\n\t\t\tstate = createBindingState( createVertexArrayObject() );\r\n\t\t\tstateMap[ wireframe ] = state;\r\n\r\n\t\t}\r\n\r\n\t\treturn state;\r\n\r\n\t}\r\n\r\n\tfunction createBindingState( vao ) {\r\n\r\n\t\tconst newAttributes = [];\r\n\t\tconst enabledAttributes = [];\r\n\t\tconst attributeDivisors = [];\r\n\r\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\t\t\tenabledAttributes[ i ] = 0;\r\n\t\t\tattributeDivisors[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\t// for backward compatibility on non-VAO support browser\r\n\t\t\tgeometry: null,\r\n\t\t\tprogram: null,\r\n\t\t\twireframe: false,\r\n\r\n\t\t\tnewAttributes: newAttributes,\r\n\t\t\tenabledAttributes: enabledAttributes,\r\n\t\t\tattributeDivisors: attributeDivisors,\r\n\t\t\tobject: vao,\r\n\t\t\tattributes: {},\r\n\t\t\tindex: null\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction needsUpdate( object, geometry, program, index ) {\r\n\r\n\t\tconst cachedAttributes = currentState.attributes;\r\n\t\tconst geometryAttributes = geometry.attributes;\r\n\r\n\t\tlet attributesNum = 0;\r\n\r\n\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\tfor ( const name in programAttributes ) {\r\n\r\n\t\t\tconst programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute.location >= 0 ) {\r\n\r\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\r\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute === undefined ) {\r\n\r\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\r\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\r\n\r\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\r\n\r\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\r\n\r\n\t\t\t\tattributesNum ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\r\n\r\n\t\tif ( currentState.index !== index ) return true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction saveCache( object, geometry, program, index ) {\r\n\r\n\t\tconst cache = {};\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tlet attributesNum = 0;\r\n\r\n\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\tfor ( const name in programAttributes ) {\r\n\r\n\t\t\tconst programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute.location >= 0 ) {\r\n\r\n\t\t\t\tlet attribute = attributes[ name ];\r\n\r\n\t\t\t\tif ( attribute === undefined ) {\r\n\r\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\r\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = {};\r\n\t\t\t\tdata.attribute = attribute;\r\n\r\n\t\t\t\tif ( attribute && attribute.data ) {\r\n\r\n\t\t\t\t\tdata.data = attribute.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache[ name ] = data;\r\n\r\n\t\t\t\tattributesNum ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcurrentState.attributes = cache;\r\n\t\tcurrentState.attributesNum = attributesNum;\r\n\r\n\t\tcurrentState.index = index;\r\n\r\n\t}\r\n\r\n\tfunction initAttributes() {\r\n\r\n\t\tconst newAttributes = currentState.newAttributes;\r\n\r\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction enableAttribute( attribute ) {\r\n\r\n\t\tenableAttributeAndDivisor( attribute, 0 );\r\n\r\n\t}\r\n\r\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\r\n\r\n\t\tconst newAttributes = currentState.newAttributes;\r\n\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\t\tconst attributeDivisors = currentState.attributeDivisors;\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\r\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction disableUnusedAttributes() {\r\n\r\n\t\tconst newAttributes = currentState.newAttributes;\r\n\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\r\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\r\n\r\n\t\tif ( integer === true ) {\r\n\r\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\r\n\r\n\t\tinitAttributes();\r\n\r\n\t\tconst geometryAttributes = geometry.attributes;\r\n\r\n\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( const name in programAttributes ) {\r\n\r\n\t\t\tconst programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute.location >= 0 ) {\r\n\r\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute === undefined ) {\r\n\r\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\r\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\r\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\r\n\r\n\t\t\t\t\t// TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\tif ( attribute === undefined ) continue;\r\n\r\n\t\t\t\t\tconst buffer = attribute.buffer;\r\n\t\t\t\t\tconst type = attribute.type;\r\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t// check for integer attributes\r\n\r\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\r\n\r\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tconst data = geometryAttribute.data;\r\n\t\t\t\t\t\tconst stride = data.stride;\r\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvertexAttribPointer(\r\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\r\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tnormalized,\r\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\r\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\r\n\t\t\t\t\t\t\t\tinteger\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvertexAttribPointer(\r\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\r\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tnormalized,\r\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\r\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\r\n\t\t\t\t\t\t\t\tinteger\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdisableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\treset();\r\n\r\n\t\tfor ( const geometryId in bindingStates ) {\r\n\r\n\t\t\tconst programMap = bindingStates[ geometryId ];\r\n\r\n\t\t\tfor ( const programId in programMap ) {\r\n\r\n\t\t\t\tconst stateMap = programMap[ programId ];\r\n\r\n\t\t\t\tfor ( const wireframe in stateMap ) {\r\n\r\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\r\n\r\n\t\t\t\t\tdelete stateMap[ wireframe ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete programMap[ programId ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindingStates[ geometryId ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction releaseStatesOfGeometry( geometry ) {\r\n\r\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\r\n\r\n\t\tconst programMap = bindingStates[ geometry.id ];\r\n\r\n\t\tfor ( const programId in programMap ) {\r\n\r\n\t\t\tconst stateMap = programMap[ programId ];\r\n\r\n\t\t\tfor ( const wireframe in stateMap ) {\r\n\r\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\r\n\r\n\t\t\t\tdelete stateMap[ wireframe ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete programMap[ programId ];\r\n\r\n\t\t}\r\n\r\n\t\tdelete bindingStates[ geometry.id ];\r\n\r\n\t}\r\n\r\n\tfunction releaseStatesOfProgram( program ) {\r\n\r\n\t\tfor ( const geometryId in bindingStates ) {\r\n\r\n\t\t\tconst programMap = bindingStates[ geometryId ];\r\n\r\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\r\n\r\n\t\t\tconst stateMap = programMap[ program.id ];\r\n\r\n\t\t\tfor ( const wireframe in stateMap ) {\r\n\r\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\r\n\r\n\t\t\t\tdelete stateMap[ wireframe ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete programMap[ program.id ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reset() {\r\n\r\n\t\tresetDefaultState();\r\n\t\tforceUpdate = true;\r\n\r\n\t\tif ( currentState === defaultState ) return;\r\n\r\n\t\tcurrentState = defaultState;\r\n\t\tbindVertexArrayObject( currentState.object );\r\n\r\n\t}\r\n\r\n\t// for backward-compatibility\r\n\r\n\tfunction resetDefaultState() {\r\n\r\n\t\tdefaultState.geometry = null;\r\n\t\tdefaultState.program = null;\r\n\t\tdefaultState.wireframe = false;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tsetup: setup,\r\n\t\treset: reset,\r\n\t\tresetDefaultState: resetDefaultState,\r\n\t\tdispose: dispose,\r\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\r\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\r\n\r\n\t\tinitAttributes: initAttributes,\r\n\t\tenableAttribute: enableAttribute,\r\n\t\tdisableUnusedAttributes: disableUnusedAttributes\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLBufferRenderer( gl, extensions, info ) {\r\n\r\n\tlet mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\tgl.drawArrays( mode, start, count );\r\n\r\n\t\tinfo.update( count, mode, 1 );\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( start, count, primcount ) {\r\n\r\n\t\tif ( primcount === 0 ) return;\r\n\r\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\r\n\r\n\t\tinfo.update( count, mode, primcount );\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\r\n\r\n\t\t\tlet elementCount = 0;\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\telementCount += counts[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.update( elementCount, mode, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\r\n\r\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\r\n\r\n\t\t\tlet elementCount = 0;\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\telementCount += counts[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\r\n\r\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\tthis.renderMultiDraw = renderMultiDraw;\r\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\r\n\r\n}\r\n\r\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\r\n\r\n\tlet maxAnisotropy;\r\n\r\n\tfunction getMaxAnisotropy() {\r\n\r\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n\r\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\r\n\r\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaxAnisotropy = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxAnisotropy;\r\n\r\n\t}\r\n\r\n\tfunction textureFormatReadable( textureFormat ) {\r\n\r\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction textureTypeReadable( textureType ) {\r\n\r\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\r\n\r\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\r\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\tconst maxPrecision = getMaxPrecision( precision );\r\n\r\n\tif ( maxPrecision !== precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n\t\tprecision = maxPrecision;\r\n\r\n\t}\r\n\r\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\r\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tconst vertexTextures = maxVertexTextures > 0;\r\n\r\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\r\n\r\n\treturn {\r\n\r\n\t\tisWebGL2: true, // keeping this for backwards compatibility\r\n\r\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\tgetMaxPrecision: getMaxPrecision,\r\n\r\n\t\ttextureFormatReadable: textureFormatReadable,\r\n\t\ttextureTypeReadable: textureTypeReadable,\r\n\r\n\t\tprecision: precision,\r\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\r\n\t\tmaxTextures: maxTextures,\r\n\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\tmaxTextureSize: maxTextureSize,\r\n\t\tmaxCubemapSize: maxCubemapSize,\r\n\r\n\t\tmaxAttributes: maxAttributes,\r\n\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\tmaxVaryings: maxVaryings,\r\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\r\n\t\tvertexTextures: vertexTextures,\r\n\r\n\t\tmaxSamples: maxSamples\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLClipping( properties ) {\r\n\r\n\tconst scope = this;\r\n\r\n\tlet globalState = null,\r\n\t\tnumGlobalPlanes = 0,\r\n\t\tlocalClippingEnabled = false,\r\n\t\trenderingShadows = false;\r\n\r\n\tconst plane = new Plane(),\r\n\t\tviewNormalMatrix = new Matrix3(),\r\n\r\n\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\tthis.uniform = uniform;\r\n\tthis.numPlanes = 0;\r\n\tthis.numIntersection = 0;\r\n\r\n\tthis.init = function ( planes, enableLocalClipping ) {\r\n\r\n\t\tconst enabled =\r\n\t\t\tplanes.length !== 0 ||\r\n\t\t\tenableLocalClipping ||\r\n\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t// run another frame in order to reset the state:\r\n\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\tlocalClippingEnabled;\r\n\r\n\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\treturn enabled;\r\n\r\n\t};\r\n\r\n\tthis.beginShadows = function () {\r\n\r\n\t\trenderingShadows = true;\r\n\t\tprojectPlanes( null );\r\n\r\n\t};\r\n\r\n\tthis.endShadows = function () {\r\n\r\n\t\trenderingShadows = false;\r\n\r\n\t};\r\n\r\n\tthis.setGlobalState = function ( planes, camera ) {\r\n\r\n\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\r\n\t};\r\n\r\n\tthis.setState = function ( material, camera, useCache ) {\r\n\r\n\t\tconst planes = material.clippingPlanes,\r\n\t\t\tclipIntersection = material.clipIntersection,\r\n\t\t\tclipShadows = material.clipShadows;\r\n\r\n\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\r\n\r\n\t\t\t// there's no local clipping\r\n\r\n\t\t\tif ( renderingShadows ) {\r\n\r\n\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresetGlobalState();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\tlGlobal = nGlobal * 4;\r\n\r\n\t\t\tlet dstArray = materialProperties.clippingState || null;\r\n\r\n\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\r\n\r\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.clippingState = dstArray;\r\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\tfunction resetGlobalState() {\r\n\r\n\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\tuniform.value = globalState;\r\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\tscope.numIntersection = 0;\r\n\r\n\t}\r\n\r\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\r\n\t\tlet dstArray = null;\r\n\r\n\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniform.value = dstArray;\r\n\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = nPlanes;\r\n\t\tscope.numIntersection = 0;\r\n\r\n\t\treturn dstArray;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction WebGLCubeMaps( renderer ) {\r\n\r\n\tlet cubemaps = new WeakMap();\r\n\r\n\tfunction mapTextureMapping( texture, mapping ) {\r\n\r\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\r\n\r\n\t\t\ttexture.mapping = CubeReflectionMapping;\r\n\r\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\r\n\r\n\t\t\ttexture.mapping = CubeRefractionMapping;\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tfunction get( texture ) {\r\n\r\n\t\tif ( texture && texture.isTexture ) {\r\n\r\n\t\t\tconst mapping = texture.mapping;\r\n\r\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\r\n\r\n\t\t\t\tif ( cubemaps.has( texture ) ) {\r\n\r\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\r\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\tif ( image && image.height > 0 ) {\r\n\r\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\r\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\r\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\r\n\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\r\n\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tconst texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tconst cubemap = cubemaps.get( texture );\r\n\r\n\t\tif ( cubemap !== undefined ) {\r\n\r\n\t\t\tcubemaps.delete( texture );\r\n\t\t\tcubemap.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tcubemaps = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nclass OrthographicCamera extends Camera {\r\n\r\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isOrthographicCamera = true;\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\r\n\t\tthis.zoom = source.zoom;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tconst cx = ( this.right + this.left ) / 2;\r\n\t\tconst cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\tlet left = cx - dx;\r\n\t\tlet right = cx + dx;\r\n\t\tlet top = cy + dy;\r\n\t\tlet bottom = cy - dy;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\r\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\r\n\r\n\t\t\tleft += scaleW * this.view.offsetX;\r\n\t\t\tright = left + scaleW * this.view.width;\r\n\t\t\ttop -= scaleH * this.view.offsetY;\r\n\t\t\tbottom = top - scaleH * this.view.height;\r\n\r\n\t\t}\r\n\r\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst LOD_MIN = 4;\r\n\r\n// The standard deviations (radians) associated with the extra mips. These are\r\n// chosen to approximate a Trowbridge-Reitz distribution function times the\r\n// geometric shadowing function. These sigma values squared must match the\r\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\r\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\r\n\r\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\r\n// samples and exit early, but not recompile the shader.\r\nconst MAX_SAMPLES = 20;\r\n\r\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\r\nconst _clearColor = /*@__PURE__*/ new Color();\r\nlet _oldTarget = null;\r\nlet _oldActiveCubeFace = 0;\r\nlet _oldActiveMipmapLevel = 0;\r\nlet _oldXrEnabled = false;\r\n\r\n// Golden Ratio\r\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\r\nconst INV_PHI = 1 / PHI;\r\n\r\n// Vertices of a dodecahedron (except the opposites, which represent the\r\n// same axis), used as axis directions evenly spread on a sphere.\r\nconst _axisDirections = [\r\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\r\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\r\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\r\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\r\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\r\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\r\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\r\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\r\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\r\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\r\n\r\n/**\r\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n * blur to be quickly accessed based on material roughness. It is packed into a\r\n * special CubeUV format that allows us to perform custom interpolation so that\r\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n * higher roughness levels. In this way we maintain resolution to smoothly\r\n * interpolate diffuse lighting while limiting sampling computation.\r\n *\r\n * Paper: Fast, Accurate Image-Based Lighting\r\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\r\n*/\r\n\r\nclass PMREMGenerator {\r\n\r\n\tconstructor( renderer ) {\r\n\r\n\t\tthis._renderer = renderer;\r\n\t\tthis._pingPongRenderTarget = null;\r\n\r\n\t\tthis._lodMax = 0;\r\n\t\tthis._cubeSize = 0;\r\n\t\tthis._lodPlanes = [];\r\n\t\tthis._sizeLods = [];\r\n\t\tthis._sigmas = [];\r\n\r\n\t\tthis._blurMaterial = null;\r\n\t\tthis._cubemapMaterial = null;\r\n\t\tthis._equirectMaterial = null;\r\n\r\n\t\tthis._compileMaterial( this._blurMaterial );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n\t * in radians to be applied to the scene before PMREM generation. Optional near\r\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\r\n\t * is placed at the origin).\r\n\t */\r\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\r\n\r\n\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\r\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\r\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\r\n\r\n\t\tthis._renderer.xr.enabled = false;\r\n\r\n\t\tthis._setSize( 256 );\r\n\r\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\r\n\t\tcubeUVRenderTarget.depthBuffer = true;\r\n\r\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\r\n\r\n\t\tif ( sigma > 0 ) {\r\n\r\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\r\n\r\n\t\t}\r\n\r\n\t\tthis._applyPMREM( cubeUVRenderTarget );\r\n\t\tthis._cleanup( cubeUVRenderTarget );\r\n\r\n\t\treturn cubeUVRenderTarget;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\r\n\t * as this matches best with the 256 x 256 cubemap output.\r\n\t * The smallest supported equirectangular image size is 64 x 32.\r\n\t */\r\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\r\n\r\n\t\treturn this._fromTexture( equirectangular, renderTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\r\n\t * or HDR. The ideal input cube size is 256 x 256,\r\n\t * as this matches best with the 256 x 256 cubemap output.\r\n\t * The smallest supported cube size is 16 x 16.\r\n\t */\r\n\tfromCubemap( cubemap, renderTarget = null ) {\r\n\r\n\t\treturn this._fromTexture( cubemap, renderTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n\t * your texture's network fetch for increased concurrency.\r\n\t */\r\n\tcompileCubemapShader() {\r\n\r\n\t\tif ( this._cubemapMaterial === null ) {\r\n\r\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\r\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n\t * your texture's network fetch for increased concurrency.\r\n\t */\r\n\tcompileEquirectangularShader() {\r\n\r\n\t\tif ( this._equirectMaterial === null ) {\r\n\r\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\r\n\t\t\tthis._compileMaterial( this._equirectMaterial );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n\t * one of them will cause any others to also become unusable.\r\n\t */\r\n\tdispose() {\r\n\r\n\t\tthis._dispose();\r\n\r\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\r\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\r\n\r\n\t}\r\n\r\n\t// private interface\r\n\r\n\t_setSize( cubeSize ) {\r\n\r\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\r\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\r\n\r\n\t}\r\n\r\n\t_dispose() {\r\n\r\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\r\n\r\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\r\n\r\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\r\n\r\n\t\t\tthis._lodPlanes[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_cleanup( outputTarget ) {\r\n\r\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\r\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\r\n\r\n\t\toutputTarget.scissorTest = false;\r\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\r\n\r\n\t}\r\n\r\n\t_fromTexture( texture, renderTarget ) {\r\n\r\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\r\n\r\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\r\n\r\n\t\t} else { // Equirectangular\r\n\r\n\t\t\tthis._setSize( texture.image.width / 4 );\r\n\r\n\t\t}\r\n\r\n\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\r\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\r\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\r\n\r\n\t\tthis._renderer.xr.enabled = false;\r\n\r\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\r\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\r\n\t\tthis._applyPMREM( cubeUVRenderTarget );\r\n\t\tthis._cleanup( cubeUVRenderTarget );\r\n\r\n\t\treturn cubeUVRenderTarget;\r\n\r\n\t}\r\n\r\n\t_allocateTargets() {\r\n\r\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\r\n\t\tconst height = 4 * this._cubeSize;\r\n\r\n\t\tconst params = {\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tgenerateMipmaps: false,\r\n\t\t\ttype: HalfFloatType,\r\n\t\t\tformat: RGBAFormat,\r\n\t\t\tcolorSpace: LinearSRGBColorSpace,\r\n\t\t\tdepthBuffer: false\r\n\t\t};\r\n\r\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\r\n\r\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\r\n\r\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\r\n\r\n\t\t\t\tthis._dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\r\n\r\n\t\t\tconst { _lodMax } = this;\r\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\r\n\r\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\r\n\r\n\t\t}\r\n\r\n\t\treturn cubeUVRenderTarget;\r\n\r\n\t}\r\n\r\n\t_compileMaterial( material ) {\r\n\r\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\r\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\r\n\r\n\t}\r\n\r\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\r\n\r\n\t\tconst fov = 90;\r\n\t\tconst aspect = 1;\r\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\r\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\r\n\t\tconst renderer = this._renderer;\r\n\r\n\t\tconst originalAutoClear = renderer.autoClear;\r\n\t\tconst toneMapping = renderer.toneMapping;\r\n\t\trenderer.getClearColor( _clearColor );\r\n\r\n\t\trenderer.toneMapping = NoToneMapping;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\r\n\t\t\tname: 'PMREM.Background',\r\n\t\t\tside: BackSide,\r\n\t\t\tdepthWrite: false,\r\n\t\t\tdepthTest: false,\r\n\t\t} );\r\n\r\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\r\n\r\n\t\tlet useSolidColor = false;\r\n\t\tconst background = scene.background;\r\n\r\n\t\tif ( background ) {\r\n\r\n\t\t\tif ( background.isColor ) {\r\n\r\n\t\t\t\tbackgroundMaterial.color.copy( background );\r\n\t\t\t\tscene.background = null;\r\n\t\t\t\tuseSolidColor = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\r\n\t\t\tuseSolidColor = true;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst col = i % 3;\r\n\r\n\t\t\tif ( col === 0 ) {\r\n\r\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\r\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\r\n\r\n\t\t\t} else if ( col === 1 ) {\r\n\r\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\r\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\r\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst size = this._cubeSize;\r\n\r\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\r\n\r\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\r\n\r\n\t\t\tif ( useSolidColor ) {\r\n\r\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( scene, cubeCamera );\r\n\r\n\t\t}\r\n\r\n\t\tbackgroundBox.geometry.dispose();\r\n\t\tbackgroundBox.material.dispose();\r\n\r\n\t\trenderer.toneMapping = toneMapping;\r\n\t\trenderer.autoClear = originalAutoClear;\r\n\t\tscene.background = background;\r\n\r\n\t}\r\n\r\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\r\n\r\n\t\tconst renderer = this._renderer;\r\n\r\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\r\n\r\n\t\tif ( isCubeTexture ) {\r\n\r\n\t\t\tif ( this._cubemapMaterial === null ) {\r\n\r\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this._equirectMaterial === null ) {\r\n\r\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\r\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\r\n\r\n\t\tconst uniforms = material.uniforms;\r\n\r\n\t\tuniforms[ 'envMap' ].value = texture;\r\n\r\n\t\tconst size = this._cubeSize;\r\n\r\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\r\n\r\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\r\n\t\trenderer.render( mesh, _flatCamera );\r\n\r\n\t}\r\n\r\n\t_applyPMREM( cubeUVRenderTarget ) {\r\n\r\n\t\tconst renderer = this._renderer;\r\n\t\tconst autoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\t\tconst n = this._lodPlanes.length;\r\n\r\n\t\tfor ( let i = 1; i < n; i ++ ) {\r\n\r\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\r\n\r\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\r\n\r\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\r\n\r\n\t\t}\r\n\r\n\t\trenderer.autoClear = autoClear;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\r\n\t * the poles) to approximate the orthogonally-separable blur. It is least\r\n\t * accurate at the poles, but still does a decent job.\r\n\t */\r\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\r\n\r\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\r\n\r\n\t\tthis._halfBlur(\r\n\t\t\tcubeUVRenderTarget,\r\n\t\t\tpingPongRenderTarget,\r\n\t\t\tlodIn,\r\n\t\t\tlodOut,\r\n\t\t\tsigma,\r\n\t\t\t'latitudinal',\r\n\t\t\tpoleAxis );\r\n\r\n\t\tthis._halfBlur(\r\n\t\t\tpingPongRenderTarget,\r\n\t\t\tcubeUVRenderTarget,\r\n\t\t\tlodOut,\r\n\t\t\tlodOut,\r\n\t\t\tsigma,\r\n\t\t\t'longitudinal',\r\n\t\t\tpoleAxis );\r\n\r\n\t}\r\n\r\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\r\n\r\n\t\tconst renderer = this._renderer;\r\n\t\tconst blurMaterial = this._blurMaterial;\r\n\r\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\r\n\r\n\t\t\tconsole.error(\r\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\r\n\r\n\t\t}\r\n\r\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\r\n\t\tconst STANDARD_DEVIATIONS = 3;\r\n\r\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\r\n\t\tconst blurUniforms = blurMaterial.uniforms;\r\n\r\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\r\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\r\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\r\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\r\n\r\n\t\tif ( samples > MAX_SAMPLES ) {\r\n\r\n\t\t\tconsole.warn( `sigmaRadians, ${\r\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\r\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\r\n\r\n\t\t}\r\n\r\n\t\tconst weights = [];\r\n\t\tlet sum = 0;\r\n\r\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\r\n\r\n\t\t\tconst x = i / sigmaPixels;\r\n\t\t\tconst weight = Math.exp( - x * x / 2 );\r\n\t\t\tweights.push( weight );\r\n\r\n\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\tsum += weight;\r\n\r\n\t\t\t} else if ( i < samples ) {\r\n\r\n\t\t\t\tsum += 2 * weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\r\n\r\n\t\t\tweights[ i ] = weights[ i ] / sum;\r\n\r\n\t\t}\r\n\r\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\r\n\t\tblurUniforms[ 'samples' ].value = samples;\r\n\t\tblurUniforms[ 'weights' ].value = weights;\r\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\r\n\r\n\t\tif ( poleAxis ) {\r\n\r\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\r\n\r\n\t\t}\r\n\r\n\t\tconst { _lodMax } = this;\r\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\r\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\r\n\r\n\t\tconst outputSize = this._sizeLods[ lodOut ];\r\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\r\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\r\n\r\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\r\n\t\trenderer.setRenderTarget( targetOut );\r\n\t\trenderer.render( blurMesh, _flatCamera );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nfunction _createPlanes( lodMax ) {\r\n\r\n\tconst lodPlanes = [];\r\n\tconst sizeLods = [];\r\n\tconst sigmas = [];\r\n\r\n\tlet lod = lodMax;\r\n\r\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\r\n\r\n\tfor ( let i = 0; i < totalLods; i ++ ) {\r\n\r\n\t\tconst sizeLod = Math.pow( 2, lod );\r\n\t\tsizeLods.push( sizeLod );\r\n\t\tlet sigma = 1.0 / sizeLod;\r\n\r\n\t\tif ( i > lodMax - LOD_MIN ) {\r\n\r\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\r\n\r\n\t\t} else if ( i === 0 ) {\r\n\r\n\t\t\tsigma = 0;\r\n\r\n\t\t}\r\n\r\n\t\tsigmas.push( sigma );\r\n\r\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\r\n\t\tconst min = - texelSize;\r\n\t\tconst max = 1 + texelSize;\r\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\r\n\r\n\t\tconst cubeFaces = 6;\r\n\t\tconst vertices = 6;\r\n\t\tconst positionSize = 3;\r\n\t\tconst uvSize = 2;\r\n\t\tconst faceIndexSize = 1;\r\n\r\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\r\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\r\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\r\n\r\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\r\n\r\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\r\n\t\t\tconst y = face > 2 ? 0 : - 1;\r\n\t\t\tconst coordinates = [\r\n\t\t\t\tx, y, 0,\r\n\t\t\t\tx + 2 / 3, y, 0,\r\n\t\t\t\tx + 2 / 3, y + 1, 0,\r\n\t\t\t\tx, y, 0,\r\n\t\t\t\tx + 2 / 3, y + 1, 0,\r\n\t\t\t\tx, y + 1, 0\r\n\t\t\t];\r\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\r\n\t\t\tuv.set( uv1, uvSize * vertices * face );\r\n\t\t\tconst fill = [ face, face, face, face, face, face ];\r\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\r\n\r\n\t\t}\r\n\r\n\t\tconst planes = new BufferGeometry();\r\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\r\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\r\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\r\n\t\tlodPlanes.push( planes );\r\n\r\n\t\tif ( lod > LOD_MIN ) {\r\n\r\n\t\t\tlod --;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn { lodPlanes, sizeLods, sigmas };\r\n\r\n}\r\n\r\nfunction _createRenderTarget( width, height, params ) {\r\n\r\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\r\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\r\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\r\n\tcubeUVRenderTarget.scissorTest = true;\r\n\treturn cubeUVRenderTarget;\r\n\r\n}\r\n\r\nfunction _setViewport( target, x, y, width, height ) {\r\n\r\n\ttarget.viewport.set( x, y, width, height );\r\n\ttarget.scissor.set( x, y, width, height );\r\n\r\n}\r\n\r\nfunction _getBlurShader( lodMax, width, height ) {\r\n\r\n\tconst weights = new Float32Array( MAX_SAMPLES );\r\n\tconst poleAxis = new Vector3( 0, 1, 0 );\r\n\tconst shaderMaterial = new ShaderMaterial( {\r\n\r\n\t\tname: 'SphericalGaussianBlur',\r\n\r\n\t\tdefines: {\r\n\t\t\t'n': MAX_SAMPLES,\r\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\r\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\r\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\r\n\t\t},\r\n\r\n\t\tuniforms: {\r\n\t\t\t'envMap': { value: null },\r\n\t\t\t'samples': { value: 1 },\r\n\t\t\t'weights': { value: weights },\r\n\t\t\t'latitudinal': { value: false },\r\n\t\t\t'dTheta': { value: 0 },\r\n\t\t\t'mipInt': { value: 0 },\r\n\t\t\t'poleAxis': { value: poleAxis }\r\n\t\t},\r\n\r\n\t\tvertexShader: _getCommonVertexShader(),\r\n\r\n\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform int samples;\r\n\t\t\tuniform float weights[ n ];\r\n\t\t\tuniform bool latitudinal;\r\n\t\t\tuniform float dTheta;\r\n\t\t\tuniform float mipInt;\r\n\t\t\tuniform vec3 poleAxis;\r\n\r\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\r\n\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\r\n\r\n\t\t\t\tfloat cosTheta = cos( theta );\r\n\t\t\t\t// Rodrigues' axis-angle rotation\r\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\r\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\r\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\r\n\r\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\r\n\r\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\r\n\r\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\taxis = normalize( axis );\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\r\n\r\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\r\n\r\n\t\t\t\t\tif ( i >= samples ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfloat theta = dTheta * float( i );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\tblending: NoBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n\treturn shaderMaterial;\r\n\r\n}\r\n\r\nfunction _getEquirectMaterial() {\r\n\r\n\treturn new ShaderMaterial( {\r\n\r\n\t\tname: 'EquirectangularToCubeUV',\r\n\r\n\t\tuniforms: {\r\n\t\t\t'envMap': { value: null }\r\n\t\t},\r\n\r\n\t\tvertexShader: _getCommonVertexShader(),\r\n\r\n\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\r\n\t\t\t#include <common>\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\r\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\r\n\r\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\tblending: NoBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction _getCubemapMaterial() {\r\n\r\n\treturn new ShaderMaterial( {\r\n\r\n\t\tname: 'CubemapToCubeUV',\r\n\r\n\t\tuniforms: {\r\n\t\t\t'envMap': { value: null },\r\n\t\t\t'flipEnvMap': { value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: _getCommonVertexShader(),\r\n\r\n\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tuniform float flipEnvMap;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform samplerCube envMap;\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\tblending: NoBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction _getCommonVertexShader() {\r\n\r\n\treturn /* glsl */`\r\n\r\n\t\tprecision mediump float;\r\n\t\tprecision mediump int;\r\n\r\n\t\tattribute float faceIndex;\r\n\r\n\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t// RH coordinate system; PMREM face-indexing convention\r\n\t\tvec3 getDirection( vec2 uv, float face ) {\r\n\r\n\t\t\tuv = 2.0 * uv - 1.0;\r\n\r\n\t\t\tvec3 direction = vec3( uv, 1.0 );\r\n\r\n\t\t\tif ( face == 0.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\r\n\r\n\t\t\t} else if ( face == 1.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\r\n\r\n\t\t\t} else if ( face == 2.0 ) {\r\n\r\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\r\n\r\n\t\t\t} else if ( face == 3.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\r\n\r\n\t\t\t} else if ( face == 4.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\r\n\r\n\t\t\t} else if ( face == 5.0 ) {\r\n\r\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn direction;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\r\n\t\t\tgl_Position = vec4( position, 1.0 );\r\n\r\n\t\t}\r\n\t`;\r\n\r\n}\r\n\r\nfunction WebGLCubeUVMaps( renderer ) {\r\n\r\n\tlet cubeUVmaps = new WeakMap();\r\n\r\n\tlet pmremGenerator = null;\r\n\r\n\tfunction get( texture ) {\r\n\r\n\t\tif ( texture && texture.isTexture ) {\r\n\r\n\t\t\tconst mapping = texture.mapping;\r\n\r\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\r\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\r\n\r\n\t\t\t// equirect/cube map to cubeUV conversion\r\n\r\n\t\t\tif ( isEquirectMap || isCubeMap ) {\r\n\r\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\r\n\r\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\r\n\r\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\r\n\r\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\r\n\r\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\r\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\r\n\r\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\r\n\r\n\t\t\t\t\treturn renderTarget.texture;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( renderTarget !== undefined ) {\r\n\r\n\t\t\t\t\t\treturn renderTarget.texture;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\r\n\r\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\r\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\r\n\r\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\r\n\r\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\t\t\treturn renderTarget.texture;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\r\n\t\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tfunction isCubeTextureComplete( image ) {\r\n\r\n\t\tlet count = 0;\r\n\t\tconst length = 6;\r\n\r\n\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tif ( image[ i ] !== undefined ) count ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn count === length;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tconst texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\r\n\r\n\t\tif ( cubemapUV !== undefined ) {\r\n\r\n\t\t\tcubeUVmaps.delete( texture );\r\n\t\t\tcubemapUV.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tcubeUVmaps = new WeakMap();\r\n\r\n\t\tif ( pmremGenerator !== null ) {\r\n\r\n\t\t\tpmremGenerator.dispose();\r\n\t\t\tpmremGenerator = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLExtensions( gl ) {\r\n\r\n\tconst extensions = {};\r\n\r\n\tfunction getExtension( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tlet extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\thas: function ( name ) {\r\n\r\n\t\t\treturn getExtension( name ) !== null;\r\n\r\n\t\t},\r\n\r\n\t\tinit: function () {\r\n\r\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\r\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\r\n\t\t\tgetExtension( 'OES_texture_float_linear' );\r\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\r\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\r\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( name ) {\r\n\r\n\t\t\tconst extension = getExtension( name );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn extension;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\r\n\r\n\tconst geometries = {};\r\n\tconst wireframeAttributes = new WeakMap();\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tconst geometry = event.target;\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\tattributes.remove( geometry.index );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const name in geometry.attributes ) {\r\n\r\n\t\t\tattributes.remove( geometry.attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const name in geometry.morphAttributes ) {\r\n\r\n\t\t\tconst array = geometry.morphAttributes[ name ];\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tattributes.remove( array[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tconst attribute = wireframeAttributes.get( geometry );\r\n\r\n\t\tif ( attribute ) {\r\n\r\n\t\t\tattributes.remove( attribute );\r\n\t\t\twireframeAttributes.delete( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\r\n\r\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\r\n\r\n\t\t\tdelete geometry._maxInstanceCount;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction get( object, geometry ) {\r\n\r\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tgeometries[ geometry.id ] = true;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction update( geometry ) {\r\n\r\n\t\tconst geometryAttributes = geometry.attributes;\r\n\r\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\r\n\r\n\t\tfor ( const name in geometryAttributes ) {\r\n\r\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateWireframeAttribute( geometry ) {\r\n\r\n\t\tconst indices = [];\r\n\r\n\t\tconst geometryIndex = geometry.index;\r\n\t\tconst geometryPosition = geometry.attributes.position;\r\n\t\tlet version = 0;\r\n\r\n\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\tconst array = geometryIndex.array;\r\n\t\t\tversion = geometryIndex.version;\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tconst a = array[ i + 0 ];\r\n\t\t\t\tconst b = array[ i + 1 ];\r\n\t\t\t\tconst c = array[ i + 2 ];\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometryPosition !== undefined ) {\r\n\r\n\t\t\tconst array = geometryPosition.array;\r\n\t\t\tversion = geometryPosition.version;\r\n\r\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tconst a = i + 0;\r\n\t\t\t\tconst b = i + 1;\r\n\t\t\t\tconst c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\t\tattribute.version = version;\r\n\r\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\r\n\r\n\t\t//\r\n\r\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\r\n\r\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\r\n\r\n\t\t//\r\n\r\n\t\twireframeAttributes.set( geometry, attribute );\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\r\n\r\n\t\tif ( currentAttribute ) {\r\n\r\n\t\t\tconst geometryIndex = geometry.index;\r\n\r\n\t\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\t\t// if the attribute is obsolete, create a new one\r\n\r\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\r\n\r\n\t\t\t\t\tupdateWireframeAttribute( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tupdateWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\treturn wireframeAttributes.get( geometry );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tget: get,\r\n\t\tupdate: update,\r\n\r\n\t\tgetWireframeAttribute: getWireframeAttribute\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\r\n\r\n\tlet mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tlet type, bytesPerElement;\r\n\r\n\tfunction setIndex( value ) {\r\n\r\n\t\ttype = value.type;\r\n\t\tbytesPerElement = value.bytesPerElement;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\r\n\r\n\t\tinfo.update( count, mode, 1 );\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( start, count, primcount ) {\r\n\r\n\t\tif ( primcount === 0 ) return;\r\n\r\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\r\n\r\n\t\tinfo.update( count, mode, primcount );\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\r\n\r\n\t\t\tlet elementCount = 0;\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\telementCount += counts[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.update( elementCount, mode, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\r\n\r\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\r\n\r\n\t\t\tlet elementCount = 0;\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\telementCount += counts[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\r\n\r\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\tthis.renderMultiDraw = renderMultiDraw;\r\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\r\n\r\n}\r\n\r\nfunction WebGLInfo( gl ) {\r\n\r\n\tconst memory = {\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\t};\r\n\r\n\tconst render = {\r\n\t\tframe: 0,\r\n\t\tcalls: 0,\r\n\t\ttriangles: 0,\r\n\t\tpoints: 0,\r\n\t\tlines: 0\r\n\t};\r\n\r\n\tfunction update( count, mode, instanceCount ) {\r\n\r\n\t\trender.calls ++;\r\n\r\n\t\tswitch ( mode ) {\r\n\r\n\t\t\tcase gl.TRIANGLES:\r\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.LINES:\r\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.LINE_STRIP:\r\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.LINE_LOOP:\r\n\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.POINTS:\r\n\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reset() {\r\n\r\n\t\trender.calls = 0;\r\n\t\trender.triangles = 0;\r\n\t\trender.points = 0;\r\n\t\trender.lines = 0;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tmemory: memory,\r\n\t\trender: render,\r\n\t\tprograms: null,\r\n\t\tautoReset: true,\r\n\t\treset: reset,\r\n\t\tupdate: update\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\r\n\r\n\tconst morphTextures = new WeakMap();\r\n\tconst morph = new Vector4();\r\n\r\n\tfunction update( object, geometry, program ) {\r\n\r\n\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\r\n\r\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\tlet entry = morphTextures.get( geometry );\r\n\r\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\r\n\r\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\r\n\r\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\r\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\r\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\r\n\r\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\r\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\r\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\r\n\r\n\t\t\tlet vertexDataCount = 0;\r\n\r\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\r\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\r\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\r\n\r\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\r\n\t\t\tlet height = 1;\r\n\r\n\t\t\tif ( width > capabilities.maxTextureSize ) {\r\n\r\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\r\n\t\t\t\twidth = capabilities.maxTextureSize;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\r\n\r\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\r\n\t\t\ttexture.type = FloatType;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t// fill buffer\r\n\r\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\r\n\r\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\r\n\r\n\t\t\t\tconst morphTarget = morphTargets[ i ];\r\n\t\t\t\tconst morphNormal = morphNormals[ i ];\r\n\t\t\t\tconst morphColor = morphColors[ i ];\r\n\r\n\t\t\t\tconst offset = width * height * 4 * i;\r\n\r\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\r\n\r\n\t\t\t\t\tconst stride = j * vertexDataStride;\r\n\r\n\t\t\t\t\tif ( hasMorphPosition === true ) {\r\n\r\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\r\n\r\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasMorphNormals === true ) {\r\n\r\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\r\n\r\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasMorphColors === true ) {\r\n\r\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\r\n\r\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tentry = {\r\n\t\t\t\tcount: morphTargetsCount,\r\n\t\t\t\ttexture: texture,\r\n\t\t\t\tsize: new Vector2( width, height )\r\n\t\t\t};\r\n\r\n\t\t\tmorphTextures.set( geometry, entry );\r\n\r\n\t\t\tfunction disposeTexture() {\r\n\r\n\t\t\t\ttexture.dispose();\r\n\r\n\t\t\t\tmorphTextures.delete( geometry );\r\n\r\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n\r\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\r\n\r\n\t\t}\r\n\r\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\r\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tupdate: update\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLObjects( gl, geometries, attributes, info ) {\r\n\r\n\tlet updateMap = new WeakMap();\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\tconst frame = info.render.frame;\r\n\r\n\t\tconst geometry = object.geometry;\r\n\t\tconst buffergeometry = geometries.get( object, geometry );\r\n\r\n\t\t// Update once per frame\r\n\r\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\r\n\r\n\t\t\tgeometries.update( buffergeometry );\r\n\r\n\t\t\tupdateMap.set( buffergeometry, frame );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isInstancedMesh ) {\r\n\r\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\r\n\r\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( updateMap.get( object ) !== frame ) {\r\n\r\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\r\n\r\n\t\t\t\tif ( object.instanceColor !== null ) {\r\n\r\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdateMap.set( object, frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\tconst skeleton = object.skeleton;\r\n\r\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\r\n\r\n\t\t\t\tskeleton.update();\r\n\r\n\t\t\t\tupdateMap.set( skeleton, frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tupdateMap = new WeakMap();\r\n\r\n\t}\r\n\r\n\tfunction onInstancedMeshDispose( event ) {\r\n\r\n\t\tconst instancedMesh = event.target;\r\n\r\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\r\n\r\n\t\tattributes.remove( instancedMesh.instanceMatrix );\r\n\r\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tupdate: update,\r\n\t\tdispose: dispose\r\n\r\n\t};\r\n\r\n}\r\n\r\nclass DepthTexture extends Texture {\r\n\r\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\r\n\r\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\r\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isDepthTexture = true;\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tthis.compareFunction = null;\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.compareFunction = source.compareFunction;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [textures] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'textures' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (textures factorizations):\r\n *\r\n * .upload( gl, seq, values, textures )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n *\r\n * Methods of the top-level container (textures factorizations):\r\n *\r\n * .setValue( gl, name, value, textures )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n */\r\n\r\n\r\nconst emptyTexture = /*@__PURE__*/ new Texture();\r\n\r\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\r\nemptyShadowTexture.compareFunction = LessEqualCompare;\r\n\r\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\r\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\r\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\r\n\r\n// --- Utilities ---\r\n\r\n// Array Caches (provide typed arrays for temporary by size)\r\n\r\nconst arrayCacheF32 = [];\r\nconst arrayCacheI32 = [];\r\n\r\n// Float32Array caches used for uploading Matrix uniforms\r\n\r\nconst mat4array = new Float32Array( 16 );\r\nconst mat3array = new Float32Array( 9 );\r\nconst mat2array = new Float32Array( 4 );\r\n\r\n// Flattening for arrays of vectors and matrices\r\n\r\nfunction flatten( array, nBlocks, blockSize ) {\r\n\r\n\tconst firstElem = array[ 0 ];\r\n\r\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t// unoptimized: ! isNaN( firstElem )\r\n\t// see http://jacksondunstan.com/articles/983\r\n\r\n\tconst n = nBlocks * blockSize;\r\n\tlet r = arrayCacheF32[ n ];\r\n\r\n\tif ( r === undefined ) {\r\n\r\n\t\tr = new Float32Array( n );\r\n\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t}\r\n\r\n\tif ( nBlocks !== 0 ) {\r\n\r\n\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\toffset += blockSize;\r\n\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n}\r\n\r\nfunction arraysEqual( a, b ) {\r\n\r\n\tif ( a.length !== b.length ) return false;\r\n\r\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\r\n\r\n\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction copyArray( a, b ) {\r\n\r\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\r\n\r\n\t\ta[ i ] = b[ i ];\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Texture unit allocation\r\n\r\nfunction allocTexUnits( textures, n ) {\r\n\r\n\tlet r = arrayCacheI32[ n ];\r\n\r\n\tif ( r === undefined ) {\r\n\r\n\t\tr = new Int32Array( n );\r\n\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\tr[ i ] = textures.allocateTextureUnit();\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n}\r\n\r\n// --- Setters ---\r\n\r\n// Note: Defining these methods externally, because they come in a bunch\r\n// and this way their names minify.\r\n\r\n// Single scalar\r\n\r\nfunction setValueV1f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1f( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single float vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else if ( v.r !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n\r\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\r\n\t\t\tcache[ 0 ] = v.r;\r\n\t\t\tcache[ 1 ] = v.g;\r\n\t\t\tcache[ 2 ] = v.b;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single matrix (from flat array or THREE.MatrixN)\r\n\r\nfunction setValueM2( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat2array.set( elements );\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueM3( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat3array.set( elements );\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueM4( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat4array.set( elements );\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single integer / boolean\r\n\r\nfunction setValueV1i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1i( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single integer / boolean vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single unsigned integer\r\n\r\nfunction setValueV1ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1ui( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single unsigned integer vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2uiv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3uiv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4uiv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Single texture (2D / Cube)\r\n\r\nfunction setValueT1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\r\n\r\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\r\n\r\n}\r\n\r\nfunction setValueT3D1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture3D( v || empty3dTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT6( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT2DArray1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\r\n\r\n}\r\n\r\n// Helper to pick the right setter for the singular case\r\n\r\nfunction getSingularSetter( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase 0x1406: return setValueV1f; // FLOAT\r\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\r\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\r\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\r\n\r\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\r\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\r\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\r\n\r\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\r\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\r\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\r\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\r\n\r\n\t\tcase 0x1405: return setValueV1ui; // UINT\r\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\r\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\r\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\r\n\r\n\t\tcase 0x8b5e: // SAMPLER_2D\r\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\treturn setValueT1;\r\n\r\n\t\tcase 0x8b5f: // SAMPLER_3D\r\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\treturn setValueT3D1;\r\n\r\n\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\treturn setValueT6;\r\n\r\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\treturn setValueT2DArray1;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Array of scalars\r\n\r\nfunction setValueV1fArray( gl, v ) {\r\n\r\n\tgl.uniform1fv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of vectors (from flat array or array of THREE.VectorN)\r\n\r\nfunction setValueV2fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 2 );\r\n\r\n\tgl.uniform2fv( this.addr, data );\r\n\r\n}\r\n\r\nfunction setValueV3fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 3 );\r\n\r\n\tgl.uniform3fv( this.addr, data );\r\n\r\n}\r\n\r\nfunction setValueV4fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 4 );\r\n\r\n\tgl.uniform4fv( this.addr, data );\r\n\r\n}\r\n\r\n// Array of matrices (from flat array or array of THREE.MatrixN)\r\n\r\nfunction setValueM2Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 4 );\r\n\r\n\tgl.uniformMatrix2fv( this.addr, false, data );\r\n\r\n}\r\n\r\nfunction setValueM3Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 9 );\r\n\r\n\tgl.uniformMatrix3fv( this.addr, false, data );\r\n\r\n}\r\n\r\nfunction setValueM4Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 16 );\r\n\r\n\tgl.uniformMatrix4fv( this.addr, false, data );\r\n\r\n}\r\n\r\n// Array of integer / boolean\r\n\r\nfunction setValueV1iArray( gl, v ) {\r\n\r\n\tgl.uniform1iv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of integer / boolean vectors (from flat array)\r\n\r\nfunction setValueV2iArray( gl, v ) {\r\n\r\n\tgl.uniform2iv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV3iArray( gl, v ) {\r\n\r\n\tgl.uniform3iv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV4iArray( gl, v ) {\r\n\r\n\tgl.uniform4iv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of unsigned integer\r\n\r\nfunction setValueV1uiArray( gl, v ) {\r\n\r\n\tgl.uniform1uiv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of unsigned integer vectors (from flat array)\r\n\r\nfunction setValueV2uiArray( gl, v ) {\r\n\r\n\tgl.uniform2uiv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV3uiArray( gl, v ) {\r\n\r\n\tgl.uniform3uiv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV4uiArray( gl, v ) {\r\n\r\n\tgl.uniform4uiv( this.addr, v );\r\n\r\n}\r\n\r\n\r\n// Array of textures (2D / 3D / Cube / 2DArray)\r\n\r\nfunction setValueT1Array( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT3DArray( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT6Array( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT2DArrayArray( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\nfunction getPureArraySetter( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\r\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\r\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\r\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\r\n\r\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\r\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\r\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\r\n\r\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\r\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\r\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\r\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\r\n\r\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\r\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\r\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\r\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\r\n\r\n\t\tcase 0x8b5e: // SAMPLER_2D\r\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\treturn setValueT1Array;\r\n\r\n\t\tcase 0x8b5f: // SAMPLER_3D\r\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\treturn setValueT3DArray;\r\n\r\n\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\treturn setValueT6Array;\r\n\r\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\treturn setValueT2DArrayArray;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// --- Uniform Classes ---\r\n\r\nclass SingleUniform {\r\n\r\n\tconstructor( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.type = activeInfo.type;\r\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PureArrayUniform {\r\n\r\n\tconstructor( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.type = activeInfo.type;\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass StructuredUniform {\r\n\r\n\tconstructor( id ) {\r\n\r\n\t\tthis.id = id;\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t}\r\n\r\n\tsetValue( gl, value, textures ) {\r\n\r\n\t\tconst seq = this.seq;\r\n\r\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ], textures );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// --- Top-level ---\r\n\r\n// Parser - builds up the property tree from the path strings\r\n\r\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\r\n\r\n// extracts\r\n// \t- the identifier (member name or array index)\r\n//  - followed by an optional right bracket (found when array index)\r\n//  - followed by an optional left bracket or dot (type of subscript)\r\n//\r\n// Note: These portions can be read in a non-overlapping fashion and\r\n// allow straightforward parsing of the hierarchy that WebGL encodes\r\n// in the uniform names.\r\n\r\nfunction addUniform( container, uniformObject ) {\r\n\r\n\tcontainer.seq.push( uniformObject );\r\n\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n}\r\n\r\nfunction parseUniform( activeInfo, addr, container ) {\r\n\r\n\tconst path = activeInfo.name,\r\n\t\tpathLength = path.length;\r\n\r\n\t// reset RegExp object, because of the early exit of a previous run\r\n\tRePathPart.lastIndex = 0;\r\n\r\n\twhile ( true ) {\r\n\r\n\t\tconst match = RePathPart.exec( path ),\r\n\t\t\tmatchEnd = RePathPart.lastIndex;\r\n\r\n\t\tlet id = match[ 1 ];\r\n\t\tconst idIsIndex = match[ 2 ] === ']',\r\n\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n\r\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\tconst map = container.map;\r\n\t\t\tlet next = map[ id ];\r\n\r\n\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontainer = next;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Root Container\r\n\r\nclass WebGLUniforms {\r\n\r\n\tconstructor( gl, program ) {\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( let i = 0; i < n; ++ i ) {\r\n\r\n\t\t\tconst info = gl.getActiveUniform( program, i ),\r\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\r\n\r\n\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetValue( gl, name, value, textures ) {\r\n\r\n\t\tconst u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\r\n\r\n\t}\r\n\r\n\tsetOptional( gl, object, name ) {\r\n\r\n\t\tconst v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t}\r\n\r\n\tstatic upload( gl, seq, values, textures ) {\r\n\r\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue( gl, v.value, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic seqWithValue( seq, values ) {\r\n\r\n\t\tconst r = [];\r\n\r\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction WebGLShader( gl, type, string ) {\r\n\r\n\tconst shader = gl.createShader( type );\r\n\r\n\tgl.shaderSource( shader, string );\r\n\tgl.compileShader( shader );\r\n\r\n\treturn shader;\r\n\r\n}\r\n\r\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\r\nconst COMPLETION_STATUS_KHR = 0x91B1;\r\n\r\nlet programIdCount = 0;\r\n\r\nfunction handleSource( string, errorLine ) {\r\n\r\n\tconst lines = string.split( '\\n' );\r\n\tconst lines2 = [];\r\n\r\n\tconst from = Math.max( errorLine - 6, 0 );\r\n\tconst to = Math.min( errorLine + 6, lines.length );\r\n\r\n\tfor ( let i = from; i < to; i ++ ) {\r\n\r\n\t\tconst line = i + 1;\r\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\r\n\r\n\t}\r\n\r\n\treturn lines2.join( '\\n' );\r\n\r\n}\r\n\r\nfunction getEncodingComponents( colorSpace ) {\r\n\r\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\r\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\r\n\r\n\tlet gamutMapping;\r\n\r\n\tif ( workingPrimaries === encodingPrimaries ) {\r\n\r\n\t\tgamutMapping = '';\r\n\r\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\r\n\r\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\r\n\r\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\r\n\r\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\r\n\r\n\t}\r\n\r\n\tswitch ( colorSpace ) {\r\n\r\n\t\tcase LinearSRGBColorSpace:\r\n\t\tcase LinearDisplayP3ColorSpace:\r\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\r\n\r\n\t\tcase SRGBColorSpace:\r\n\t\tcase DisplayP3ColorSpace:\r\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\r\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getShaderErrors( gl, shader, type ) {\r\n\r\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\r\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\r\n\r\n\tif ( status && errors === '' ) return '';\r\n\r\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\r\n\tif ( errorMatches ) {\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\r\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\r\n\r\n\t} else {\r\n\r\n\t\treturn errors;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\r\n\r\n\tconst components = getEncodingComponents( colorSpace );\r\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\r\n\r\n}\r\n\r\nfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\tlet toneMappingName;\r\n\r\n\tswitch ( toneMapping ) {\r\n\r\n\t\tcase LinearToneMapping:\r\n\t\t\ttoneMappingName = 'Linear';\r\n\t\t\tbreak;\r\n\r\n\t\tcase ReinhardToneMapping:\r\n\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\tbreak;\r\n\r\n\t\tcase CineonToneMapping:\r\n\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\tbreak;\r\n\r\n\t\tcase ACESFilmicToneMapping:\r\n\t\t\ttoneMappingName = 'ACESFilmic';\r\n\t\t\tbreak;\r\n\r\n\t\tcase AgXToneMapping:\r\n\t\t\ttoneMappingName = 'AgX';\r\n\t\t\tbreak;\r\n\r\n\t\tcase NeutralToneMapping:\r\n\t\t\ttoneMappingName = 'Neutral';\r\n\t\t\tbreak;\r\n\r\n\t\tcase CustomToneMapping:\r\n\t\t\ttoneMappingName = 'Custom';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\r\n\t\t\ttoneMappingName = 'Linear';\r\n\r\n\t}\r\n\r\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\r\n}\r\n\r\nfunction generateVertexExtensions( parameters ) {\r\n\r\n\tconst chunks = [\r\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\r\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\r\n\t];\r\n\r\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n}\r\n\r\nfunction generateDefines( defines ) {\r\n\r\n\tconst chunks = [];\r\n\r\n\tfor ( const name in defines ) {\r\n\r\n\t\tconst value = defines[ name ];\r\n\r\n\t\tif ( value === false ) continue;\r\n\r\n\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t}\r\n\r\n\treturn chunks.join( '\\n' );\r\n\r\n}\r\n\r\nfunction fetchAttributeLocations( gl, program ) {\r\n\r\n\tconst attributes = {};\r\n\r\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\tfor ( let i = 0; i < n; i ++ ) {\r\n\r\n\t\tconst info = gl.getActiveAttrib( program, i );\r\n\t\tconst name = info.name;\r\n\r\n\t\tlet locationSize = 1;\r\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\r\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\r\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\r\n\r\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\tattributes[ name ] = {\r\n\t\t\ttype: info.type,\r\n\t\t\tlocation: gl.getAttribLocation( program, name ),\r\n\t\t\tlocationSize: locationSize\r\n\t\t};\r\n\r\n\t}\r\n\r\n\treturn attributes;\r\n\r\n}\r\n\r\nfunction filterEmptyLine( string ) {\r\n\r\n\treturn string !== '';\r\n\r\n}\r\n\r\nfunction replaceLightNums( string, parameters ) {\r\n\r\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\r\n\r\n\treturn string\r\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\r\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\r\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\r\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\r\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\r\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\r\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\r\n\r\n}\r\n\r\nfunction replaceClippingPlaneNums( string, parameters ) {\r\n\r\n\treturn string\r\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n\r\n}\r\n\r\n// Resolve Includes\r\n\r\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\nfunction resolveIncludes( string ) {\r\n\r\n\treturn string.replace( includePattern, includeReplacer );\r\n\r\n}\r\n\r\nconst shaderChunkMap = new Map();\r\n\r\nfunction includeReplacer( match, include ) {\r\n\r\n\tlet string = ShaderChunk[ include ];\r\n\r\n\tif ( string === undefined ) {\r\n\r\n\t\tconst newInclude = shaderChunkMap.get( include );\r\n\r\n\t\tif ( newInclude !== undefined ) {\r\n\r\n\t\t\tstring = ShaderChunk[ newInclude ];\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn resolveIncludes( string );\r\n\r\n}\r\n\r\n// Unroll Loops\r\n\r\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n\r\nfunction unrollLoops( string ) {\r\n\r\n\treturn string.replace( unrollLoopPattern, loopReplacer );\r\n\r\n}\r\n\r\nfunction loopReplacer( match, start, end, snippet ) {\r\n\r\n\tlet string = '';\r\n\r\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\tstring += snippet\r\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\r\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\r\n\r\n\t}\r\n\r\n\treturn string;\r\n\r\n}\r\n\r\n//\r\n\r\nfunction generatePrecision( parameters ) {\r\n\r\n\tlet precisionstring = `precision ${parameters.precision} float;\r\n\tprecision ${parameters.precision} int;\r\n\tprecision ${parameters.precision} sampler2D;\r\n\tprecision ${parameters.precision} samplerCube;\r\n\tprecision ${parameters.precision} sampler3D;\r\n\tprecision ${parameters.precision} sampler2DArray;\r\n\tprecision ${parameters.precision} sampler2DShadow;\r\n\tprecision ${parameters.precision} samplerCubeShadow;\r\n\tprecision ${parameters.precision} sampler2DArrayShadow;\r\n\tprecision ${parameters.precision} isampler2D;\r\n\tprecision ${parameters.precision} isampler3D;\r\n\tprecision ${parameters.precision} isamplerCube;\r\n\tprecision ${parameters.precision} isampler2DArray;\r\n\tprecision ${parameters.precision} usampler2D;\r\n\tprecision ${parameters.precision} usampler3D;\r\n\tprecision ${parameters.precision} usamplerCube;\r\n\tprecision ${parameters.precision} usampler2DArray;\r\n\t`;\r\n\r\n\tif ( parameters.precision === 'highp' ) {\r\n\r\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\r\n\r\n\t} else if ( parameters.precision === 'mediump' ) {\r\n\r\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\r\n\r\n\t} else if ( parameters.precision === 'lowp' ) {\r\n\r\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\r\n\r\n\t}\r\n\r\n\treturn precisionstring;\r\n\r\n}\r\n\r\nfunction generateShadowMapTypeDefine( parameters ) {\r\n\r\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n\r\n\t}\r\n\r\n\treturn shadowMapTypeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapTypeDefine( parameters ) {\r\n\r\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.envMapMode ) {\r\n\r\n\t\t\tcase CubeReflectionMapping:\r\n\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapTypeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapModeDefine( parameters ) {\r\n\r\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.envMapMode ) {\r\n\r\n\t\t\tcase CubeRefractionMapping:\r\n\r\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapModeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapBlendingDefine( parameters ) {\r\n\r\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.combine ) {\r\n\r\n\t\t\tcase MultiplyOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MixOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AddOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapBlendingDefine;\r\n\r\n}\r\n\r\nfunction generateCubeUVSize( parameters ) {\r\n\r\n\tconst imageHeight = parameters.envMapCubeUVHeight;\r\n\r\n\tif ( imageHeight === null ) return null;\r\n\r\n\tconst maxMip = Math.log2( imageHeight ) - 2;\r\n\r\n\tconst texelHeight = 1.0 / imageHeight;\r\n\r\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\r\n\r\n\treturn { texelWidth, texelHeight, maxMip };\r\n\r\n}\r\n\r\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\r\n\r\n\t// TODO Send this event to Three.js DevTools\r\n\t// console.log( 'WebGLProgram', cacheKey );\r\n\r\n\tconst gl = renderer.getContext();\r\n\r\n\tconst defines = parameters.defines;\r\n\r\n\tlet vertexShader = parameters.vertexShader;\r\n\tlet fragmentShader = parameters.fragmentShader;\r\n\r\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\r\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\r\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\r\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\r\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\r\n\r\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\r\n\r\n\tconst customDefines = generateDefines( defines );\r\n\r\n\tconst program = gl.createProgram();\r\n\r\n\tlet prefixVertex, prefixFragment;\r\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n\r\n\tif ( parameters.isRawShaderMaterial ) {\r\n\r\n\t\tprefixVertex = [\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tif ( prefixVertex.length > 0 ) {\r\n\r\n\t\t\tprefixVertex += '\\n';\r\n\r\n\t\t}\r\n\r\n\t\tprefixFragment = [\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tif ( prefixFragment.length > 0 ) {\r\n\r\n\t\t\tprefixFragment += '\\n';\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tprefixVertex = [\r\n\r\n\t\t\tgeneratePrecision( parameters ),\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\r\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\r\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\r\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\r\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\r\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\r\n\r\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\r\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\r\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\r\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\r\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\r\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\r\n\r\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\r\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\r\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\r\n\r\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\r\n\r\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\r\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\r\n\r\n\t\t\t//\r\n\r\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\r\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\r\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\r\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\r\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\r\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\r\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\r\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\r\n\r\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\r\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\r\n\r\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\r\n\r\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\r\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\r\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\r\n\r\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\r\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\r\n\r\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\r\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\r\n\r\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\r\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\r\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\r\n\r\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\r\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\r\n\r\n\t\t\t//\r\n\r\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\r\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\r\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\r\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\r\n\r\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\r\n\r\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\r\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\r\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\r\n\r\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\r\n\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t'uniform bool isOrthographic;',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING',\r\n\r\n\t\t\t'\tattribute mat4 instanceMatrix;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\r\n\r\n\t\t\t'\tattribute vec3 instanceColor;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\r\n\r\n\t\t\t'\tuniform sampler2D morphTexture;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'attribute vec3 position;',\r\n\t\t\t'attribute vec3 normal;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'#ifdef USE_UV1',\r\n\r\n\t\t\t'\tattribute vec2 uv1;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_UV2',\r\n\r\n\t\t\t'\tattribute vec2 uv2;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_UV3',\r\n\r\n\t\t\t'\tattribute vec2 uv3;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_TANGENT',\r\n\r\n\t\t\t'\tattribute vec4 tangent;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\r\n\r\n\t\t\t'\tattribute vec4 color;',\r\n\r\n\t\t\t'#elif defined( USE_COLOR )',\r\n\r\n\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'\\n'\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tprefixFragment = [\r\n\r\n\t\t\tgeneratePrecision( parameters ),\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\r\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\r\n\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\r\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\r\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\r\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\r\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\r\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\r\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\r\n\r\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\r\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\r\n\r\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\r\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\r\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\r\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\r\n\r\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\r\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\r\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\r\n\r\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\r\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\r\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\r\n\r\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\r\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\r\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\r\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\r\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\r\n\r\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\r\n\r\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n\r\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n\r\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\r\n\r\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\r\n\r\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\r\n\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t'uniform bool isOrthographic;',\r\n\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n\r\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\r\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\r\n\r\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\r\n\r\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\r\n\r\n\t\t\t'\\n'\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tvertexShader = resolveIncludes( vertexShader );\r\n\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\n\tfragmentShader = resolveIncludes( fragmentShader );\r\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\n\tvertexShader = unrollLoops( vertexShader );\r\n\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\tif ( parameters.isRawShaderMaterial !== true ) {\r\n\r\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n\r\n\t\tversionString = '#version 300 es\\n';\r\n\r\n\t\tprefixVertex = [\r\n\t\t\tcustomVertexExtensions,\r\n\t\t\t'#define attribute in',\r\n\t\t\t'#define varying out',\r\n\t\t\t'#define texture2D texture'\r\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\r\n\r\n\t\tprefixFragment = [\r\n\t\t\t'#define varying in',\r\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\r\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t'#define texture2D texture',\r\n\t\t\t'#define textureCube texture',\r\n\t\t\t'#define texture2DProj textureProj',\r\n\t\t\t'#define texture2DLodEXT textureLod',\r\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t'#define textureCubeLodEXT textureLod',\r\n\t\t\t'#define texture2DGradEXT textureGrad',\r\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t'#define textureCubeGradEXT textureGrad'\r\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\r\n\r\n\t}\r\n\r\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\r\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\r\n\r\n\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\tgl.attachShader( program, glVertexShader );\r\n\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t// Force a particular attribute to index 0.\r\n\r\n\tif ( parameters.index0AttributeName !== undefined ) {\r\n\r\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\r\n\r\n\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t}\r\n\r\n\tgl.linkProgram( program );\r\n\r\n\tfunction onFirstUse( self ) {\r\n\r\n\t\t// check for link errors\r\n\t\tif ( renderer.debug.checkShaderErrors ) {\r\n\r\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\r\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\r\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\r\n\r\n\t\t\tlet runnable = true;\r\n\t\t\tlet haveDiagnostics = true;\r\n\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\t\trunnable = false;\r\n\r\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\r\n\r\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// default error reporting\r\n\r\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\r\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\r\n\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\r\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\r\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\r\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\r\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\r\n\t\t\t\t\t\tvertexErrors + '\\n' +\r\n\t\t\t\t\t\tfragmentErrors\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\r\n\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\t\thaveDiagnostics = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\t\tself.diagnostics = {\r\n\r\n\t\t\t\t\trunnable: runnable,\r\n\r\n\t\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Clean up\r\n\r\n\t\t// Crashes in iOS9 and iOS10. #18402\r\n\t\t// gl.detachShader( program, glVertexShader );\r\n\t\t// gl.detachShader( program, glFragmentShader );\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\r\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t}\r\n\r\n\t// set up caching for uniform locations\r\n\r\n\tlet cachedUniforms;\r\n\r\n\tthis.getUniforms = function () {\r\n\r\n\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t// Populates cachedUniforms and cachedAttributes\r\n\t\t\tonFirstUse( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn cachedUniforms;\r\n\r\n\t};\r\n\r\n\t// set up caching for attribute locations\r\n\r\n\tlet cachedAttributes;\r\n\r\n\tthis.getAttributes = function () {\r\n\r\n\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t// Populates cachedAttributes and cachedUniforms\r\n\t\t\tonFirstUse( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn cachedAttributes;\r\n\r\n\t};\r\n\r\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\r\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\r\n\r\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\r\n\r\n\tthis.isReady = function () {\r\n\r\n\t\tif ( programReady === false ) {\r\n\r\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\r\n\r\n\t\t}\r\n\r\n\t\treturn programReady;\r\n\r\n\t};\r\n\r\n\t// free resource\r\n\r\n\tthis.destroy = function () {\r\n\r\n\t\tbindingStates.releaseStatesOfProgram( this );\r\n\r\n\t\tgl.deleteProgram( program );\r\n\t\tthis.program = undefined;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.type = parameters.shaderType;\r\n\tthis.name = parameters.shaderName;\r\n\tthis.id = programIdCount ++;\r\n\tthis.cacheKey = cacheKey;\r\n\tthis.usedTimes = 1;\r\n\tthis.program = program;\r\n\tthis.vertexShader = glVertexShader;\r\n\tthis.fragmentShader = glFragmentShader;\r\n\r\n\treturn this;\r\n\r\n}\r\n\r\nlet _id$1 = 0;\r\n\r\nclass WebGLShaderCache {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.shaderCache = new Map();\r\n\t\tthis.materialCache = new Map();\r\n\r\n\t}\r\n\r\n\tupdate( material ) {\r\n\r\n\t\tconst vertexShader = material.vertexShader;\r\n\t\tconst fragmentShader = material.fragmentShader;\r\n\r\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\r\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\r\n\r\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\r\n\r\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\r\n\r\n\t\t\tmaterialShaders.add( vertexShaderStage );\r\n\t\t\tvertexShaderStage.usedTimes ++;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\r\n\r\n\t\t\tmaterialShaders.add( fragmentShaderStage );\r\n\t\t\tfragmentShaderStage.usedTimes ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremove( material ) {\r\n\r\n\t\tconst materialShaders = this.materialCache.get( material );\r\n\r\n\t\tfor ( const shaderStage of materialShaders ) {\r\n\r\n\t\t\tshaderStage.usedTimes --;\r\n\r\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\r\n\r\n\t\t}\r\n\r\n\t\tthis.materialCache.delete( material );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetVertexShaderID( material ) {\r\n\r\n\t\treturn this._getShaderStage( material.vertexShader ).id;\r\n\r\n\t}\r\n\r\n\tgetFragmentShaderID( material ) {\r\n\r\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shaderCache.clear();\r\n\t\tthis.materialCache.clear();\r\n\r\n\t}\r\n\r\n\t_getShaderCacheForMaterial( material ) {\r\n\r\n\t\tconst cache = this.materialCache;\r\n\t\tlet set = cache.get( material );\r\n\r\n\t\tif ( set === undefined ) {\r\n\r\n\t\t\tset = new Set();\r\n\t\t\tcache.set( material, set );\r\n\r\n\t\t}\r\n\r\n\t\treturn set;\r\n\r\n\t}\r\n\r\n\t_getShaderStage( code ) {\r\n\r\n\t\tconst cache = this.shaderCache;\r\n\t\tlet stage = cache.get( code );\r\n\r\n\t\tif ( stage === undefined ) {\r\n\r\n\t\t\tstage = new WebGLShaderStage( code );\r\n\t\t\tcache.set( code, stage );\r\n\r\n\t\t}\r\n\r\n\t\treturn stage;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLShaderStage {\r\n\r\n\tconstructor( code ) {\r\n\r\n\t\tthis.id = _id$1 ++;\r\n\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\r\n\r\n\tconst _programLayers = new Layers();\r\n\tconst _customShaders = new WebGLShaderCache();\r\n\tconst _activeChannels = new Set();\r\n\tconst programs = [];\r\n\r\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\r\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\r\n\r\n\tlet precision = capabilities.precision;\r\n\r\n\tconst shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tMeshToonMaterial: 'toon',\r\n\t\tMeshStandardMaterial: 'physical',\r\n\t\tMeshPhysicalMaterial: 'physical',\r\n\t\tMeshMatcapMaterial: 'matcap',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points',\r\n\t\tShadowMaterial: 'shadow',\r\n\t\tSpriteMaterial: 'sprite'\r\n\t};\r\n\r\n\tfunction getChannel( value ) {\r\n\r\n\t\t_activeChannels.add( value );\r\n\r\n\t\tif ( value === 0 ) return 'uv';\r\n\r\n\t\treturn `uv${ value }`;\r\n\r\n\t}\r\n\r\n\tfunction getParameters( material, lights, shadows, scene, object ) {\r\n\r\n\t\tconst fog = scene.fog;\r\n\t\tconst geometry = object.geometry;\r\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\r\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\r\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\r\n\r\n\t\tconst shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\tlet morphTextureStride = 0;\r\n\r\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\r\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\r\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\r\n\r\n\t\t//\r\n\r\n\t\tlet vertexShader, fragmentShader;\r\n\t\tlet customVertexShaderID, customFragmentShaderID;\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tconst shader = ShaderLib[ shaderID ];\r\n\r\n\t\t\tvertexShader = shader.vertexShader;\r\n\t\t\tfragmentShader = shader.fragmentShader;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvertexShader = material.vertexShader;\r\n\t\t\tfragmentShader = material.fragmentShader;\r\n\r\n\t\t\t_customShaders.update( material );\r\n\r\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\r\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\r\n\r\n\t\t}\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\r\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\r\n\r\n\t\tconst HAS_MAP = !! material.map;\r\n\t\tconst HAS_MATCAP = !! material.matcap;\r\n\t\tconst HAS_ENVMAP = !! envMap;\r\n\t\tconst HAS_AOMAP = !! material.aoMap;\r\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\r\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\r\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\r\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\r\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\r\n\r\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\r\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\r\n\r\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\r\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\r\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\r\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\r\n\t\tconst HAS_SHEEN = material.sheen > 0;\r\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\r\n\r\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\r\n\r\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\r\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\r\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\r\n\r\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\r\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\r\n\r\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\r\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\r\n\r\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\r\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\r\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\r\n\r\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\r\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\r\n\r\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\r\n\r\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\r\n\r\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\r\n\r\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\r\n\r\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\r\n\r\n\t\tlet toneMapping = NoToneMapping;\r\n\r\n\t\tif ( material.toneMapped ) {\r\n\r\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\t\t\ttoneMapping = renderer.toneMapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\t\t\tshaderType: material.type,\r\n\t\t\tshaderName: material.name,\r\n\r\n\t\t\tvertexShader: vertexShader,\r\n\t\t\tfragmentShader: fragmentShader,\r\n\t\t\tdefines: material.defines,\r\n\r\n\t\t\tcustomVertexShaderID: customVertexShaderID,\r\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\r\n\r\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\r\n\t\t\tglslVersion: material.glslVersion,\r\n\r\n\t\t\tprecision: precision,\r\n\r\n\t\t\tbatching: IS_BATCHEDMESH,\r\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\r\n\t\t\tinstancing: IS_INSTANCEDMESH,\r\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\r\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\r\n\r\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\r\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\r\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\r\n\r\n\t\t\tmap: HAS_MAP,\r\n\t\t\tmatcap: HAS_MATCAP,\r\n\t\t\tenvMap: HAS_ENVMAP,\r\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\r\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\r\n\t\t\taoMap: HAS_AOMAP,\r\n\t\t\tlightMap: HAS_LIGHTMAP,\r\n\t\t\tbumpMap: HAS_BUMPMAP,\r\n\t\t\tnormalMap: HAS_NORMALMAP,\r\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\r\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\r\n\r\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\r\n\r\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\r\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\r\n\r\n\t\t\tanisotropy: HAS_ANISOTROPY,\r\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\r\n\r\n\t\t\tclearcoat: HAS_CLEARCOAT,\r\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\r\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\r\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\r\n\r\n\t\t\tdispersion: HAS_DISPERSION,\r\n\r\n\t\t\tiridescence: HAS_IRIDESCENCE,\r\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\r\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\r\n\r\n\t\t\tsheen: HAS_SHEEN,\r\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\r\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\r\n\r\n\t\t\tspecularMap: HAS_SPECULARMAP,\r\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\r\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\r\n\r\n\t\t\ttransmission: HAS_TRANSMISSION,\r\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\r\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\r\n\r\n\t\t\tgradientMap: HAS_GRADIENTMAP,\r\n\r\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\r\n\r\n\t\t\talphaMap: HAS_ALPHAMAP,\r\n\t\t\talphaTest: HAS_ALPHATEST,\r\n\t\t\talphaHash: HAS_ALPHAHASH,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\t//\r\n\r\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\r\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\r\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\r\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\r\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\r\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\r\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\r\n\r\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\r\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\r\n\r\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\r\n\r\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\r\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\r\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\r\n\r\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\r\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\r\n\r\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\r\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\r\n\r\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\r\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\r\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\r\n\r\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\r\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\r\n\r\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\r\n\t\t\tvertexColors: material.vertexColors,\r\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\r\n\r\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\r\n\r\n\t\t\tfog: !! fog,\r\n\t\t\tuseFog: material.fog === true,\r\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\r\n\r\n\t\t\tflatShading: material.flatShading === true,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: object.isSkinnedMesh === true,\r\n\r\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\r\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\r\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\r\n\t\t\tmorphTargetsCount: morphTargetsCount,\r\n\t\t\tmorphTextureStride: morphTextureStride,\r\n\r\n\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\tnumPointLights: lights.point.length,\r\n\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\r\n\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\r\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\r\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\r\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\r\n\r\n\t\t\tnumLightProbes: lights.numLightProbes,\r\n\r\n\t\t\tnumClippingPlanes: clipping.numPlanes,\r\n\t\t\tnumClipIntersection: clipping.numIntersection,\r\n\r\n\t\t\tdithering: material.dithering,\r\n\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\ttoneMapping: toneMapping,\r\n\r\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\r\n\r\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\tflipSided: material.side === BackSide,\r\n\r\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\r\n\t\t\tdepthPacking: material.depthPacking || 0,\r\n\r\n\t\t\tindex0AttributeName: material.index0AttributeName,\r\n\r\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\r\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\r\n\r\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\r\n\r\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\r\n\r\n\t\t};\r\n\r\n\t\t// the usage of getChannel() determines the active texture channels for this shader\r\n\r\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\r\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\r\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\r\n\r\n\t\t_activeChannels.clear();\r\n\r\n\t\treturn parameters;\r\n\r\n\t}\r\n\r\n\tfunction getProgramCacheKey( parameters ) {\r\n\r\n\t\tconst array = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray.push( parameters.customVertexShaderID );\r\n\t\t\tarray.push( parameters.customFragmentShaderID );\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.defines !== undefined ) {\r\n\r\n\t\t\tfor ( const name in parameters.defines ) {\r\n\r\n\t\t\t\tarray.push( name );\r\n\t\t\t\tarray.push( parameters.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.isRawShaderMaterial === false ) {\r\n\r\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\r\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\r\n\t\t\tarray.push( renderer.outputColorSpace );\r\n\r\n\t\t}\r\n\r\n\t\tarray.push( parameters.customProgramCacheKey );\r\n\r\n\t\treturn array.join();\r\n\r\n\t}\r\n\r\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\r\n\r\n\t\tarray.push( parameters.precision );\r\n\t\tarray.push( parameters.outputColorSpace );\r\n\t\tarray.push( parameters.envMapMode );\r\n\t\tarray.push( parameters.envMapCubeUVHeight );\r\n\t\tarray.push( parameters.mapUv );\r\n\t\tarray.push( parameters.alphaMapUv );\r\n\t\tarray.push( parameters.lightMapUv );\r\n\t\tarray.push( parameters.aoMapUv );\r\n\t\tarray.push( parameters.bumpMapUv );\r\n\t\tarray.push( parameters.normalMapUv );\r\n\t\tarray.push( parameters.displacementMapUv );\r\n\t\tarray.push( parameters.emissiveMapUv );\r\n\t\tarray.push( parameters.metalnessMapUv );\r\n\t\tarray.push( parameters.roughnessMapUv );\r\n\t\tarray.push( parameters.anisotropyMapUv );\r\n\t\tarray.push( parameters.clearcoatMapUv );\r\n\t\tarray.push( parameters.clearcoatNormalMapUv );\r\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\r\n\t\tarray.push( parameters.iridescenceMapUv );\r\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\r\n\t\tarray.push( parameters.sheenColorMapUv );\r\n\t\tarray.push( parameters.sheenRoughnessMapUv );\r\n\t\tarray.push( parameters.specularMapUv );\r\n\t\tarray.push( parameters.specularColorMapUv );\r\n\t\tarray.push( parameters.specularIntensityMapUv );\r\n\t\tarray.push( parameters.transmissionMapUv );\r\n\t\tarray.push( parameters.thicknessMapUv );\r\n\t\tarray.push( parameters.combine );\r\n\t\tarray.push( parameters.fogExp2 );\r\n\t\tarray.push( parameters.sizeAttenuation );\r\n\t\tarray.push( parameters.morphTargetsCount );\r\n\t\tarray.push( parameters.morphAttributeCount );\r\n\t\tarray.push( parameters.numDirLights );\r\n\t\tarray.push( parameters.numPointLights );\r\n\t\tarray.push( parameters.numSpotLights );\r\n\t\tarray.push( parameters.numSpotLightMaps );\r\n\t\tarray.push( parameters.numHemiLights );\r\n\t\tarray.push( parameters.numRectAreaLights );\r\n\t\tarray.push( parameters.numDirLightShadows );\r\n\t\tarray.push( parameters.numPointLightShadows );\r\n\t\tarray.push( parameters.numSpotLightShadows );\r\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\r\n\t\tarray.push( parameters.numLightProbes );\r\n\t\tarray.push( parameters.shadowMapType );\r\n\t\tarray.push( parameters.toneMapping );\r\n\t\tarray.push( parameters.numClippingPlanes );\r\n\t\tarray.push( parameters.numClipIntersection );\r\n\t\tarray.push( parameters.depthPacking );\r\n\r\n\t}\r\n\r\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\r\n\r\n\t\t_programLayers.disableAll();\r\n\r\n\t\tif ( parameters.supportsVertexTextures )\r\n\t\t\t_programLayers.enable( 0 );\r\n\t\tif ( parameters.instancing )\r\n\t\t\t_programLayers.enable( 1 );\r\n\t\tif ( parameters.instancingColor )\r\n\t\t\t_programLayers.enable( 2 );\r\n\t\tif ( parameters.instancingMorph )\r\n\t\t\t_programLayers.enable( 3 );\r\n\t\tif ( parameters.matcap )\r\n\t\t\t_programLayers.enable( 4 );\r\n\t\tif ( parameters.envMap )\r\n\t\t\t_programLayers.enable( 5 );\r\n\t\tif ( parameters.normalMapObjectSpace )\r\n\t\t\t_programLayers.enable( 6 );\r\n\t\tif ( parameters.normalMapTangentSpace )\r\n\t\t\t_programLayers.enable( 7 );\r\n\t\tif ( parameters.clearcoat )\r\n\t\t\t_programLayers.enable( 8 );\r\n\t\tif ( parameters.iridescence )\r\n\t\t\t_programLayers.enable( 9 );\r\n\t\tif ( parameters.alphaTest )\r\n\t\t\t_programLayers.enable( 10 );\r\n\t\tif ( parameters.vertexColors )\r\n\t\t\t_programLayers.enable( 11 );\r\n\t\tif ( parameters.vertexAlphas )\r\n\t\t\t_programLayers.enable( 12 );\r\n\t\tif ( parameters.vertexUv1s )\r\n\t\t\t_programLayers.enable( 13 );\r\n\t\tif ( parameters.vertexUv2s )\r\n\t\t\t_programLayers.enable( 14 );\r\n\t\tif ( parameters.vertexUv3s )\r\n\t\t\t_programLayers.enable( 15 );\r\n\t\tif ( parameters.vertexTangents )\r\n\t\t\t_programLayers.enable( 16 );\r\n\t\tif ( parameters.anisotropy )\r\n\t\t\t_programLayers.enable( 17 );\r\n\t\tif ( parameters.alphaHash )\r\n\t\t\t_programLayers.enable( 18 );\r\n\t\tif ( parameters.batching )\r\n\t\t\t_programLayers.enable( 19 );\r\n\t\tif ( parameters.dispersion )\r\n\t\t\t_programLayers.enable( 20 );\r\n\t\tif ( parameters.batchingColor )\r\n\t\t\t_programLayers.enable( 21 );\r\n\r\n\t\tarray.push( _programLayers.mask );\r\n\t\t_programLayers.disableAll();\r\n\r\n\t\tif ( parameters.fog )\r\n\t\t\t_programLayers.enable( 0 );\r\n\t\tif ( parameters.useFog )\r\n\t\t\t_programLayers.enable( 1 );\r\n\t\tif ( parameters.flatShading )\r\n\t\t\t_programLayers.enable( 2 );\r\n\t\tif ( parameters.logarithmicDepthBuffer )\r\n\t\t\t_programLayers.enable( 3 );\r\n\t\tif ( parameters.skinning )\r\n\t\t\t_programLayers.enable( 4 );\r\n\t\tif ( parameters.morphTargets )\r\n\t\t\t_programLayers.enable( 5 );\r\n\t\tif ( parameters.morphNormals )\r\n\t\t\t_programLayers.enable( 6 );\r\n\t\tif ( parameters.morphColors )\r\n\t\t\t_programLayers.enable( 7 );\r\n\t\tif ( parameters.premultipliedAlpha )\r\n\t\t\t_programLayers.enable( 8 );\r\n\t\tif ( parameters.shadowMapEnabled )\r\n\t\t\t_programLayers.enable( 9 );\r\n\t\tif ( parameters.doubleSided )\r\n\t\t\t_programLayers.enable( 10 );\r\n\t\tif ( parameters.flipSided )\r\n\t\t\t_programLayers.enable( 11 );\r\n\t\tif ( parameters.useDepthPacking )\r\n\t\t\t_programLayers.enable( 12 );\r\n\t\tif ( parameters.dithering )\r\n\t\t\t_programLayers.enable( 13 );\r\n\t\tif ( parameters.transmission )\r\n\t\t\t_programLayers.enable( 14 );\r\n\t\tif ( parameters.sheen )\r\n\t\t\t_programLayers.enable( 15 );\r\n\t\tif ( parameters.opaque )\r\n\t\t\t_programLayers.enable( 16 );\r\n\t\tif ( parameters.pointsUvs )\r\n\t\t\t_programLayers.enable( 17 );\r\n\t\tif ( parameters.decodeVideoTexture )\r\n\t\t\t_programLayers.enable( 18 );\r\n\t\tif ( parameters.alphaToCoverage )\r\n\t\t\t_programLayers.enable( 19 );\r\n\r\n\t\tarray.push( _programLayers.mask );\r\n\r\n\t}\r\n\r\n\tfunction getUniforms( material ) {\r\n\r\n\t\tconst shaderID = shaderIDs[ material.type ];\r\n\t\tlet uniforms;\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tconst shader = ShaderLib[ shaderID ];\r\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuniforms = material.uniforms;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction acquireProgram( parameters, cacheKey ) {\r\n\r\n\t\tlet program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tconst preexistingProgram = programs[ p ];\r\n\r\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\r\n\r\n\t\t\t\tprogram = preexistingProgram;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction releaseProgram( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tconst i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction releaseShaderCache( material ) {\r\n\r\n\t\t_customShaders.remove( material );\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\t_customShaders.dispose();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetParameters: getParameters,\r\n\t\tgetProgramCacheKey: getProgramCacheKey,\r\n\t\tgetUniforms: getUniforms,\r\n\t\tacquireProgram: acquireProgram,\r\n\t\treleaseProgram: releaseProgram,\r\n\t\treleaseShaderCache: releaseShaderCache,\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tprograms: programs,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLProperties() {\r\n\r\n\tlet properties = new WeakMap();\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tlet map = properties.get( object );\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties.set( object, map );\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t}\r\n\r\n\tfunction remove( object ) {\r\n\r\n\t\tproperties.delete( object );\r\n\r\n\t}\r\n\r\n\tfunction update( object, key, value ) {\r\n\r\n\t\tproperties.get( object )[ key ] = value;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tproperties = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tremove: remove,\r\n\t\tupdate: update,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nfunction painterSortStable( a, b ) {\r\n\r\n\tif ( a.groupOrder !== b.groupOrder ) {\r\n\r\n\t\treturn a.groupOrder - b.groupOrder;\r\n\r\n\t} else if ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\treturn a.material.id - b.material.id;\r\n\r\n\t} else if ( a.z !== b.z ) {\r\n\r\n\t\treturn a.z - b.z;\r\n\r\n\t} else {\r\n\r\n\t\treturn a.id - b.id;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction reversePainterSortStable( a, b ) {\r\n\r\n\tif ( a.groupOrder !== b.groupOrder ) {\r\n\r\n\t\treturn a.groupOrder - b.groupOrder;\r\n\r\n\t} else if ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t} else if ( a.z !== b.z ) {\r\n\r\n\t\treturn b.z - a.z;\r\n\r\n\t} else {\r\n\r\n\t\treturn a.id - b.id;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction WebGLRenderList() {\r\n\r\n\tconst renderItems = [];\r\n\tlet renderItemsIndex = 0;\r\n\r\n\tconst opaque = [];\r\n\tconst transmissive = [];\r\n\tconst transparent = [];\r\n\r\n\tfunction init() {\r\n\r\n\t\trenderItemsIndex = 0;\r\n\r\n\t\topaque.length = 0;\r\n\t\ttransmissive.length = 0;\r\n\t\ttransparent.length = 0;\r\n\r\n\t}\r\n\r\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\r\n\r\n\t\tif ( renderItem === undefined ) {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tgroupOrder: groupOrder,\r\n\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\tz: z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.groupOrder = groupOrder;\r\n\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\trenderItem.z = z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t}\r\n\r\n\t\trenderItemsIndex ++;\r\n\r\n\t\treturn renderItem;\r\n\r\n\t}\r\n\r\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n\r\n\t\tif ( material.transmission > 0.0 ) {\r\n\r\n\t\t\ttransmissive.push( renderItem );\r\n\r\n\t\t} else if ( material.transparent === true ) {\r\n\r\n\t\t\ttransparent.push( renderItem );\r\n\r\n\t\t} else {\r\n\r\n\t\t\topaque.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n\r\n\t\tif ( material.transmission > 0.0 ) {\r\n\r\n\t\t\ttransmissive.unshift( renderItem );\r\n\r\n\t\t} else if ( material.transparent === true ) {\r\n\r\n\t\t\ttransparent.unshift( renderItem );\r\n\r\n\t\t} else {\r\n\r\n\t\t\topaque.unshift( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\r\n\r\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\r\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\r\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\r\n\r\n\t}\r\n\r\n\tfunction finish() {\r\n\r\n\t\t// Clear references from inactive renderItems in the list\r\n\r\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst renderItem = renderItems[ i ];\r\n\r\n\t\t\tif ( renderItem.id === null ) break;\r\n\r\n\t\t\trenderItem.id = null;\r\n\t\t\trenderItem.object = null;\r\n\t\t\trenderItem.geometry = null;\r\n\t\t\trenderItem.material = null;\r\n\t\t\trenderItem.group = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\topaque: opaque,\r\n\t\ttransmissive: transmissive,\r\n\t\ttransparent: transparent,\r\n\r\n\t\tinit: init,\r\n\t\tpush: push,\r\n\t\tunshift: unshift,\r\n\t\tfinish: finish,\r\n\r\n\t\tsort: sort\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLRenderLists() {\r\n\r\n\tlet lists = new WeakMap();\r\n\r\n\tfunction get( scene, renderCallDepth ) {\r\n\r\n\t\tconst listArray = lists.get( scene );\r\n\t\tlet list;\r\n\r\n\t\tif ( listArray === undefined ) {\r\n\r\n\t\t\tlist = new WebGLRenderList();\r\n\t\t\tlists.set( scene, [ list ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( renderCallDepth >= listArray.length ) {\r\n\r\n\t\t\t\tlist = new WebGLRenderList();\r\n\t\t\t\tlistArray.push( list );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlist = listArray[ renderCallDepth ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tlists = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nfunction UniformsCache() {\r\n\r\n\tconst lights = {};\r\n\r\n\treturn {\r\n\r\n\t\tget: function ( light ) {\r\n\r\n\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet uniforms;\r\n\r\n\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\tcolor: new Color()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\treturn uniforms;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction ShadowUniformsCache() {\r\n\r\n\tconst lights = {};\r\n\r\n\treturn {\r\n\r\n\t\tget: function ( light ) {\r\n\r\n\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet uniforms;\r\n\r\n\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\treturn uniforms;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\n\r\nlet nextVersion = 0;\r\n\r\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\r\n\r\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\r\n\r\n}\r\n\r\nfunction WebGLLights( extensions ) {\r\n\r\n\tconst cache = new UniformsCache();\r\n\r\n\tconst shadowCache = ShadowUniformsCache();\r\n\r\n\tconst state = {\r\n\r\n\t\tversion: 0,\r\n\r\n\t\thash: {\r\n\t\t\tdirectionalLength: - 1,\r\n\t\t\tpointLength: - 1,\r\n\t\t\tspotLength: - 1,\r\n\t\t\trectAreaLength: - 1,\r\n\t\t\themiLength: - 1,\r\n\r\n\t\t\tnumDirectionalShadows: - 1,\r\n\t\t\tnumPointShadows: - 1,\r\n\t\t\tnumSpotShadows: - 1,\r\n\t\t\tnumSpotMaps: - 1,\r\n\r\n\t\t\tnumLightProbes: - 1\r\n\t\t},\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tprobe: [],\r\n\t\tdirectional: [],\r\n\t\tdirectionalShadow: [],\r\n\t\tdirectionalShadowMap: [],\r\n\t\tdirectionalShadowMatrix: [],\r\n\t\tspot: [],\r\n\t\tspotLightMap: [],\r\n\t\tspotShadow: [],\r\n\t\tspotShadowMap: [],\r\n\t\tspotLightMatrix: [],\r\n\t\trectArea: [],\r\n\t\trectAreaLTC1: null,\r\n\t\trectAreaLTC2: null,\r\n\t\tpoint: [],\r\n\t\tpointShadow: [],\r\n\t\tpointShadowMap: [],\r\n\t\tpointShadowMatrix: [],\r\n\t\themi: [],\r\n\t\tnumSpotLightShadowsWithMaps: 0,\r\n\t\tnumLightProbes: 0\r\n\r\n\t};\r\n\r\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\r\n\r\n\tconst vector3 = new Vector3();\r\n\tconst matrix4 = new Matrix4();\r\n\tconst matrix42 = new Matrix4();\r\n\r\n\tfunction setup( lights ) {\r\n\r\n\t\tlet r = 0, g = 0, b = 0;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\r\n\r\n\t\tlet directionalLength = 0;\r\n\t\tlet pointLength = 0;\r\n\t\tlet spotLength = 0;\r\n\t\tlet rectAreaLength = 0;\r\n\t\tlet hemiLength = 0;\r\n\r\n\t\tlet numDirectionalShadows = 0;\r\n\t\tlet numPointShadows = 0;\r\n\t\tlet numSpotShadows = 0;\r\n\t\tlet numSpotMaps = 0;\r\n\t\tlet numSpotShadowsWithMaps = 0;\r\n\r\n\t\tlet numLightProbes = 0;\r\n\r\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\r\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\r\n\r\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst light = lights[ i ];\r\n\r\n\t\t\tconst color = light.color;\r\n\t\t\tconst intensity = light.intensity;\r\n\t\t\tconst distance = light.distance;\r\n\r\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\tif ( light.isAmbientLight ) {\r\n\r\n\t\t\t\tr += color.r * intensity;\r\n\t\t\t\tg += color.g * intensity;\r\n\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t} else if ( light.isLightProbe ) {\r\n\r\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\r\n\r\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnumLightProbes ++;\r\n\r\n\t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\r\n\r\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\r\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\r\n\t\t\t\t\tnumDirectionalShadows ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\r\n\r\n\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\r\n\r\n\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\tif ( light.map ) {\r\n\r\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\r\n\t\t\t\t\tnumSpotMaps ++;\r\n\r\n\t\t\t\t\t// make sure the lightMatrix is up to date\r\n\t\t\t\t\t// TODO : do it if required only\r\n\t\t\t\t\tshadow.updateMatrices( light );\r\n\r\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\r\n\r\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\r\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\r\n\r\n\t\t\t\t\tnumSpotShadows ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspotLength ++;\r\n\r\n\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\r\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\r\n\r\n\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\r\n\r\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\r\n\r\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\r\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\r\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\r\n\r\n\t\t\t\t\tnumPointShadows ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.point[ pointLength ] = uniforms;\r\n\r\n\t\t\t\tpointLength ++;\r\n\r\n\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\r\n\r\n\t\t\t\themiLength ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( rectAreaLength > 0 ) {\r\n\r\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\r\n\r\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\r\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.ambient[ 0 ] = r;\r\n\t\tstate.ambient[ 1 ] = g;\r\n\t\tstate.ambient[ 2 ] = b;\r\n\r\n\t\tconst hash = state.hash;\r\n\r\n\t\tif ( hash.directionalLength !== directionalLength ||\r\n\t\t\thash.pointLength !== pointLength ||\r\n\t\t\thash.spotLength !== spotLength ||\r\n\t\t\thash.rectAreaLength !== rectAreaLength ||\r\n\t\t\thash.hemiLength !== hemiLength ||\r\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\r\n\t\t\thash.numPointShadows !== numPointShadows ||\r\n\t\t\thash.numSpotShadows !== numSpotShadows ||\r\n\t\t\thash.numSpotMaps !== numSpotMaps ||\r\n\t\t\thash.numLightProbes !== numLightProbes ) {\r\n\r\n\t\t\tstate.directional.length = directionalLength;\r\n\t\t\tstate.spot.length = spotLength;\r\n\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\tstate.point.length = pointLength;\r\n\t\t\tstate.hemi.length = hemiLength;\r\n\r\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\r\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\r\n\t\t\tstate.pointShadow.length = numPointShadows;\r\n\t\t\tstate.pointShadowMap.length = numPointShadows;\r\n\t\t\tstate.spotShadow.length = numSpotShadows;\r\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\r\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\r\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\r\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\r\n\t\t\tstate.spotLightMap.length = numSpotMaps;\r\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\r\n\t\t\tstate.numLightProbes = numLightProbes;\r\n\r\n\t\t\thash.directionalLength = directionalLength;\r\n\t\t\thash.pointLength = pointLength;\r\n\t\t\thash.spotLength = spotLength;\r\n\t\t\thash.rectAreaLength = rectAreaLength;\r\n\t\t\thash.hemiLength = hemiLength;\r\n\r\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\r\n\t\t\thash.numPointShadows = numPointShadows;\r\n\t\t\thash.numSpotShadows = numSpotShadows;\r\n\t\t\thash.numSpotMaps = numSpotMaps;\r\n\r\n\t\t\thash.numLightProbes = numLightProbes;\r\n\r\n\t\t\tstate.version = nextVersion ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupView( lights, camera ) {\r\n\r\n\t\tlet directionalLength = 0;\r\n\t\tlet pointLength = 0;\r\n\t\tlet spotLength = 0;\r\n\t\tlet rectAreaLength = 0;\r\n\t\tlet hemiLength = 0;\r\n\r\n\t\tconst viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst light = lights[ i ];\r\n\r\n\t\t\tif ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotLength ++;\r\n\r\n\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\r\n\t\t\t\tmatrix42.identity();\r\n\t\t\t\tmatrix4.copy( light.matrixWorld );\r\n\t\t\t\tmatrix4.premultiply( viewMatrix );\r\n\t\t\t\tmatrix42.extractRotation( matrix4 );\r\n\r\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\r\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\r\n\r\n\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.point[ pointLength ];\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointLength ++;\r\n\r\n\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiLength ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tsetup: setup,\r\n\t\tsetupView: setupView,\r\n\t\tstate: state\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLRenderState( extensions ) {\r\n\r\n\tconst lights = new WebGLLights( extensions );\r\n\r\n\tconst lightsArray = [];\r\n\tconst shadowsArray = [];\r\n\r\n\tfunction init( camera ) {\r\n\r\n\t\tstate.camera = camera;\r\n\r\n\t\tlightsArray.length = 0;\r\n\t\tshadowsArray.length = 0;\r\n\r\n\t}\r\n\r\n\tfunction pushLight( light ) {\r\n\r\n\t\tlightsArray.push( light );\r\n\r\n\t}\r\n\r\n\tfunction pushShadow( shadowLight ) {\r\n\r\n\t\tshadowsArray.push( shadowLight );\r\n\r\n\t}\r\n\r\n\tfunction setupLights() {\r\n\r\n\t\tlights.setup( lightsArray );\r\n\r\n\t}\r\n\r\n\tfunction setupLightsView( camera ) {\r\n\r\n\t\tlights.setupView( lightsArray, camera );\r\n\r\n\t}\r\n\r\n\tconst state = {\r\n\t\tlightsArray: lightsArray,\r\n\t\tshadowsArray: shadowsArray,\r\n\r\n\t\tcamera: null,\r\n\r\n\t\tlights: lights,\r\n\r\n\t\ttransmissionRenderTarget: {}\r\n\t};\r\n\r\n\treturn {\r\n\t\tinit: init,\r\n\t\tstate: state,\r\n\t\tsetupLights: setupLights,\r\n\t\tsetupLightsView: setupLightsView,\r\n\r\n\t\tpushLight: pushLight,\r\n\t\tpushShadow: pushShadow\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLRenderStates( extensions ) {\r\n\r\n\tlet renderStates = new WeakMap();\r\n\r\n\tfunction get( scene, renderCallDepth = 0 ) {\r\n\r\n\t\tconst renderStateArray = renderStates.get( scene );\r\n\t\tlet renderState;\r\n\r\n\t\tif ( renderStateArray === undefined ) {\r\n\r\n\t\t\trenderState = new WebGLRenderState( extensions );\r\n\t\t\trenderStates.set( scene, [ renderState ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\r\n\r\n\t\t\t\trenderState = new WebGLRenderState( extensions );\r\n\t\t\t\trenderStateArray.push( renderState );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn renderState;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\trenderStates = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nclass MeshDepthMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshDepthMaterial = true;\r\n\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\r\n\t\tthis.depthPacking = BasicDepthPacking;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.depthPacking = source.depthPacking;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshDistanceMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshDistanceMaterial = true;\r\n\r\n\t\tthis.type = 'MeshDistanceMaterial';\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\r\n\r\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\r\n\r\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\r\n\r\n\tlet _frustum = new Frustum();\r\n\r\n\tconst _shadowMapSize = new Vector2(),\r\n\t\t_viewportSize = new Vector2(),\r\n\r\n\t\t_viewport = new Vector4(),\r\n\r\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\r\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\r\n\r\n\t\t_materialCache = {},\r\n\r\n\t\t_maxTextureSize = capabilities.maxTextureSize;\r\n\r\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\r\n\r\n\tconst shadowMaterialVertical = new ShaderMaterial( {\r\n\t\tdefines: {\r\n\t\t\tVSM_SAMPLES: 8\r\n\t\t},\r\n\t\tuniforms: {\r\n\t\t\tshadow_pass: { value: null },\r\n\t\t\tresolution: { value: new Vector2() },\r\n\t\t\tradius: { value: 4.0 }\r\n\t\t},\r\n\r\n\t\tvertexShader: vertex,\r\n\t\tfragmentShader: fragment\r\n\r\n\t} );\r\n\r\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\r\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\r\n\r\n\tconst fullScreenTri = new BufferGeometry();\r\n\tfullScreenTri.setAttribute(\r\n\t\t'position',\r\n\t\tnew BufferAttribute(\r\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\r\n\t\t\t3\r\n\t\t)\r\n\t);\r\n\r\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\r\n\r\n\tconst scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = PCFShadowMap;\r\n\tlet _previousType = this.type;\r\n\r\n\tthis.render = function ( lights, scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\tif ( lights.length === 0 ) return;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\r\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\r\n\r\n\t\tconst _state = renderer.state;\r\n\r\n\t\t// Set GL state for depth map.\r\n\t\t_state.setBlending( NoBlending );\r\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\r\n\t\t_state.buffers.depth.setTest( true );\r\n\t\t_state.setScissorTest( false );\r\n\r\n\t\t// check for shadow map type changes\r\n\r\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\r\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst light = lights[ i ];\r\n\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\r\n\r\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\r\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\r\n\r\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\r\n\r\n\t\t\t_viewportSize.copy( shadow.mapSize );\r\n\r\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\r\n\r\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\r\n\r\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\r\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\r\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\r\n\r\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\r\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\r\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\r\n\r\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\r\n\r\n\t\t\t\tif ( shadow.map !== null ) {\r\n\r\n\t\t\t\t\tshadow.map.dispose();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\r\n\r\n\t\t\t\tshadow.camera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget( shadow.map );\r\n\t\t\trenderer.clear();\r\n\r\n\t\t\tconst viewportCount = shadow.getViewportCount();\r\n\r\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\r\n\r\n\t\t\t\tconst viewport = shadow.getViewport( vp );\r\n\r\n\t\t\t\t_viewport.set(\r\n\t\t\t\t\t_viewportSize.x * viewport.x,\r\n\t\t\t\t\t_viewportSize.y * viewport.y,\r\n\t\t\t\t\t_viewportSize.x * viewport.z,\r\n\t\t\t\t\t_viewportSize.y * viewport.w\r\n\t\t\t\t);\r\n\r\n\t\t\t\t_state.viewport( _viewport );\r\n\r\n\t\t\t\tshadow.updateMatrices( light, vp );\r\n\r\n\t\t\t\t_frustum = shadow.getFrustum();\r\n\r\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// do blur pass for VSM\r\n\r\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\r\n\r\n\t\t\t\tVSMPass( shadow, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadow.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\t_previousType = this.type;\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\r\n\r\n\t};\r\n\r\n\tfunction VSMPass( shadow, camera ) {\r\n\r\n\t\tconst geometry = objects.update( fullScreenMesh );\r\n\r\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\r\n\r\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\r\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\r\n\r\n\t\t\tshadowMaterialVertical.needsUpdate = true;\r\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( shadow.mapPass === null ) {\r\n\r\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\r\n\r\n\t\t}\r\n\r\n\t\t// vertical pass\r\n\r\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\r\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\r\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\r\n\t\trenderer.setRenderTarget( shadow.mapPass );\r\n\t\trenderer.clear();\r\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\r\n\r\n\t\t// horizontal pass\r\n\r\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\r\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\r\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\r\n\t\trenderer.setRenderTarget( shadow.map );\r\n\t\trenderer.clear();\r\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\r\n\r\n\t}\r\n\r\n\tfunction getDepthMaterial( object, material, light, type ) {\r\n\r\n\t\tlet result = null;\r\n\r\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\r\n\r\n\t\tif ( customMaterial !== undefined ) {\r\n\r\n\t\t\tresult = customMaterial;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\r\n\r\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\r\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\r\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\r\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\r\n\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\r\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tresult.visible = material.visible;\r\n\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\tif ( type === VSMShadowMap ) {\r\n\r\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\r\n\r\n\t\t}\r\n\r\n\t\tresult.alphaMap = material.alphaMap;\r\n\t\tresult.alphaTest = material.alphaTest;\r\n\t\tresult.map = material.map;\r\n\r\n\t\tresult.clipShadows = material.clipShadows;\r\n\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\tresult.clipIntersection = material.clipIntersection;\r\n\r\n\t\tresult.displacementMap = material.displacementMap;\r\n\t\tresult.displacementScale = material.displacementScale;\r\n\t\tresult.displacementBias = material.displacementBias;\r\n\r\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\r\n\r\n\t\t\tconst materialProperties = renderer.properties.get( result );\r\n\t\t\tmaterialProperties.light = light;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tconst visible = object.layers.test( camera.layers );\r\n\r\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n\r\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\r\n\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\tconst geometry = objects.update( object );\r\n\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tconst group = groups[ k ];\r\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\r\n\r\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\r\n\r\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\r\n\r\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\r\n\r\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tconst material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\r\n\r\n\t\tfor ( const id in _materialCache ) {\r\n\r\n\t\t\tconst cache = _materialCache[ id ];\r\n\r\n\t\t\tconst uuid = event.target.uuid;\r\n\r\n\t\t\tif ( uuid in cache ) {\r\n\r\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\r\n\t\t\t\tshadowMaterial.dispose();\r\n\t\t\t\tdelete cache[ uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction WebGLState( gl ) {\r\n\r\n\tfunction ColorBuffer() {\r\n\r\n\t\tlet locked = false;\r\n\r\n\t\tconst color = new Vector4();\r\n\t\tlet currentColorMask = null;\r\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\r\n\r\n\t\treturn {\r\n\r\n\t\t\tsetMask: function ( colorMask ) {\r\n\r\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\tlocked = lock;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha === true ) {\r\n\r\n\t\t\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolor.set( r, g, b, a );\r\n\r\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\r\n\t\t\t\tlocked = false;\r\n\r\n\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction DepthBuffer() {\r\n\r\n\t\tlet locked = false;\r\n\r\n\t\tlet currentDepthMask = null;\r\n\t\tlet currentDepthFunc = null;\r\n\t\tlet currentDepthClear = null;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tsetTest: function ( depthTest ) {\r\n\r\n\t\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t\tenable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetMask: function ( depthMask ) {\r\n\r\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\t\t\tgl.depthMask( depthMask );\r\n\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetFunc: function ( depthFunc ) {\r\n\r\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\t\tcase NeverDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase AlwaysDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase LessDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase LessEqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase GreaterDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase NotEqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\tlocked = lock;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetClear: function ( depth ) {\r\n\r\n\t\t\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\t\t\tgl.clearDepth( depth );\r\n\t\t\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\r\n\t\t\t\tlocked = false;\r\n\r\n\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\tcurrentDepthClear = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction StencilBuffer() {\r\n\r\n\t\tlet locked = false;\r\n\r\n\t\tlet currentStencilMask = null;\r\n\t\tlet currentStencilFunc = null;\r\n\t\tlet currentStencilRef = null;\r\n\t\tlet currentStencilFuncMask = null;\r\n\t\tlet currentStencilFail = null;\r\n\t\tlet currentStencilZFail = null;\r\n\t\tlet currentStencilZPass = null;\r\n\t\tlet currentStencilClear = null;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tsetTest: function ( stencilTest ) {\r\n\r\n\t\t\t\tif ( ! locked ) {\r\n\r\n\t\t\t\t\tif ( stencilTest ) {\r\n\r\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetMask: function ( stencilMask ) {\r\n\r\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t     currentStencilRef !== stencilRef ||\r\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\r\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\tlocked = lock;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetClear: function ( stencil ) {\r\n\r\n\t\t\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\t\t\tgl.clearStencil( stencil );\r\n\t\t\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\r\n\t\t\t\tlocked = false;\r\n\r\n\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\tcurrentStencilClear = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tconst colorBuffer = new ColorBuffer();\r\n\tconst depthBuffer = new DepthBuffer();\r\n\tconst stencilBuffer = new StencilBuffer();\r\n\r\n\tconst uboBindings = new WeakMap();\r\n\tconst uboProgramMap = new WeakMap();\r\n\r\n\tlet enabledCapabilities = {};\r\n\r\n\tlet currentBoundFramebuffers = {};\r\n\tlet currentDrawbuffers = new WeakMap();\r\n\tlet defaultDrawbuffers = [];\r\n\r\n\tlet currentProgram = null;\r\n\r\n\tlet currentBlendingEnabled = false;\r\n\tlet currentBlending = null;\r\n\tlet currentBlendEquation = null;\r\n\tlet currentBlendSrc = null;\r\n\tlet currentBlendDst = null;\r\n\tlet currentBlendEquationAlpha = null;\r\n\tlet currentBlendSrcAlpha = null;\r\n\tlet currentBlendDstAlpha = null;\r\n\tlet currentBlendColor = new Color( 0, 0, 0 );\r\n\tlet currentBlendAlpha = 0;\r\n\tlet currentPremultipledAlpha = false;\r\n\r\n\tlet currentFlipSided = null;\r\n\tlet currentCullFace = null;\r\n\r\n\tlet currentLineWidth = null;\r\n\r\n\tlet currentPolygonOffsetFactor = null;\r\n\tlet currentPolygonOffsetUnits = null;\r\n\r\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\r\n\r\n\tlet lineWidthAvailable = false;\r\n\tlet version = 0;\r\n\tconst glVersion = gl.getParameter( gl.VERSION );\r\n\r\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\r\n\r\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\r\n\t\tlineWidthAvailable = ( version >= 1.0 );\r\n\r\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\r\n\r\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\r\n\t\tlineWidthAvailable = ( version >= 2.0 );\r\n\r\n\t}\r\n\r\n\tlet currentTextureSlot = null;\r\n\tlet currentBoundTextures = {};\r\n\r\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\r\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\r\n\r\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\r\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\r\n\r\n\tfunction createTexture( type, target, count, dimensions ) {\r\n\r\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n\t\tconst texture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( type, texture );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\r\n\r\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tconst emptyTextures = {};\r\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\r\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\r\n\r\n\t// init\r\n\r\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\r\n\tdepthBuffer.setClear( 1 );\r\n\tstencilBuffer.setClear( 0 );\r\n\r\n\tenable( gl.DEPTH_TEST );\r\n\tdepthBuffer.setFunc( LessEqualDepth );\r\n\r\n\tsetFlipSided( false );\r\n\tsetCullFace( CullFaceBack );\r\n\tenable( gl.CULL_FACE );\r\n\r\n\tsetBlending( NoBlending );\r\n\r\n\t//\r\n\r\n\tfunction enable( id ) {\r\n\r\n\t\tif ( enabledCapabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tenabledCapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction disable( id ) {\r\n\r\n\t\tif ( enabledCapabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tenabledCapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction bindFramebuffer( target, framebuffer ) {\r\n\r\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\r\n\r\n\t\t\tgl.bindFramebuffer( target, framebuffer );\r\n\r\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\r\n\r\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\r\n\r\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\r\n\r\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\r\n\r\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction drawBuffers( renderTarget, framebuffer ) {\r\n\r\n\t\tlet drawBuffers = defaultDrawbuffers;\r\n\r\n\t\tlet needsUpdate = false;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\r\n\r\n\t\t\tif ( drawBuffers === undefined ) {\r\n\r\n\t\t\t\tdrawBuffers = [];\r\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst textures = renderTarget.textures;\r\n\r\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdrawBuffers.length = textures.length;\r\n\r\n\t\t\t\tneedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\r\n\r\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\r\n\r\n\t\t\t\tneedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\tgl.drawBuffers( drawBuffers );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction useProgram( program ) {\r\n\r\n\t\tif ( currentProgram !== program ) {\r\n\r\n\t\t\tgl.useProgram( program );\r\n\r\n\t\t\tcurrentProgram = program;\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tconst equationToGL = {\r\n\t\t[ AddEquation ]: gl.FUNC_ADD,\r\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\r\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\r\n\t};\r\n\r\n\tequationToGL[ MinEquation ] = gl.MIN;\r\n\tequationToGL[ MaxEquation ] = gl.MAX;\r\n\r\n\tconst factorToGL = {\r\n\t\t[ ZeroFactor ]: gl.ZERO,\r\n\t\t[ OneFactor ]: gl.ONE,\r\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\r\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\r\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\r\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\r\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\r\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\r\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\r\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\r\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\r\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\r\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\r\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\r\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\r\n\t};\r\n\r\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\r\n\r\n\t\tif ( blending === NoBlending ) {\r\n\r\n\t\t\tif ( currentBlendingEnabled === true ) {\r\n\r\n\t\t\t\tdisable( gl.BLEND );\r\n\t\t\t\tcurrentBlendingEnabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( currentBlendingEnabled === false ) {\r\n\r\n\t\t\tenable( gl.BLEND );\r\n\t\t\tcurrentBlendingEnabled = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending !== CustomBlending ) {\r\n\r\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\r\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\r\n\t\t\t\tcurrentBlendAlpha = 0;\r\n\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// custom blending\r\n\r\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\r\n\r\n\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\r\n\r\n\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\r\n\r\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\r\n\r\n\t\t\tcurrentBlendColor.copy( blendColor );\r\n\t\t\tcurrentBlendAlpha = blendAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tcurrentBlending = blending;\r\n\t\tcurrentPremultipledAlpha = false;\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material, frontFaceCW ) {\r\n\r\n\t\tmaterial.side === DoubleSide\r\n\t\t\t? disable( gl.CULL_FACE )\r\n\t\t\t: enable( gl.CULL_FACE );\r\n\r\n\t\tlet flipSided = ( material.side === BackSide );\r\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\r\n\r\n\t\tsetFlipSided( flipSided );\r\n\r\n\t\t( material.blending === NormalBlending && material.transparent === false )\r\n\t\t\t? setBlending( NoBlending )\r\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\r\n\r\n\t\tdepthBuffer.setFunc( material.depthFunc );\r\n\t\tdepthBuffer.setTest( material.depthTest );\r\n\t\tdepthBuffer.setMask( material.depthWrite );\r\n\t\tcolorBuffer.setMask( material.colorWrite );\r\n\r\n\t\tconst stencilWrite = material.stencilWrite;\r\n\t\tstencilBuffer.setTest( stencilWrite );\r\n\t\tif ( stencilWrite ) {\r\n\r\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\r\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\r\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\r\n\r\n\t\t}\r\n\r\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\tmaterial.alphaToCoverage === true\r\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\r\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction setFlipSided( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCullFace( cullFace ) {\r\n\r\n\t\tif ( cullFace !== CullFaceNone ) {\r\n\r\n\t\t\tenable( gl.CULL_FACE );\r\n\r\n\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\tif ( cullFace === CullFaceBack ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdisable( gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t\tcurrentCullFace = cullFace;\r\n\r\n\t}\r\n\r\n\tfunction setLineWidth( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setScissorTest( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tenable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdisable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// texture\r\n\r\n\tfunction activeTexture( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) {\r\n\r\n\t\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\twebglSlot = currentTextureSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unbindTexture() {\r\n\r\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\r\n\r\n\t\t\tgl.bindTexture( boundTexture.type, null );\r\n\r\n\t\t\tboundTexture.type = undefined;\r\n\t\t\tboundTexture.texture = undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texSubImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texSubImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexSubImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexSubImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texStorage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texStorage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texStorage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texStorage3D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage3D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction scissor( scissor ) {\r\n\r\n\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction viewport( viewport ) {\r\n\r\n\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateUBOMapping( uniformsGroup, program ) {\r\n\r\n\t\tlet mapping = uboProgramMap.get( program );\r\n\r\n\t\tif ( mapping === undefined ) {\r\n\r\n\t\t\tmapping = new WeakMap();\r\n\r\n\t\t\tuboProgramMap.set( program, mapping );\r\n\r\n\t\t}\r\n\r\n\t\tlet blockIndex = mapping.get( uniformsGroup );\r\n\r\n\t\tif ( blockIndex === undefined ) {\r\n\r\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\r\n\r\n\t\t\tmapping.set( uniformsGroup, blockIndex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\r\n\r\n\t\tconst mapping = uboProgramMap.get( program );\r\n\t\tconst blockIndex = mapping.get( uniformsGroup );\r\n\r\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\r\n\r\n\t\t\t// bind shader specific block index to global block point\r\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\r\n\r\n\t\t\tuboBindings.set( program, blockIndex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction reset() {\r\n\r\n\t\t// reset state\r\n\r\n\t\tgl.disable( gl.BLEND );\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.disable( gl.DEPTH_TEST );\r\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\tgl.disable( gl.SCISSOR_TEST );\r\n\t\tgl.disable( gl.STENCIL_TEST );\r\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\r\n\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\r\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\r\n\t\tgl.blendColor( 0, 0, 0, 0 );\r\n\r\n\t\tgl.colorMask( true, true, true, true );\r\n\t\tgl.clearColor( 0, 0, 0, 0 );\r\n\r\n\t\tgl.depthMask( true );\r\n\t\tgl.depthFunc( gl.LESS );\r\n\t\tgl.clearDepth( 1 );\r\n\r\n\t\tgl.stencilMask( 0xffffffff );\r\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\r\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\tgl.polygonOffset( 0, 0 );\r\n\r\n\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\r\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\r\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\r\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\r\n\r\n\t\tgl.useProgram( null );\r\n\r\n\t\tgl.lineWidth( 1 );\r\n\r\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\r\n\t\t// reset internals\r\n\r\n\t\tenabledCapabilities = {};\r\n\r\n\t\tcurrentTextureSlot = null;\r\n\t\tcurrentBoundTextures = {};\r\n\r\n\t\tcurrentBoundFramebuffers = {};\r\n\t\tcurrentDrawbuffers = new WeakMap();\r\n\t\tdefaultDrawbuffers = [];\r\n\r\n\t\tcurrentProgram = null;\r\n\r\n\t\tcurrentBlendingEnabled = false;\r\n\t\tcurrentBlending = null;\r\n\t\tcurrentBlendEquation = null;\r\n\t\tcurrentBlendSrc = null;\r\n\t\tcurrentBlendDst = null;\r\n\t\tcurrentBlendEquationAlpha = null;\r\n\t\tcurrentBlendSrcAlpha = null;\r\n\t\tcurrentBlendDstAlpha = null;\r\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\r\n\t\tcurrentBlendAlpha = 0;\r\n\t\tcurrentPremultipledAlpha = false;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\t\tcurrentCullFace = null;\r\n\r\n\t\tcurrentLineWidth = null;\r\n\r\n\t\tcurrentPolygonOffsetFactor = null;\r\n\t\tcurrentPolygonOffsetUnits = null;\r\n\r\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\r\n\t\tcolorBuffer.reset();\r\n\t\tdepthBuffer.reset();\r\n\t\tstencilBuffer.reset();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tbuffers: {\r\n\t\t\tcolor: colorBuffer,\r\n\t\t\tdepth: depthBuffer,\r\n\t\t\tstencil: stencilBuffer\r\n\t\t},\r\n\r\n\t\tenable: enable,\r\n\t\tdisable: disable,\r\n\r\n\t\tbindFramebuffer: bindFramebuffer,\r\n\t\tdrawBuffers: drawBuffers,\r\n\r\n\t\tuseProgram: useProgram,\r\n\r\n\t\tsetBlending: setBlending,\r\n\t\tsetMaterial: setMaterial,\r\n\r\n\t\tsetFlipSided: setFlipSided,\r\n\t\tsetCullFace: setCullFace,\r\n\r\n\t\tsetLineWidth: setLineWidth,\r\n\t\tsetPolygonOffset: setPolygonOffset,\r\n\r\n\t\tsetScissorTest: setScissorTest,\r\n\r\n\t\tactiveTexture: activeTexture,\r\n\t\tbindTexture: bindTexture,\r\n\t\tunbindTexture: unbindTexture,\r\n\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\tcompressedTexImage3D: compressedTexImage3D,\r\n\t\ttexImage2D: texImage2D,\r\n\t\ttexImage3D: texImage3D,\r\n\r\n\t\tupdateUBOMapping: updateUBOMapping,\r\n\t\tuniformBlockBinding: uniformBlockBinding,\r\n\r\n\t\ttexStorage2D: texStorage2D,\r\n\t\ttexStorage3D: texStorage3D,\r\n\t\ttexSubImage2D: texSubImage2D,\r\n\t\ttexSubImage3D: texSubImage3D,\r\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\r\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\r\n\r\n\t\tscissor: scissor,\r\n\t\tviewport: viewport,\r\n\r\n\t\treset: reset\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\r\n\r\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\r\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\r\n\r\n\tconst _imageDimensions = new Vector2();\r\n\tconst _videoTextures = new WeakMap();\r\n\tlet _canvas;\r\n\r\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\r\n\r\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\r\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\r\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\r\n\r\n\tlet useOffscreenCanvas = false;\r\n\r\n\ttry {\r\n\r\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\r\n\t\t\t// eslint-disable-next-line compat/compat\r\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\r\n\r\n\t} catch ( err ) {\r\n\r\n\t\t// Ignore any errors\r\n\r\n\t}\r\n\r\n\tfunction createCanvas( width, height ) {\r\n\r\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\r\n\r\n\t\treturn useOffscreenCanvas ?\r\n\t\t\t// eslint-disable-next-line compat/compat\r\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\r\n\r\n\t}\r\n\r\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\r\n\r\n\t\tlet scale = 1;\r\n\r\n\t\tconst dimensions = getDimensions( image );\r\n\r\n\t\t// handle case if texture exceeds max size\r\n\r\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\r\n\r\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\r\n\r\n\t\t}\r\n\r\n\t\t// only perform resize if necessary\r\n\r\n\t\tif ( scale < 1 ) {\r\n\r\n\t\t\t// only perform resize for certain image types\r\n\r\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\r\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\r\n\r\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\r\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\r\n\r\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\r\n\r\n\t\t\t\t// cube textures can't reuse the same canvas\r\n\r\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\r\n\r\n\t\t\t\tcanvas.width = width;\r\n\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\tconst context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\r\n\r\n\t\t\t\treturn canvas;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( 'data' in image ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn image;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction textureNeedsGenerateMipmaps( texture ) {\r\n\r\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\r\n\t}\r\n\r\n\tfunction generateMipmap( target ) {\r\n\r\n\t\t_gl.generateMipmap( target );\r\n\r\n\t}\r\n\r\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\r\n\r\n\t\tif ( internalFormatName !== null ) {\r\n\r\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\r\n\r\n\t\t}\r\n\r\n\t\tlet internalFormat = glFormat;\r\n\r\n\t\tif ( glFormat === _gl.RED ) {\r\n\r\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\r\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\r\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\r\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\r\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RG ) {\r\n\r\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\r\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\r\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\r\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\r\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RGB ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RGBA ) {\r\n\r\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\r\n\r\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\r\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\r\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\r\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\r\n\r\n\t\t\textensions.get( 'EXT_color_buffer_float' );\r\n\r\n\t\t}\r\n\r\n\t\treturn internalFormat;\r\n\r\n\t}\r\n\r\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\r\n\r\n\t\tlet glInternalFormat;\r\n\t\tif ( useStencil ) {\r\n\r\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\r\n\r\n\t\t\t} else if ( depthType === FloatType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\r\n\r\n\t\t\t} else if ( depthType === UnsignedShortType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\r\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\r\n\r\n\t\t\t} else if ( depthType === FloatType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n\t\t\t} else if ( depthType === UnsignedShortType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn glInternalFormat;\r\n\r\n\t}\r\n\r\n\tfunction getMipLevels( texture, image ) {\r\n\r\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\r\n\r\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\r\n\r\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t// user-defined mipmaps\r\n\r\n\t\t\treturn texture.mipmaps.length;\r\n\r\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\r\n\r\n\t\t\treturn image.mipmaps.length;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// texture without mipmaps (only base level)\r\n\r\n\t\t\treturn 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tconst texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\tif ( texture.isVideoTexture ) {\r\n\r\n\t\t\t_videoTextures.delete( texture );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tconst renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t// check if it's necessary to remove the WebGLTexture object\r\n\r\n\t\tconst source = texture.source;\r\n\t\tconst webglTextures = _sources.get( source );\r\n\r\n\t\tif ( webglTextures ) {\r\n\r\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\r\n\t\t\twebglTexture.usedTimes --;\r\n\r\n\t\t\t// the WebGLTexture object is not used anymore, remove it\r\n\r\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\r\n\r\n\t\t\t\tdeleteTexture( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\r\n\r\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\r\n\r\n\t\t\t\t_sources.delete( source );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tproperties.remove( texture );\r\n\r\n\t}\r\n\r\n\tfunction deleteTexture( texture ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\tconst source = texture.source;\r\n\t\tconst webglTextures = _sources.get( source );\r\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\r\n\r\n\t\tinfo.memory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\r\n\r\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\r\n\r\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tconst textures = renderTarget.textures;\r\n\r\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\r\n\r\n\t\t\tif ( attachmentProperties.__webglTexture ) {\r\n\r\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\r\n\r\n\t\t\t\tinfo.memory.textures --;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove( textures[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.remove( renderTarget );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tlet textureUnits = 0;\r\n\r\n\tfunction resetTextureUnits() {\r\n\r\n\t\ttextureUnits = 0;\r\n\r\n\t}\r\n\r\n\tfunction allocateTextureUnit() {\r\n\r\n\t\tconst textureUnit = textureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\ttextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction getTextureCacheKey( texture ) {\r\n\r\n\t\tconst array = [];\r\n\r\n\t\tarray.push( texture.wrapS );\r\n\t\tarray.push( texture.wrapT );\r\n\t\tarray.push( texture.wrapR || 0 );\r\n\t\tarray.push( texture.magFilter );\r\n\t\tarray.push( texture.minFilter );\r\n\t\tarray.push( texture.anisotropy );\r\n\t\tarray.push( texture.internalFormat );\r\n\t\tarray.push( texture.format );\r\n\t\tarray.push( texture.type );\r\n\t\tarray.push( texture.generateMipmaps );\r\n\t\tarray.push( texture.premultiplyAlpha );\r\n\t\tarray.push( texture.flipY );\r\n\t\tarray.push( texture.unpackAlignment );\r\n\t\tarray.push( texture.colorSpace );\r\n\r\n\t\treturn array.join();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\r\n\r\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tconst image = texture.image;\r\n\r\n\t\t\tif ( image === null ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\r\n\r\n\t\t\t} else if ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tfunction setTexture2DArray( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tfunction setTexture3D( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tfunction setTextureCube( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tconst wrappingToGL = {\r\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\r\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\r\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\r\n\t};\r\n\r\n\tconst filterToGL = {\r\n\t\t[ NearestFilter ]: _gl.NEAREST,\r\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\r\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\r\n\r\n\t\t[ LinearFilter ]: _gl.LINEAR,\r\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\r\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\r\n\t};\r\n\r\n\tconst compareToGL = {\r\n\t\t[ NeverCompare ]: _gl.NEVER,\r\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\r\n\t\t[ LessCompare ]: _gl.LESS,\r\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\r\n\t\t[ EqualCompare ]: _gl.EQUAL,\r\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\r\n\t\t[ GreaterCompare ]: _gl.GREATER,\r\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\r\n\t};\r\n\r\n\tfunction setTextureParameters( textureType, texture ) {\r\n\r\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\r\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\r\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\r\n\r\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\r\n\r\n\t\tif ( texture.compareFunction ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\r\n\r\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\r\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\r\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initTexture( textureProperties, texture ) {\r\n\r\n\t\tlet forceUpload = false;\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t}\r\n\r\n\t\t// create Source <-> WebGLTextures mapping if necessary\r\n\r\n\t\tconst source = texture.source;\r\n\t\tlet webglTextures = _sources.get( source );\r\n\r\n\t\tif ( webglTextures === undefined ) {\r\n\r\n\t\t\twebglTextures = {};\r\n\t\t\t_sources.set( source, webglTextures );\r\n\r\n\t\t}\r\n\r\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\r\n\r\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\r\n\r\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\r\n\r\n\t\t\t// if not, create a new instance of WebGLTexture\r\n\r\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\r\n\r\n\t\t\t\t// create new entry\r\n\r\n\t\t\t\twebglTextures[ textureCacheKey ] = {\r\n\t\t\t\t\ttexture: _gl.createTexture(),\r\n\t\t\t\t\tusedTimes: 0\r\n\t\t\t\t};\r\n\r\n\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\r\n\t\t\t\t// even if the image contents are identical\r\n\r\n\t\t\t\tforceUpload = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\r\n\r\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\r\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\r\n\r\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\r\n\r\n\t\t\tif ( webglTexture !== undefined ) {\r\n\r\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\r\n\r\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\r\n\r\n\t\t\t\t\tdeleteTexture( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// store references to cache key and WebGLTexture object\r\n\r\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\r\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\r\n\r\n\t\t}\r\n\r\n\t\treturn forceUpload;\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tlet textureType = _gl.TEXTURE_2D;\r\n\r\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\r\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\r\n\r\n\t\tconst forceUpload = initTexture( textureProperties, texture );\r\n\t\tconst source = texture.source;\r\n\r\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t\tconst sourceProperties = properties.get( source );\r\n\r\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\r\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\r\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\r\n\r\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\r\n\t\t\timage = verifyColorSpace( texture, image );\r\n\r\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\r\n\t\t\tconst glType = utils.convert( texture.type );\r\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\r\n\r\n\t\t\tsetTextureParameters( textureType, texture );\r\n\r\n\t\t\tlet mipmap;\r\n\t\t\tconst mipmaps = texture.mipmaps;\r\n\r\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\r\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\r\n\t\t\tconst dataReady = source.dataReady;\r\n\t\t\tconst levels = getMipLevels( texture, image );\r\n\r\n\t\t\tif ( texture.isDepthTexture ) {\r\n\r\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isDataTexture ) {\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isCompressedTexture ) {\r\n\r\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerSize = mipmap.width * mipmap.height;\r\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, mipmap.data.slice( layerSize * layerIndex, layerSize * ( layerIndex + 1 ) ), 0, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\r\n\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isDataArrayTexture ) {\r\n\r\n\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\r\n\r\n\t\t\t\t\t\t\t// When type is GL_UNSIGNED_BYTE, each of these bytes is\r\n\t\t\t\t\t\t\t// interpreted as one color component, depending on format. When\r\n\t\t\t\t\t\t\t// type is one of GL_UNSIGNED_SHORT_5_6_5,\r\n\t\t\t\t\t\t\t// GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_5_5_5_1, each\r\n\t\t\t\t\t\t\t// unsigned value is interpreted as containing all the components\r\n\t\t\t\t\t\t\t// for a single pixel, with the color components arranged\r\n\t\t\t\t\t\t\t// according to format.\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// See https://registry.khronos.org/OpenGL-Refpages/es1.1/xhtml/glTexImage2D.xml\r\n\t\t\t\t\t\t\tlet texelSize;\r\n\t\t\t\t\t\t\tswitch ( glType ) {\r\n\r\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_BYTE:\r\n\t\t\t\t\t\t\t\t\tswitch ( glFormat ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase _gl.ALPHA:\r\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase _gl.LUMINANCE:\r\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase _gl.LUMINANCE_ALPHA:\r\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 2;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase _gl.RGB:\r\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 3;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase _gl.RGBA:\r\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 4;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error( `Unknown texel size for format ${glFormat}.` );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_4_4_4_4:\r\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_5_5_5_1:\r\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_5_6_5:\r\n\t\t\t\t\t\t\t\t\ttexelSize = 1;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tthrow new Error( `Unknown texel size for type ${glType}.` );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst layerSize = image.width * image.height * texelSize;\r\n\r\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, image.data.slice( layerSize * layerIndex, layerSize * ( layerIndex + 1 ) ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isData3DTexture ) {\r\n\r\n\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isFramebufferTexture ) {\r\n\r\n\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tlet width = image.width, height = image.height;\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\t\t\twidth >>= 1;\r\n\t\t\t\t\t\t\theight >>= 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\r\n\r\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( textureType );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsourceProperties.__version = source.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t}\r\n\r\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( texture.image.length !== 6 ) return;\r\n\r\n\t\tconst forceUpload = initTexture( textureProperties, texture );\r\n\t\tconst source = texture.source;\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t\tconst sourceProperties = properties.get( source );\r\n\r\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\r\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\r\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\r\n\r\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\r\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\r\n\r\n\t\t\tconst cubeImage = [];\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst image = cubeImage[ 0 ],\r\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\r\n\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\r\n\r\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\r\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\r\n\t\t\tconst dataReady = source.dataReady;\r\n\t\t\tlet levels = getMipLevels( texture, image );\r\n\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\r\n\r\n\t\t\tlet mipmaps;\r\n\r\n\t\t\tif ( isCompressed ) {\r\n\r\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmipmaps = texture.mipmaps;\r\n\r\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\r\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\r\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\r\n\r\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\r\n\r\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\r\n\r\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\r\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsourceProperties.__version = source.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\t// Setup storage for target texture and bind it to correct framebuffer\r\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\r\n\r\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\t\tconst glType = utils.convert( texture.type );\r\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\r\n\r\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\r\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\r\n\r\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\r\n\r\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\r\n\r\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\r\n\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t// retrieve the depth attachment types\r\n\t\t\tconst depthTexture = renderTarget.depthTexture;\r\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\r\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\r\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\r\n\t\t\t// set up the attachment\r\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\r\n\t\t\tif ( isUseMultisampledRTT ) {\r\n\r\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t} else if ( isMultisample ) {\r\n\r\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst textures = renderTarget.textures;\r\n\r\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\tconst texture = textures[ i ];\r\n\r\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\t\t\t\tconst glType = utils.convert( texture.type );\r\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\r\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\r\n\r\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\r\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\r\n\r\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\r\n\r\n\t\t}\r\n\r\n\t\t// upload an empty depth texture with framebuffer size\r\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\r\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\r\n\r\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n\r\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Setup GL resources for a non-texture depth buffer\r\n\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\r\n\r\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\r\n\r\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\r\n\r\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// rebind framebuffer with external textures\r\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( colorTexture !== undefined ) {\r\n\r\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( depthTexture !== undefined ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Set up GL resources for the render target\r\n\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\tconst texture = renderTarget.texture;\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tconst textures = renderTarget.textures;\r\n\r\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\r\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\r\n\r\n\t\tif ( ! isMultipleRenderTargets ) {\r\n\r\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\r\n\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\t// Setup framebuffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\r\n\r\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\r\n\r\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\r\n\r\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst texture = textures[ i ];\r\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\t\t\t\t\tconst glType = utils.convert( texture.type );\r\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\r\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t\t\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Setup color buffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t} else if ( isMultipleRenderTargets ) {\r\n\r\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attachment = textures[ i ];\r\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\r\n\r\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\r\n\r\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( glTextureType, texture );\r\n\r\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( glTextureType );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t}\r\n\r\n\t\t// Setup depth and stencil buffers\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\tconst textures = renderTarget.textures;\r\n\r\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst texture = textures[ i ];\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\r\n\r\n\t\t\t\tstate.bindTexture( target, webglTexture );\r\n\t\t\t\tgenerateMipmap( target );\r\n\t\t\t\tstate.unbindTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst invalidationArrayRead = [];\r\n\tconst invalidationArrayDraw = [];\r\n\r\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\r\n\r\n\t\tif ( renderTarget.samples > 0 ) {\r\n\r\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\tconst textures = renderTarget.textures;\r\n\t\t\t\tconst width = renderTarget.width;\r\n\t\t\t\tconst height = renderTarget.height;\r\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\r\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\r\n\r\n\t\t\t\t// If MRT we need to remove FBO attachments\r\n\t\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\r\n\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\r\n\r\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\r\n\r\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\r\n\r\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\r\n\r\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\r\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\r\n\r\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\r\n\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\r\n\r\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\r\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\r\n\r\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\r\n\r\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\r\n\t\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\r\n\r\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\r\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getRenderTargetSamples( renderTarget ) {\r\n\r\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\r\n\r\n\t}\r\n\r\n\tfunction useMultisampledRTT( renderTarget ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\r\n\r\n\t}\r\n\r\n\tfunction updateVideoTexture( texture ) {\r\n\r\n\t\tconst frame = info.render.frame;\r\n\r\n\t\t// Check the last frame we updated the VideoTexture\r\n\r\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\r\n\r\n\t\t\t_videoTextures.set( texture, frame );\r\n\t\t\ttexture.update();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction verifyColorSpace( texture, image ) {\r\n\r\n\t\tconst colorSpace = texture.colorSpace;\r\n\t\tconst format = texture.format;\r\n\t\tconst type = texture.type;\r\n\r\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\r\n\r\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\r\n\r\n\t\t\t// sRGB\r\n\r\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\r\n\r\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\r\n\r\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction getDimensions( image ) {\r\n\r\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\r\n\r\n\t\t\t// if intrinsic data are not available, fallback to width/height\r\n\r\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\r\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\r\n\r\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\r\n\r\n\t\t\t_imageDimensions.width = image.displayWidth;\r\n\t\t\t_imageDimensions.height = image.displayHeight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_imageDimensions.width = image.width;\r\n\t\t\t_imageDimensions.height = image.height;\r\n\r\n\t\t}\r\n\r\n\t\treturn _imageDimensions;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.allocateTextureUnit = allocateTextureUnit;\r\n\tthis.resetTextureUnits = resetTextureUnits;\r\n\r\n\tthis.setTexture2D = setTexture2D;\r\n\tthis.setTexture2DArray = setTexture2DArray;\r\n\tthis.setTexture3D = setTexture3D;\r\n\tthis.setTextureCube = setTextureCube;\r\n\tthis.rebindTextures = rebindTextures;\r\n\tthis.setupRenderTarget = setupRenderTarget;\r\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\r\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\r\n\tthis.useMultisampledRTT = useMultisampledRTT;\r\n\r\n}\r\n\r\nfunction WebGLUtils( gl, extensions ) {\r\n\r\n\tfunction convert( p, colorSpace = NoColorSpace ) {\r\n\r\n\t\tlet extension;\r\n\r\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\r\n\r\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\r\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\r\n\r\n\t\tif ( p === ByteType ) return gl.BYTE;\r\n\t\tif ( p === ShortType ) return gl.SHORT;\r\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\r\n\t\tif ( p === IntType ) return gl.INT;\r\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\r\n\t\tif ( p === FloatType ) return gl.FLOAT;\r\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\r\n\r\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\r\n\t\tif ( p === RGBFormat ) return gl.RGB;\r\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\r\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\r\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\r\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\r\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\r\n\r\n\t\t// WebGL2 formats.\r\n\r\n\t\tif ( p === RedFormat ) return gl.RED;\r\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\r\n\t\tif ( p === RGFormat ) return gl.RG;\r\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\r\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\r\n\r\n\t\t// S3TC\r\n\r\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n\r\n\t\t\tif ( transfer === SRGBTransfer ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// PVRTC\r\n\r\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ETC\r\n\r\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\r\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ASTC\r\n\r\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// BPTC\r\n\r\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\r\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\r\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// RGTC\r\n\r\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\r\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\r\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\r\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\r\n\r\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\r\n\r\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\r\n\r\n\t}\r\n\r\n\treturn { convert: convert };\r\n\r\n}\r\n\r\nclass ArrayCamera extends PerspectiveCamera {\r\n\r\n\tconstructor( array = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isArrayCamera = true;\r\n\r\n\t\tthis.cameras = array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Group extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isGroup = true;\r\n\r\n\t\tthis.type = 'Group';\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _moveEvent = { type: 'move' };\r\n\r\nclass WebXRController {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis._targetRay = null;\r\n\t\tthis._grip = null;\r\n\t\tthis._hand = null;\r\n\r\n\t}\r\n\r\n\tgetHandSpace() {\r\n\r\n\t\tif ( this._hand === null ) {\r\n\r\n\t\t\tthis._hand = new Group();\r\n\t\t\tthis._hand.matrixAutoUpdate = false;\r\n\t\t\tthis._hand.visible = false;\r\n\r\n\t\t\tthis._hand.joints = {};\r\n\t\t\tthis._hand.inputState = { pinching: false };\r\n\r\n\t\t}\r\n\r\n\t\treturn this._hand;\r\n\r\n\t}\r\n\r\n\tgetTargetRaySpace() {\r\n\r\n\t\tif ( this._targetRay === null ) {\r\n\r\n\t\t\tthis._targetRay = new Group();\r\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\r\n\t\t\tthis._targetRay.visible = false;\r\n\t\t\tthis._targetRay.hasLinearVelocity = false;\r\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\r\n\t\t\tthis._targetRay.hasAngularVelocity = false;\r\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\treturn this._targetRay;\r\n\r\n\t}\r\n\r\n\tgetGripSpace() {\r\n\r\n\t\tif ( this._grip === null ) {\r\n\r\n\t\t\tthis._grip = new Group();\r\n\t\t\tthis._grip.matrixAutoUpdate = false;\r\n\t\t\tthis._grip.visible = false;\r\n\t\t\tthis._grip.hasLinearVelocity = false;\r\n\t\t\tthis._grip.linearVelocity = new Vector3();\r\n\t\t\tthis._grip.hasAngularVelocity = false;\r\n\t\t\tthis._grip.angularVelocity = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\treturn this._grip;\r\n\r\n\t}\r\n\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tif ( this._targetRay !== null ) {\r\n\r\n\t\t\tthis._targetRay.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._grip !== null ) {\r\n\r\n\t\t\tthis._grip.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._hand !== null ) {\r\n\r\n\t\t\tthis._hand.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconnect( inputSource ) {\r\n\r\n\t\tif ( inputSource && inputSource.hand ) {\r\n\r\n\t\t\tconst hand = this._hand;\r\n\r\n\t\t\tif ( hand ) {\r\n\r\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\r\n\r\n\t\t\t\t\t// Initialize hand with joints when connected\r\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdisconnect( inputSource ) {\r\n\r\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\r\n\r\n\t\tif ( this._targetRay !== null ) {\r\n\r\n\t\t\tthis._targetRay.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._grip !== null ) {\r\n\r\n\t\t\tthis._grip.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._hand !== null ) {\r\n\r\n\t\t\tthis._hand.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdate( inputSource, frame, referenceSpace ) {\r\n\r\n\t\tlet inputPose = null;\r\n\t\tlet gripPose = null;\r\n\t\tlet handPose = null;\r\n\r\n\t\tconst targetRay = this._targetRay;\r\n\t\tconst grip = this._grip;\r\n\t\tconst hand = this._hand;\r\n\r\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\r\n\r\n\t\t\tif ( hand && inputSource.hand ) {\r\n\r\n\t\t\t\thandPose = true;\r\n\r\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\r\n\r\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\r\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\r\n\r\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\r\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\r\n\r\n\t\t\t\t\tif ( jointPose !== null ) {\r\n\r\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\r\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\r\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tjoint.visible = jointPose !== null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Custom events\r\n\r\n\t\t\t\t// Check pinchz\r\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\r\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\r\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\r\n\r\n\t\t\t\tconst distanceToPinch = 0.02;\r\n\t\t\t\tconst threshold = 0.005;\r\n\r\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\r\n\r\n\t\t\t\t\thand.inputState.pinching = false;\r\n\t\t\t\t\tthis.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'pinchend',\r\n\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\r\n\r\n\t\t\t\t\thand.inputState.pinching = true;\r\n\t\t\t\t\tthis.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'pinchstart',\r\n\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\r\n\r\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\r\n\r\n\t\t\t\t\tif ( gripPose !== null ) {\r\n\r\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\r\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\r\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\r\n\r\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\r\n\r\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( targetRay !== null ) {\r\n\r\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\r\n\r\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\r\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\r\n\r\n\t\t\t\t\tinputPose = gripPose;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( inputPose !== null ) {\r\n\r\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\r\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\r\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\r\n\r\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\r\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\r\n\r\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\r\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tif ( targetRay !== null ) {\r\n\r\n\t\t\ttargetRay.visible = ( inputPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( grip !== null ) {\r\n\r\n\t\t\tgrip.visible = ( gripPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( hand !== null ) {\r\n\r\n\t\t\thand.visible = ( handPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// private method\r\n\r\n\t_getHandJoint( hand, inputjoint ) {\r\n\r\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\r\n\r\n\t\t\tconst joint = new Group();\r\n\t\t\tjoint.matrixAutoUpdate = false;\r\n\t\t\tjoint.visible = false;\r\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\r\n\r\n\t\t\thand.add( joint );\r\n\r\n\t\t}\r\n\r\n\t\treturn hand.joints[ inputjoint.jointName ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _occlusion_vertex = `\r\nvoid main() {\r\n\r\n\tgl_Position = vec4( position, 1.0 );\r\n\r\n}`;\r\n\r\nconst _occlusion_fragment = `\r\nuniform sampler2DArray depthColor;\r\nuniform float depthWidth;\r\nuniform float depthHeight;\r\n\r\nvoid main() {\r\n\r\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\r\n\r\n\tif ( coord.x >= 1.0 ) {\r\n\r\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\r\n\r\n\t} else {\r\n\r\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\r\n\r\n\t}\r\n\r\n}`;\r\n\r\nclass WebXRDepthSensing {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.texture = null;\r\n\t\tthis.mesh = null;\r\n\r\n\t\tthis.depthNear = 0;\r\n\t\tthis.depthFar = 0;\r\n\r\n\t}\r\n\r\n\tinit( renderer, depthData, renderState ) {\r\n\r\n\t\tif ( this.texture === null ) {\r\n\r\n\t\t\tconst texture = new Texture();\r\n\r\n\t\t\tconst texProps = renderer.properties.get( texture );\r\n\t\t\ttexProps.__webglTexture = depthData.texture;\r\n\r\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\r\n\r\n\t\t\t\tthis.depthNear = depthData.depthNear;\r\n\t\t\t\tthis.depthFar = depthData.depthFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.texture = texture;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMesh( cameraXR ) {\r\n\r\n\t\tif ( this.texture !== null ) {\r\n\r\n\t\t\tif ( this.mesh === null ) {\r\n\r\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\r\n\t\t\t\tconst material = new ShaderMaterial( {\r\n\t\t\t\t\tvertexShader: _occlusion_vertex,\r\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\r\n\t\t\t\t\tuniforms: {\r\n\t\t\t\t\t\tdepthColor: { value: this.texture },\r\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\r\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.mesh;\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.texture = null;\r\n\t\tthis.mesh = null;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebXRManager extends EventDispatcher {\r\n\r\n\tconstructor( renderer, gl ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tlet session = null;\r\n\r\n\t\tlet framebufferScaleFactor = 1.0;\r\n\r\n\t\tlet referenceSpace = null;\r\n\t\tlet referenceSpaceType = 'local-floor';\r\n\t\t// Set default foveation to maximum.\r\n\t\tlet foveation = 1.0;\r\n\t\tlet customReferenceSpace = null;\r\n\r\n\t\tlet pose = null;\r\n\t\tlet glBinding = null;\r\n\t\tlet glProjLayer = null;\r\n\t\tlet glBaseLayer = null;\r\n\t\tlet xrFrame = null;\r\n\r\n\t\tconst depthSensing = new WebXRDepthSensing();\r\n\t\tconst attributes = gl.getContextAttributes();\r\n\r\n\t\tlet initialRenderTarget = null;\r\n\t\tlet newRenderTarget = null;\r\n\r\n\t\tconst controllers = [];\r\n\t\tconst controllerInputSources = [];\r\n\r\n\t\tconst currentSize = new Vector2();\r\n\t\tlet currentPixelRatio = null;\r\n\r\n\t\t//\r\n\r\n\t\tconst cameraL = new PerspectiveCamera();\r\n\t\tcameraL.layers.enable( 1 );\r\n\t\tcameraL.viewport = new Vector4();\r\n\r\n\t\tconst cameraR = new PerspectiveCamera();\r\n\t\tcameraR.layers.enable( 2 );\r\n\t\tcameraR.viewport = new Vector4();\r\n\r\n\t\tconst cameras = [ cameraL, cameraR ];\r\n\r\n\t\tconst cameraXR = new ArrayCamera();\r\n\t\tcameraXR.layers.enable( 1 );\r\n\t\tcameraXR.layers.enable( 2 );\r\n\r\n\t\tlet _currentDepthNear = null;\r\n\t\tlet _currentDepthFar = null;\r\n\r\n\t\t//\r\n\r\n\t\tthis.cameraAutoUpdate = true;\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.isPresenting = false;\r\n\r\n\t\tthis.getController = function ( index ) {\r\n\r\n\t\t\tlet controller = controllers[ index ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\tcontrollers[ index ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller.getTargetRaySpace();\r\n\r\n\t\t};\r\n\r\n\t\tthis.getControllerGrip = function ( index ) {\r\n\r\n\t\t\tlet controller = controllers[ index ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\tcontrollers[ index ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller.getGripSpace();\r\n\r\n\t\t};\r\n\r\n\t\tthis.getHand = function ( index ) {\r\n\r\n\t\t\tlet controller = controllers[ index ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\tcontrollers[ index ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller.getHandSpace();\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tfunction onSessionEvent( event ) {\r\n\r\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\r\n\r\n\t\t\tif ( controllerIndex === - 1 ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst controller = controllers[ controllerIndex ];\r\n\r\n\t\t\tif ( controller !== undefined ) {\r\n\r\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\r\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onSessionEnd() {\r\n\r\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\r\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\r\n\r\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\r\n\r\n\t\t\t\tif ( inputSource === null ) continue;\r\n\r\n\t\t\t\tcontrollerInputSources[ i ] = null;\r\n\r\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentDepthNear = null;\r\n\t\t\t_currentDepthFar = null;\r\n\r\n\t\t\tdepthSensing.reset();\r\n\r\n\t\t\t// restore framebuffer/rendering state\r\n\r\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\r\n\r\n\t\t\tglBaseLayer = null;\r\n\t\t\tglProjLayer = null;\r\n\t\t\tglBinding = null;\r\n\t\t\tsession = null;\r\n\t\t\tnewRenderTarget = null;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t\tscope.isPresenting = false;\r\n\r\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\r\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\r\n\r\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\r\n\r\n\t\t\tframebufferScaleFactor = value;\r\n\r\n\t\t\tif ( scope.isPresenting === true ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.setReferenceSpaceType = function ( value ) {\r\n\r\n\t\t\treferenceSpaceType = value;\r\n\r\n\t\t\tif ( scope.isPresenting === true ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.getReferenceSpace = function () {\r\n\r\n\t\t\treturn customReferenceSpace || referenceSpace;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setReferenceSpace = function ( space ) {\r\n\r\n\t\t\tcustomReferenceSpace = space;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getBaseLayer = function () {\r\n\r\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getBinding = function () {\r\n\r\n\t\t\treturn glBinding;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getFrame = function () {\r\n\r\n\t\t\treturn xrFrame;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getSession = function () {\r\n\r\n\t\t\treturn session;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setSession = async function ( value ) {\r\n\r\n\t\t\tsession = value;\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\r\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\r\n\r\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\r\n\r\n\t\t\t\t\tawait gl.makeXRCompatible();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\r\n\t\t\t\trenderer.getSize( currentSize );\r\n\r\n\t\t\t\tif ( session.renderState.layers === undefined ) {\r\n\r\n\t\t\t\t\tconst layerInit = {\r\n\t\t\t\t\t\tantialias: attributes.antialias,\r\n\t\t\t\t\t\talpha: true,\r\n\t\t\t\t\t\tdepth: attributes.depth,\r\n\t\t\t\t\t\tstencil: attributes.stencil,\r\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\r\n\r\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\r\n\r\n\t\t\t\t\trenderer.setPixelRatio( 1 );\r\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\r\n\r\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\r\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\r\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tformat: RGBAFormat,\r\n\t\t\t\t\t\t\ttype: UnsignedByteType,\r\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\r\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlet depthFormat = null;\r\n\t\t\t\t\tlet depthType = null;\r\n\t\t\t\t\tlet glDepthFormat = null;\r\n\r\n\t\t\t\t\tif ( attributes.depth ) {\r\n\r\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\r\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst projectionlayerInit = {\r\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\r\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\r\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\r\n\r\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\r\n\r\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\r\n\r\n\t\t\t\t\trenderer.setPixelRatio( 1 );\r\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\r\n\r\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\r\n\t\t\t\t\t\tglProjLayer.textureWidth,\r\n\t\t\t\t\t\tglProjLayer.textureHeight,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tformat: RGBAFormat,\r\n\t\t\t\t\t\t\ttype: UnsignedByteType,\r\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\r\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\r\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\r\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\r\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\r\n\r\n\t\t\t\tthis.setFoveation( foveation );\r\n\r\n\t\t\t\tcustomReferenceSpace = null;\r\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\r\n\r\n\t\t\t\tanimation.setContext( session );\r\n\t\t\t\tanimation.start();\r\n\r\n\t\t\t\tscope.isPresenting = true;\r\n\r\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.getEnvironmentBlendMode = function () {\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\treturn session.environmentBlendMode;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction onInputSourcesChange( event ) {\r\n\r\n\t\t\t// Notify disconnected\r\n\r\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = event.removed[ i ];\r\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\r\n\r\n\t\t\t\tif ( index >= 0 ) {\r\n\r\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\r\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Notify connected\r\n\r\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = event.added[ i ];\r\n\r\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\r\n\r\n\t\t\t\tif ( controllerIndex === - 1 ) {\r\n\r\n\t\t\t\t\t// Assign input source a controller that currently has no input source\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\r\n\r\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\r\n\t\t\t\t\t\t\tcontrollerIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\r\n\r\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\r\n\t\t\t\t\t\t\tcontrollerIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\r\n\r\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst controller = controllers[ controllerIndex ];\r\n\r\n\t\t\t\tif ( controller ) {\r\n\r\n\t\t\t\t\tcontroller.connect( inputSource );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst cameraLPos = new Vector3();\r\n\t\tconst cameraRPos = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t\t * the cameras' projection and world matrices have already been set.\r\n\t\t * And that near and far planes are identical for both cameras.\r\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t\t */\r\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\r\n\r\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\r\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\r\n\r\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\r\n\r\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\r\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\r\n\r\n\t\t\t// VR systems will have identical far and near planes, and\r\n\t\t\t// most likely identical top and bottom frustum extents.\r\n\t\t\t// Use the left camera for these values.\r\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\r\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\r\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\r\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\r\n\r\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\r\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\r\n\t\t\tconst left = near * leftFov;\r\n\t\t\tconst right = near * rightFov;\r\n\r\n\t\t\t// Calculate the new camera's position offset from the\r\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\r\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\r\n\t\t\tconst xOffset = zOffset * - leftFov;\r\n\r\n\t\t\t// TODO: Better way to apply this offset?\r\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\tcamera.translateX( xOffset );\r\n\t\t\tcamera.translateZ( zOffset );\r\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\r\n\r\n\t\t\t// Find the union of the frustum values of the cameras and scale\r\n\t\t\t// the values so that the near plane's position does not change in world space,\r\n\t\t\t// although must now be relative to the new union camera.\r\n\t\t\tconst near2 = near + zOffset;\r\n\t\t\tconst far2 = far + zOffset;\r\n\t\t\tconst left2 = left - xOffset;\r\n\t\t\tconst right2 = right + ( ipd - xOffset );\r\n\t\t\tconst top2 = topFov * far / far2 * near2;\r\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\r\n\r\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\r\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateCamera( camera, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateCamera = function ( camera ) {\r\n\r\n\t\t\tif ( session === null ) return;\r\n\r\n\t\t\tif ( depthSensing.texture !== null ) {\r\n\r\n\t\t\t\tcamera.near = depthSensing.depthNear;\r\n\t\t\t\tcamera.far = depthSensing.depthFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\r\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\r\n\r\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\r\n\r\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\r\n\r\n\t\t\t\tsession.updateRenderState( {\r\n\t\t\t\t\tdepthNear: cameraXR.near,\r\n\t\t\t\t\tdepthFar: cameraXR.far\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t_currentDepthNear = cameraXR.near;\r\n\t\t\t\t_currentDepthFar = cameraXR.far;\r\n\r\n\t\t\t\tcameraL.near = _currentDepthNear;\r\n\t\t\t\tcameraL.far = _currentDepthFar;\r\n\t\t\t\tcameraR.near = _currentDepthNear;\r\n\t\t\t\tcameraR.far = _currentDepthFar;\r\n\r\n\t\t\t\tcameraL.updateProjectionMatrix();\r\n\t\t\t\tcameraR.updateProjectionMatrix();\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst parent = camera.parent;\r\n\t\t\tconst cameras = cameraXR.cameras;\r\n\r\n\t\t\tupdateCamera( cameraXR, parent );\r\n\r\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\r\n\r\n\t\t\t\tupdateCamera( cameras[ i ], parent );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update projection matrix for proper view frustum culling\r\n\r\n\t\t\tif ( cameras.length === 2 ) {\r\n\r\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assume single camera setup (AR)\r\n\r\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update user camera and its children\r\n\r\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\r\n\r\n\t\t};\r\n\r\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\r\n\t\t\t\tcamera.matrix.invert();\r\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\tcamera.updateMatrixWorld( true );\r\n\r\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\r\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\r\n\r\n\t\t\tif ( camera.isPerspectiveCamera ) {\r\n\r\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\r\n\t\t\t\tcamera.zoom = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.getCamera = function () {\r\n\r\n\t\t\treturn cameraXR;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getFoveation = function () {\r\n\r\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn foveation;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setFoveation = function ( value ) {\r\n\r\n\t\t\t// 0 = no foveation = full resolution\r\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\r\n\r\n\t\t\tfoveation = value;\r\n\r\n\t\t\tif ( glProjLayer !== null ) {\r\n\r\n\t\t\t\tglProjLayer.fixedFoveation = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\r\n\r\n\t\t\t\tglBaseLayer.fixedFoveation = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.hasDepthSensing = function () {\r\n\r\n\t\t\treturn depthSensing.texture !== null;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDepthSensingMesh = function () {\r\n\r\n\t\t\treturn depthSensing.getMesh( cameraXR );\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\r\n\t\t\txrFrame = frame;\r\n\r\n\t\t\tif ( pose !== null ) {\r\n\r\n\t\t\t\tconst views = pose.views;\r\n\r\n\t\t\t\tif ( glBaseLayer !== null ) {\r\n\r\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\r\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet cameraXRNeedsUpdate = false;\r\n\r\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\r\n\r\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\r\n\r\n\t\t\t\t\tcameraXR.cameras.length = 0;\r\n\t\t\t\t\tcameraXRNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst view = views[ i ];\r\n\r\n\t\t\t\t\tlet viewport = null;\r\n\r\n\t\t\t\t\tif ( glBaseLayer !== null ) {\r\n\r\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\r\n\t\t\t\t\t\tviewport = glSubImage.viewport;\r\n\r\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\r\n\t\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\r\n\t\t\t\t\t\t\t\tnewRenderTarget,\r\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\r\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\r\n\r\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet camera = cameras[ i ];\r\n\r\n\t\t\t\t\tif ( camera === undefined ) {\r\n\r\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\r\n\t\t\t\t\t\tcamera.layers.enable( i );\r\n\t\t\t\t\t\tcamera.viewport = new Vector4();\r\n\t\t\t\t\t\tcameras[ i ] = camera;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\r\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\r\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\r\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\r\n\r\n\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\r\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\r\n\r\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\r\n\r\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\r\n\r\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\r\n\r\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\r\n\r\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\r\n\t\t\t\tconst controller = controllers[ i ];\r\n\r\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\r\n\r\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\r\n\r\n\t\t\tif ( frame.detectedPlanes ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\r\n\r\n\t\t\t}\r\n\r\n\t\t\txrFrame = null;\r\n\r\n\t\t}\r\n\r\n\t\tconst animation = new WebGLAnimation();\r\n\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _e1 = /*@__PURE__*/ new Euler();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\n\r\nfunction WebGLMaterials( renderer, properties ) {\r\n\r\n\tfunction refreshTransformUniform( map, uniform ) {\r\n\r\n\t\tif ( map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\tmap.updateMatrix();\r\n\r\n\t\t}\r\n\r\n\t\tuniform.value.copy( map.matrix );\r\n\r\n\t}\r\n\r\n\tfunction refreshFogUniforms( uniforms, fog ) {\r\n\r\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\r\n\r\n\t\tif ( fog.isFog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog.isFogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\r\n\r\n\t\tif ( material.isMeshBasicMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshLambertMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshToonMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsToon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshPhongMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsPhong( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshStandardMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material.isMeshMatcapMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsMatcap( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshDepthMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshDistanceMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsDistance( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isLineBasicMaterial ) {\r\n\r\n\t\t\trefreshUniformsLine( uniforms, material );\r\n\r\n\t\t\tif ( material.isLineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsDash( uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material.isPointsMaterial ) {\r\n\r\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\r\n\r\n\t\t} else if ( material.isSpriteMaterial ) {\r\n\r\n\t\t\trefreshUniformsSprites( uniforms, material );\r\n\r\n\t\t} else if ( material.isShadowMaterial ) {\r\n\r\n\t\t\tuniforms.color.value.copy( material.color );\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t} else if ( material.isShaderMaterial ) {\r\n\r\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsCommon( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tif ( material.color ) {\r\n\r\n\t\t\tuniforms.diffuse.value.copy( material.color );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\r\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\r\n\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\tuniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\r\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\r\n\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\tuniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\r\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\r\n\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.specularMap ) {\r\n\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\r\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaTest > 0 ) {\r\n\r\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\r\n\t\t}\r\n\r\n\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\tconst envMap = materialProperties.envMap;\r\n\t\tconst envMapRotation = materialProperties.envMapRotation;\r\n\r\n\t\tif ( envMap ) {\r\n\r\n\t\t\tuniforms.envMap.value = envMap;\r\n\r\n\t\t\t_e1.copy( envMapRotation );\r\n\r\n\t\t\t// accommodate left-handed frame\r\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\r\n\r\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\r\n\r\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\r\n\t\t\t\t_e1.y *= - 1;\r\n\t\t\t\t_e1.z *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\r\n\r\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.ior.value = material.ior;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\r\n\r\n\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size * pixelRatio;\r\n\t\tuniforms.scale.value = height * 0.5;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaTest > 0 ) {\r\n\r\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsSprites( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.rotation.value = material.rotation;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaTest > 0 ) {\r\n\r\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value.copy( material.specular );\r\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsToon( uniforms, material ) {\r\n\r\n\t\tif ( material.gradientMap ) {\r\n\r\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsStandard( uniforms, material ) {\r\n\r\n\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.roughness.value = material.roughness;\r\n\r\n\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.envMap ) {\r\n\r\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\r\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\r\n\r\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\r\n\r\n\t\tif ( material.sheen > 0 ) {\r\n\r\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\r\n\r\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\r\n\r\n\t\t\tif ( material.sheenColorMap ) {\r\n\r\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.sheenRoughnessMap ) {\r\n\r\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.clearcoat > 0 ) {\r\n\r\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\r\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\r\n\r\n\t\t\tif ( material.clearcoatMap ) {\r\n\r\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.clearcoatRoughnessMap ) {\r\n\r\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.clearcoatNormalMap ) {\r\n\r\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\r\n\r\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\r\n\r\n\t\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.dispersion > 0 ) {\r\n\r\n\t\t\tuniforms.dispersion.value = material.dispersion;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.iridescence > 0 ) {\r\n\r\n\t\t\tuniforms.iridescence.value = material.iridescence;\r\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\r\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\r\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\r\n\r\n\t\t\tif ( material.iridescenceMap ) {\r\n\r\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.iridescenceThicknessMap ) {\r\n\r\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.transmission > 0 ) {\r\n\r\n\t\t\tuniforms.transmission.value = material.transmission;\r\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\r\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\r\n\r\n\t\t\tif ( material.transmissionMap ) {\r\n\r\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.thickness.value = material.thickness;\r\n\r\n\t\t\tif ( material.thicknessMap ) {\r\n\r\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\r\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.anisotropy > 0 ) {\r\n\r\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\r\n\r\n\t\t\tif ( material.anisotropyMap ) {\r\n\r\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\r\n\t\tuniforms.specularColor.value.copy( material.specularColor );\r\n\r\n\t\tif ( material.specularColorMap ) {\r\n\r\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\r\n\r\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.specularIntensityMap ) {\r\n\r\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\r\n\r\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsMatcap( uniforms, material ) {\r\n\r\n\t\tif ( material.matcap ) {\r\n\r\n\t\t\tuniforms.matcap.value = material.matcap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDistance( uniforms, material ) {\r\n\r\n\t\tconst light = properties.get( material ).light;\r\n\r\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\r\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\r\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\trefreshFogUniforms: refreshFogUniforms,\r\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\r\n\r\n\tlet buffers = {};\r\n\tlet updateList = {};\r\n\tlet allocatedBindingPoints = [];\r\n\r\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\r\n\r\n\tfunction bind( uniformsGroup, program ) {\r\n\r\n\t\tconst webglProgram = program.program;\r\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\r\n\r\n\t}\r\n\r\n\tfunction update( uniformsGroup, program ) {\r\n\r\n\t\tlet buffer = buffers[ uniformsGroup.id ];\r\n\r\n\t\tif ( buffer === undefined ) {\r\n\r\n\t\t\tprepareUniformsGroup( uniformsGroup );\r\n\r\n\t\t\tbuffer = createBuffer( uniformsGroup );\r\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\r\n\r\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\r\n\r\n\t\t}\r\n\r\n\t\t// ensure to update the binding points/block indices mapping for this program\r\n\r\n\t\tconst webglProgram = program.program;\r\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\r\n\r\n\t\t// update UBO once per frame\r\n\r\n\t\tconst frame = info.render.frame;\r\n\r\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\r\n\r\n\t\t\tupdateBufferData( uniformsGroup );\r\n\r\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( uniformsGroup ) {\r\n\r\n\t\t// the setup of an UBO is independent of a particular shader program but global\r\n\r\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\r\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\r\n\r\n\t\tconst buffer = gl.createBuffer();\r\n\t\tconst size = uniformsGroup.__size;\r\n\t\tconst usage = uniformsGroup.usage;\r\n\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\r\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\r\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\r\n\r\n\t\treturn buffer;\r\n\r\n\t}\r\n\r\n\tfunction allocateBindingPointIndex() {\r\n\r\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\r\n\r\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\r\n\r\n\t\t\t\tallocatedBindingPoints.push( i );\r\n\t\t\t\treturn i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\tfunction updateBufferData( uniformsGroup ) {\r\n\r\n\t\tconst buffer = buffers[ uniformsGroup.id ];\r\n\t\tconst uniforms = uniformsGroup.uniforms;\r\n\t\tconst cache = uniformsGroup.__cache;\r\n\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\r\n\r\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\r\n\r\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tconst uniform = uniformArray[ j ];\r\n\r\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\r\n\r\n\t\t\t\t\tconst offset = uniform.__offset;\r\n\r\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\r\n\r\n\t\t\t\t\tlet arrayOffset = 0;\r\n\r\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\r\n\r\n\t\t\t\t\t\tconst value = values[ k ];\r\n\r\n\t\t\t\t\t\tconst info = getUniformSize( value );\r\n\r\n\t\t\t\t\t\t// TODO add integer and struct support\r\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\r\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\r\n\r\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\r\n\r\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\r\n\r\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\r\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\r\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\r\n\r\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\r\n\r\n\t}\r\n\r\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\r\n\r\n\t\tconst value = uniform.value;\r\n\t\tconst indexString = index + '_' + indexArray;\r\n\r\n\t\tif ( cache[ indexString ] === undefined ) {\r\n\r\n\t\t\t// cache entry does not exist so far\r\n\r\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t\tcache[ indexString ] = value;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcache[ indexString ] = value.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst cachedObject = cache[ indexString ];\r\n\r\n\t\t\t// compare current value with cached entry\r\n\r\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t\tif ( cachedObject !== value ) {\r\n\r\n\t\t\t\t\tcache[ indexString ] = value;\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\r\n\r\n\t\t\t\t\tcachedObject.copy( value );\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction prepareUniformsGroup( uniformsGroup ) {\r\n\r\n\t\t// determine total buffer size according to the STD140 layout\r\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\r\n\r\n\t\tconst uniforms = uniformsGroup.uniforms;\r\n\r\n\t\tlet offset = 0; // global buffer offset in bytes\r\n\t\tconst chunkSize = 16; // size of a chunk in bytes\r\n\r\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\r\n\r\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tconst uniform = uniformArray[ j ];\r\n\r\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\r\n\r\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tconst value = values[ k ];\r\n\r\n\t\t\t\t\tconst info = getUniformSize( value );\r\n\r\n\t\t\t\t\t// Calculate the chunk offset\r\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\r\n\r\n\t\t\t\t\t// Check for chunk overflow\r\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\r\n\r\n\t\t\t\t\t\t// Add padding and adjust offset\r\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\r\n\r\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\r\n\t\t\t\t\tuniform.__offset = offset;\r\n\r\n\r\n\t\t\t\t\t// Update the global offset\r\n\t\t\t\t\toffset += info.storage;\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ensure correct final padding\r\n\r\n\t\tconst chunkOffset = offset % chunkSize;\r\n\r\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\r\n\r\n\t\t//\r\n\r\n\t\tuniformsGroup.__size = offset;\r\n\t\tuniformsGroup.__cache = {};\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tfunction getUniformSize( value ) {\r\n\r\n\t\tconst info = {\r\n\t\t\tboundary: 0, // bytes\r\n\t\t\tstorage: 0 // bytes\r\n\t\t};\r\n\r\n\t\t// determine sizes according to STD140\r\n\r\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t// float/int/bool\r\n\r\n\t\t\tinfo.boundary = 4;\r\n\t\t\tinfo.storage = 4;\r\n\r\n\t\t} else if ( value.isVector2 ) {\r\n\r\n\t\t\t// vec2\r\n\r\n\t\t\tinfo.boundary = 8;\r\n\t\t\tinfo.storage = 8;\r\n\r\n\t\t} else if ( value.isVector3 || value.isColor ) {\r\n\r\n\t\t\t// vec3\r\n\r\n\t\t\tinfo.boundary = 16;\r\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\r\n\r\n\t\t} else if ( value.isVector4 ) {\r\n\r\n\t\t\t// vec4\r\n\r\n\t\t\tinfo.boundary = 16;\r\n\t\t\tinfo.storage = 16;\r\n\r\n\t\t} else if ( value.isMatrix3 ) {\r\n\r\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\r\n\r\n\t\t\tinfo.boundary = 48;\r\n\t\t\tinfo.storage = 48;\r\n\r\n\t\t} else if ( value.isMatrix4 ) {\r\n\r\n\t\t\t// mat4\r\n\r\n\t\t\tinfo.boundary = 64;\r\n\t\t\tinfo.storage = 64;\r\n\r\n\t\t} else if ( value.isTexture ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\r\n\r\n\t\t}\r\n\r\n\t\treturn info;\r\n\r\n\t}\r\n\r\n\tfunction onUniformsGroupsDispose( event ) {\r\n\r\n\t\tconst uniformsGroup = event.target;\r\n\r\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\r\n\r\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\r\n\t\tallocatedBindingPoints.splice( index, 1 );\r\n\r\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\r\n\r\n\t\tdelete buffers[ uniformsGroup.id ];\r\n\t\tdelete updateList[ uniformsGroup.id ];\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tfor ( const id in buffers ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffers[ id ] );\r\n\r\n\t\t}\r\n\r\n\t\tallocatedBindingPoints = [];\r\n\t\tbuffers = {};\r\n\t\tupdateList = {};\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tbind: bind,\r\n\t\tupdate: update,\r\n\r\n\t\tdispose: dispose\r\n\r\n\t};\r\n\r\n}\r\n\r\nclass WebGLRenderer {\r\n\r\n\tconstructor( parameters = {} ) {\r\n\r\n\t\tconst {\r\n\t\t\tcanvas = createCanvasElement(),\r\n\t\t\tcontext = null,\r\n\t\t\tdepth = true,\r\n\t\t\tstencil = false,\r\n\t\t\talpha = false,\r\n\t\t\tantialias = false,\r\n\t\t\tpremultipliedAlpha = true,\r\n\t\t\tpreserveDrawingBuffer = false,\r\n\t\t\tpowerPreference = 'default',\r\n\t\t\tfailIfMajorPerformanceCaveat = false,\r\n\t\t} = parameters;\r\n\r\n\t\tthis.isWebGLRenderer = true;\r\n\r\n\t\tlet _alpha;\r\n\r\n\t\tif ( context !== null ) {\r\n\r\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_alpha = context.getContextAttributes().alpha;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_alpha = alpha;\r\n\r\n\t\t}\r\n\r\n\t\tconst uintClearColor = new Uint32Array( 4 );\r\n\t\tconst intClearColor = new Int32Array( 4 );\r\n\r\n\t\tlet currentRenderList = null;\r\n\t\tlet currentRenderState = null;\r\n\r\n\t\t// render() can be called from within a callback triggered by another render.\r\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\r\n\r\n\t\tconst renderListStack = [];\r\n\t\tconst renderStateStack = [];\r\n\r\n\t\t// public properties\r\n\r\n\t\tthis.domElement = canvas;\r\n\r\n\t\t// Debug configuration container\r\n\t\tthis.debug = {\r\n\r\n\t\t\t/**\r\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\r\n\t\t\t * @type {boolean}\r\n\t\t\t */\r\n\t\t\tcheckShaderErrors: true,\r\n\t\t\t/**\r\n\t\t\t * Callback for custom error reporting.\r\n\t\t\t * @type {?Function}\r\n\t\t\t */\r\n\t\t\tonShaderError: null\r\n\t\t};\r\n\r\n\t\t// clearing\r\n\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\r\n\t\t// scene graph\r\n\r\n\t\tthis.sortObjects = true;\r\n\r\n\t\t// user-defined clipping\r\n\r\n\t\tthis.clippingPlanes = [];\r\n\t\tthis.localClippingEnabled = false;\r\n\r\n\t\t// physically based shading\r\n\r\n\t\tthis._outputColorSpace = SRGBColorSpace;\r\n\r\n\t\t// tone mapping\r\n\r\n\t\tthis.toneMapping = NoToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0;\r\n\r\n\t\t// internal properties\r\n\r\n\t\tconst _this = this;\r\n\r\n\t\tlet _isContextLost = false;\r\n\r\n\t\t// internal state cache\r\n\r\n\t\tlet _currentActiveCubeFace = 0;\r\n\t\tlet _currentActiveMipmapLevel = 0;\r\n\t\tlet _currentRenderTarget = null;\r\n\t\tlet _currentMaterialId = - 1;\r\n\r\n\t\tlet _currentCamera = null;\r\n\r\n\t\tconst _currentViewport = new Vector4();\r\n\t\tconst _currentScissor = new Vector4();\r\n\t\tlet _currentScissorTest = null;\r\n\r\n\t\tconst _currentClearColor = new Color( 0x000000 );\r\n\t\tlet _currentClearAlpha = 0;\r\n\r\n\t\t//\r\n\r\n\t\tlet _width = canvas.width;\r\n\t\tlet _height = canvas.height;\r\n\r\n\t\tlet _pixelRatio = 1;\r\n\t\tlet _opaqueSort = null;\r\n\t\tlet _transparentSort = null;\r\n\r\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\r\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\r\n\t\tlet _scissorTest = false;\r\n\r\n\t\t// frustum\r\n\r\n\t\tconst _frustum = new Frustum();\r\n\r\n\t\t// clipping\r\n\r\n\t\tlet _clippingEnabled = false;\r\n\t\tlet _localClippingEnabled = false;\r\n\r\n\t\t// camera matrices cache\r\n\r\n\t\tconst _projScreenMatrix = new Matrix4();\r\n\r\n\t\tconst _vector3 = new Vector3();\r\n\r\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\r\n\r\n\t\tlet _renderBackground = false;\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\r\n\t\tlet _gl = context;\r\n\r\n\t\tfunction getContext( contextName, contextAttributes ) {\r\n\r\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst contextAttributes = {\r\n\t\t\t\talpha: true,\r\n\t\t\t\tdepth,\r\n\t\t\t\tstencil,\r\n\t\t\t\tantialias,\r\n\t\t\t\tpremultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer,\r\n\t\t\t\tpowerPreference,\r\n\t\t\t\tfailIfMajorPerformanceCaveat,\r\n\t\t\t};\r\n\r\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\r\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\r\n\r\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\r\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\r\n\r\n\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\tconst contextName = 'webgl2';\r\n\r\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\r\n\r\n\t\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\t\tif ( getContext( contextName ) ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\r\n\t\t\tthrow error;\r\n\r\n\t\t}\r\n\r\n\t\tlet extensions, capabilities, state, info;\r\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\r\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\r\n\r\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\r\n\t\tlet utils, bindingStates, uniformsGroups;\r\n\r\n\t\tfunction initGLContext() {\r\n\r\n\t\t\textensions = new WebGLExtensions( _gl );\r\n\t\t\textensions.init();\r\n\r\n\t\t\tutils = new WebGLUtils( _gl, extensions );\r\n\r\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\r\n\r\n\t\t\tstate = new WebGLState( _gl );\r\n\r\n\t\t\tinfo = new WebGLInfo( _gl );\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\r\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\r\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\r\n\t\t\tattributes = new WebGLAttributes( _gl );\r\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\r\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\r\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\r\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\r\n\t\t\tclipping = new WebGLClipping( properties );\r\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\r\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\r\n\t\t\trenderLists = new WebGLRenderLists();\r\n\t\t\trenderStates = new WebGLRenderStates( extensions );\r\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\r\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\r\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\r\n\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\r\n\r\n\t\t\tinfo.programs = programCache.programs;\r\n\r\n\t\t\t_this.capabilities = capabilities;\r\n\t\t\t_this.extensions = extensions;\r\n\t\t\t_this.properties = properties;\r\n\t\t\t_this.renderLists = renderLists;\r\n\t\t\t_this.shadowMap = shadowMap;\r\n\t\t\t_this.state = state;\r\n\t\t\t_this.info = info;\r\n\r\n\t\t}\r\n\r\n\t\tinitGLContext();\r\n\r\n\t\t// xr\r\n\r\n\t\tconst xr = new WebXRManager( _this, _gl );\r\n\r\n\t\tthis.xr = xr;\r\n\r\n\t\t// API\r\n\r\n\t\tthis.getContext = function () {\r\n\r\n\t\t\treturn _gl;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getContextAttributes = function () {\r\n\r\n\t\t\treturn _gl.getContextAttributes();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextLoss = function () {\r\n\r\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.loseContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextRestore = function () {\r\n\r\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.restoreContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.getPixelRatio = function () {\r\n\r\n\t\t\treturn _pixelRatio;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\t\tif ( value === undefined ) return;\r\n\r\n\t\t\t_pixelRatio = value;\r\n\r\n\t\t\tthis.setSize( _width, _height, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getSize = function ( target ) {\r\n\r\n\t\t\treturn target.set( _width, _height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\r\n\r\n\t\t\tif ( xr.isPresenting ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\r\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\r\n\r\n\t\t\tif ( updateStyle === true ) {\r\n\r\n\t\t\t\tcanvas.style.width = width + 'px';\r\n\t\t\t\tcanvas.style.height = height + 'px';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDrawingBufferSize = function ( target ) {\r\n\r\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\r\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\r\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCurrentViewport = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _currentViewport );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getViewport = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _viewport );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t\tif ( x.isVector4 ) {\r\n\r\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_viewport.set( x, y, width, height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getScissor = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _scissor );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t\tif ( x.isVector4 ) {\r\n\r\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_scissor.set( x, y, width, height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getScissorTest = function () {\r\n\r\n\t\t\treturn _scissorTest;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setOpaqueSort = function ( method ) {\r\n\r\n\t\t\t_opaqueSort = method;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setTransparentSort = function ( method ) {\r\n\r\n\t\t\t_transparentSort = method;\r\n\r\n\t\t};\r\n\r\n\t\t// Clearing\r\n\r\n\t\tthis.getClearColor = function ( target ) {\r\n\r\n\t\t\treturn target.copy( background.getClearColor() );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearColor = function () {\r\n\r\n\t\t\tbackground.setClearColor.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getClearAlpha = function () {\r\n\r\n\t\t\treturn background.getClearAlpha();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearAlpha = function () {\r\n\r\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\r\n\r\n\t\t\tlet bits = 0;\r\n\r\n\t\t\tif ( color ) {\r\n\r\n\t\t\t\t// check if we're trying to clear an integer target\r\n\t\t\t\tlet isIntegerFormat = false;\r\n\t\t\t\tif ( _currentRenderTarget !== null ) {\r\n\r\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\r\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\r\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\r\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\r\n\t\t\t\t// or unsigned integer target\r\n\t\t\t\tif ( isIntegerFormat ) {\r\n\r\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\r\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\r\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\r\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\r\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\r\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\r\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\r\n\r\n\t\t\t\t\tconst clearColor = background.getClearColor();\r\n\t\t\t\t\tconst a = background.getClearAlpha();\r\n\t\t\t\t\tconst r = clearColor.r;\r\n\t\t\t\t\tconst g = clearColor.g;\r\n\t\t\t\t\tconst b = clearColor.b;\r\n\r\n\t\t\t\t\tif ( isUnsignedType ) {\r\n\r\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\r\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\r\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\r\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\r\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\r\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\r\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\r\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\r\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil ) {\r\n\r\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.clear( bits );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearColor = function () {\r\n\r\n\t\t\tthis.clear( true, false, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearDepth = function () {\r\n\r\n\t\t\tthis.clear( false, true, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearStencil = function () {\r\n\r\n\t\t\tthis.clear( false, false, true );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\r\n\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tcubemaps.dispose();\r\n\t\t\tcubeuvmaps.dispose();\r\n\t\t\tobjects.dispose();\r\n\t\t\tbindingStates.dispose();\r\n\t\t\tuniformsGroups.dispose();\r\n\t\t\tprogramCache.dispose();\r\n\r\n\t\t\txr.dispose();\r\n\r\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\r\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t};\r\n\r\n\t\t// Events\r\n\r\n\t\tfunction onContextLost( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\r\n\r\n\t\t\t_isContextLost = true;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore( /* event */ ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\r\n\r\n\t\t\t_isContextLost = false;\r\n\r\n\t\t\tconst infoAutoReset = info.autoReset;\r\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\r\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\r\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\r\n\t\t\tconst shadowMapType = shadowMap.type;\r\n\r\n\t\t\tinitGLContext();\r\n\r\n\t\t\tinfo.autoReset = infoAutoReset;\r\n\t\t\tshadowMap.enabled = shadowMapEnabled;\r\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\r\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\r\n\t\t\tshadowMap.type = shadowMapType;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextCreationError( event ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose( event ) {\r\n\r\n\t\t\tconst material = event.target;\r\n\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\tdeallocateMaterial( material );\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer deallocation\r\n\r\n\t\tfunction deallocateMaterial( material ) {\r\n\r\n\t\t\treleaseMaterialProgramReferences( material );\r\n\r\n\t\t\tproperties.remove( material );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction releaseMaterialProgramReferences( material ) {\r\n\r\n\t\t\tconst programs = properties.get( material ).programs;\r\n\r\n\t\t\tif ( programs !== undefined ) {\r\n\r\n\t\t\t\tprograms.forEach( function ( program ) {\r\n\r\n\t\t\t\t\tprogramCache.releaseProgram( program );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tif ( material.isShaderMaterial ) {\r\n\r\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer rendering\r\n\r\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\r\n\r\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\r\n\r\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\r\n\r\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\r\n\r\n\t\t\tstate.setMaterial( material, frontFaceCW );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet index = geometry.index;\r\n\t\t\tlet rangeFactor = 1;\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\r\n\r\n\t\t\t\tif ( index === undefined ) return;\r\n\r\n\t\t\t\trangeFactor = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst drawRange = geometry.drawRange;\r\n\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\r\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\r\n\r\n\t\t\tif ( group !== null ) {\r\n\r\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\r\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\r\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\r\n\r\n\t\t\t} else if ( position !== undefined && position !== null ) {\r\n\r\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\r\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst drawCount = drawEnd - drawStart;\r\n\r\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\r\n\r\n\t\t\tlet attribute;\r\n\t\t\tlet renderer = bufferRenderer;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattribute = attributes.get( index );\r\n\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isLine ) {\r\n\r\n\t\t\t\tlet lineWidth = material.linewidth;\r\n\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\t\tif ( object.isLineSegments ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else if ( object.isLineLoop ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isPoints ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.isBatchedMesh ) {\r\n\r\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\r\n\r\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isInstancedMesh ) {\r\n\r\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\r\n\r\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\r\n\r\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\r\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\r\n\r\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// Compile\r\n\r\n\t\tfunction prepareMaterial( material, scene, object ) {\r\n\r\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\r\n\r\n\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\tgetProgram( material, scene, object );\r\n\r\n\t\t\t\tmaterial.side = FrontSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\tgetProgram( material, scene, object );\r\n\r\n\t\t\t\tmaterial.side = DoubleSide;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgetProgram( material, scene, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\r\n\r\n\t\t\tif ( targetScene === null ) targetScene = scene;\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\r\n\t\t\tcurrentRenderState.init( camera );\r\n\r\n\t\t\trenderStateStack.push( currentRenderState );\r\n\r\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\r\n\r\n\t\t\ttargetScene.traverseVisible( function ( object ) {\r\n\r\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( scene !== targetScene ) {\r\n\r\n\t\t\t\tscene.traverseVisible( function ( object ) {\r\n\r\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentRenderState.setupLights();\r\n\r\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\r\n\r\n\t\t\tconst materials = new Set();\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\tif ( material ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst material2 = material[ i ];\r\n\r\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\r\n\t\t\t\t\t\t\tmaterials.add( material2 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\r\n\t\t\t\t\t\tmaterials.add( material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\trenderStateStack.pop();\r\n\t\t\tcurrentRenderState = null;\r\n\r\n\t\t\treturn materials;\r\n\r\n\t\t};\r\n\r\n\t\t// compileAsync\r\n\r\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\r\n\r\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\r\n\r\n\t\t\t// Wait for all the materials in the new object to indicate that they're\r\n\t\t\t// ready to be used before resolving the promise.\r\n\r\n\t\t\treturn new Promise( ( resolve ) => {\r\n\r\n\t\t\t\tfunction checkMaterialsReady() {\r\n\r\n\t\t\t\t\tmaterials.forEach( function ( material ) {\r\n\r\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\r\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\r\n\r\n\t\t\t\t\t\tif ( program.isReady() ) {\r\n\r\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\r\n\t\t\t\t\t\t\tmaterials.delete( material );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\r\n\r\n\t\t\t\t\tif ( materials.size === 0 ) {\r\n\r\n\t\t\t\t\t\tresolve( scene );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\r\n\r\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\r\n\r\n\t\t\t\t\t// If we can check the compilation status of the materials without\r\n\t\t\t\t\t// blocking then do so right away.\r\n\r\n\t\t\t\t\tcheckMaterialsReady();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\r\n\t\t\t\t\t// initialized a chance to finish.\r\n\r\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time ) {\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionStart() {\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionEnd() {\r\n\r\n\t\t\tanimation.start();\r\n\r\n\t\t}\r\n\r\n\t\tconst animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\txr.setAnimationLoop( callback );\r\n\r\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\r\n\r\n\t\t};\r\n\r\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\r\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\r\n\r\n\t\t// Rendering\r\n\r\n\t\tthis.render = function ( scene, camera ) {\r\n\r\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _isContextLost === true ) return;\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\r\n\r\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\r\n\r\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\r\n\r\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\r\n\t\t\tcurrentRenderState.init( camera );\r\n\r\n\t\t\trenderStateStack.push( currentRenderState );\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\r\n\r\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\r\n\t\t\tcurrentRenderList.init();\r\n\r\n\t\t\trenderListStack.push( currentRenderList );\r\n\r\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\r\n\r\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\r\n\r\n\t\t\t\tif ( depthSensingMesh !== null ) {\r\n\r\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\r\n\r\n\t\t\tcurrentRenderList.finish();\r\n\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\r\n\t\t\tif ( _renderBackground ) {\r\n\r\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tthis.info.render.frame ++;\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\r\n\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\r\n\r\n\t\t\t// render scene\r\n\r\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\r\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\r\n\r\n\t\t\tcurrentRenderState.setupLights();\r\n\r\n\t\t\tif ( camera.isArrayCamera ) {\r\n\r\n\t\t\t\tconst cameras = camera.cameras;\r\n\r\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\r\n\r\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _renderBackground ) background.render( scene );\r\n\r\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst camera2 = cameras[ i ];\r\n\r\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\r\n\r\n\t\t\t\tif ( _renderBackground ) background.render( scene );\r\n\r\n\t\t\t\trenderScene( currentRenderList, scene, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( _currentRenderTarget !== null ) {\r\n\r\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\r\n\r\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\r\n\r\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\r\n\r\n\t\t\t// _gl.finish();\r\n\r\n\t\t\tbindingStates.resetDefaultState();\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\trenderStateStack.pop();\r\n\r\n\t\t\tif ( renderStateStack.length > 0 ) {\r\n\r\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\r\n\r\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcurrentRenderState = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderListStack.pop();\r\n\r\n\t\t\tif ( renderListStack.length > 0 ) {\r\n\r\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcurrentRenderList = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tconst visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible ) {\r\n\r\n\t\t\t\tif ( object.isGroup ) {\r\n\r\n\t\t\t\t\tgroupOrder = object.renderOrder;\r\n\r\n\t\t\t\t} else if ( object.isLOD ) {\r\n\r\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\r\n\r\n\t\t\t\t} else if ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update( object );\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update( object );\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\r\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_vector3\r\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\r\n\r\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\r\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\r\n\t\t\tconst transparentObjects = currentRenderList.transparent;\r\n\r\n\t\t\tcurrentRenderState.setupLightsView( camera );\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\r\n\r\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\r\n\r\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\r\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\r\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\r\n\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\tstate.setPolygonOffset( false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\r\n\r\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n\t\t\tif ( overrideMaterial !== null ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\r\n\r\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\r\n\t\t\t\t\tgenerateMipmaps: true,\r\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\r\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\r\n\t\t\t\t\tsamples: 4,\r\n\t\t\t\t\tstencilBuffer: stencil,\r\n\t\t\t\t\tresolveDepthBuffer: false,\r\n\t\t\t\t\tresolveStencilBuffer: false,\r\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// debug\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tconst geometry = new PlaneGeometry();\r\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\r\n\r\n\t\t\t\tconst mesh = new Mesh( geometry, material );\r\n\t\t\t\tscene.add( mesh );\r\n\t\t\t\t*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\r\n\r\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\r\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\r\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\r\n\r\n\t\t\t_this.getClearColor( _currentClearColor );\r\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\r\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\r\n\r\n\t\t\tif ( _renderBackground ) {\r\n\r\n\t\t\t\tbackground.render( scene );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.clear();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\r\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\r\n\t\t\tconst currentToneMapping = _this.toneMapping;\r\n\t\t\t_this.toneMapping = NoToneMapping;\r\n\r\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\r\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\r\n\t\t\tconst currentCameraViewport = camera.viewport;\r\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\r\n\r\n\t\t\tcurrentRenderState.setupLightsView( camera );\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\r\n\r\n\t\t\trenderObjects( opaqueObjects, scene, camera );\r\n\r\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\r\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\r\n\r\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\r\n\r\n\t\t\t\tlet renderTargetNeedsUpdate = false;\r\n\r\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\r\n\r\n\t\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\t\tconst material = renderItem.material;\r\n\t\t\t\t\tconst group = renderItem.group;\r\n\r\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\t\tconst currentSide = material.side;\r\n\r\n\t\t\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t\t\tmaterial.side = currentSide;\r\n\t\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\r\n\r\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\r\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\r\n\r\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\r\n\r\n\t\t\t_this.toneMapping = currentToneMapping;\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObjects( renderList, scene, camera ) {\r\n\r\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst renderItem = renderList[ i ];\r\n\r\n\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n\t\t\t\tconst group = renderItem.group;\r\n\r\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\r\n\r\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\r\n\r\n\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n\r\n\t\t\t\tmaterial.side = FrontSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n\r\n\t\t\t\tmaterial.side = DoubleSide;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getProgram( material, scene, object ) {\r\n\r\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tconst lightsStateVersion = lights.state.version;\r\n\r\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\r\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\r\n\r\n\t\t\tlet programs = materialProperties.programs;\r\n\r\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\r\n\r\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tmaterialProperties.fog = scene.fog;\r\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\r\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\r\n\r\n\t\t\tif ( programs === undefined ) {\r\n\r\n\t\t\t\t// new material\r\n\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t\tprograms = new Map();\r\n\t\t\t\tmaterialProperties.programs = programs;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet program = programs.get( programCacheKey );\r\n\r\n\t\t\tif ( program !== undefined ) {\r\n\r\n\t\t\t\t// early out if program and light state is identical\r\n\r\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\r\n\r\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\r\n\r\n\t\t\t\t\treturn program;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\r\n\r\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\r\n\r\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\r\n\r\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\r\n\t\t\t\tprograms.set( programCacheKey, program );\r\n\r\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\r\n\r\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateCommonMaterialProperties( material, parameters );\r\n\r\n\t\t\t// store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\r\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\r\n\r\n\t\t\tif ( materialProperties.needsLights ) {\r\n\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\r\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\r\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\r\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.currentProgram = program;\r\n\t\t\tmaterialProperties.uniformsList = null;\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUniformList( materialProperties ) {\r\n\r\n\t\t\tif ( materialProperties.uniformsList === null ) {\r\n\r\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\r\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materialProperties.uniformsList;\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\r\n\r\n\t\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\r\n\t\t\tmaterialProperties.batching = parameters.batching;\r\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\r\n\t\t\tmaterialProperties.instancing = parameters.instancing;\r\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\r\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\r\n\t\t\tmaterialProperties.skinning = parameters.skinning;\r\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\r\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\r\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\r\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\r\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\r\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\r\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\r\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\r\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\r\n\r\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\ttextures.resetTextureUnits();\r\n\r\n\t\t\tconst fog = scene.fog;\r\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\r\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\r\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\r\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\r\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\r\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\r\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\r\n\r\n\t\t\tlet toneMapping = NoToneMapping;\r\n\r\n\t\t\tif ( material.toneMapped ) {\r\n\r\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\t\t\t\ttoneMapping = _this.toneMapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\t\tconst materialProperties = properties.get( material );\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\r\n\t\t\tif ( _clippingEnabled === true ) {\r\n\r\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\r\n\r\n\t\t\t\t\tconst useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t\tclipping.setState( material, camera, useCache );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet needsProgramChange = false;\r\n\r\n\t\t\tif ( material.version === materialProperties.__version ) {\r\n\r\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\r\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\tmaterialProperties.__version = material.version;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet program = materialProperties.currentProgram;\r\n\r\n\t\t\tif ( needsProgramChange === true ) {\r\n\r\n\t\t\t\tprogram = getProgram( material, scene, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet refreshProgram = false;\r\n\t\t\tlet refreshMaterial = false;\r\n\t\t\tlet refreshLights = false;\r\n\r\n\t\t\tconst p_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif ( state.useProgram( program.program ) ) {\r\n\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\t\trefreshMaterial = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\r\n\r\n\t\t\t\t// common camera uniforms\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\r\n\r\n\t\t\t\tif ( material.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\r\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\r\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.isShaderMaterial ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _currentCamera !== camera ) {\r\n\r\n\t\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\r\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\r\n\r\n\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\t\tconst skeleton = object.skeleton;\r\n\r\n\t\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.isBatchedMesh ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\r\n\t\t\t\tif ( object._colorsTexture !== null ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\r\n\r\n\t\t\t\tmorphtargets.update( object, geometry, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\r\n\r\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\r\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\r\n\r\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\r\n\r\n\t\t\t\tm_uniforms.envMap.value = envMap;\r\n\r\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\r\n\r\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\r\n\r\n\t\t\t\tif ( materialProperties.needsLights ) {\r\n\r\n\t\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\t\tif ( fog && material.fog === true ) {\r\n\r\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// common matrices\r\n\r\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\t\t\t// UBOs\r\n\r\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\r\n\r\n\t\t\t\tconst groups = material.uniformsGroups;\r\n\r\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\t\t\tuniformsGroups.update( group, program );\r\n\t\t\t\t\tuniformsGroups.bind( group, program );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\t\tuniforms.lightProbe.needsUpdate = value;\r\n\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction materialNeedsLights( material ) {\r\n\r\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\r\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\r\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\r\n\r\n\t\t}\r\n\r\n\t\tthis.getActiveCubeFace = function () {\r\n\r\n\t\t\treturn _currentActiveCubeFace;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getActiveMipmapLevel = function () {\r\n\r\n\t\t\treturn _currentActiveMipmapLevel;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn _currentRenderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\r\n\r\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\r\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\r\n\r\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\r\n\r\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\r\n\r\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\r\n\r\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\r\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\r\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\r\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\r\n\r\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\r\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\r\n\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\t\t\t_currentActiveCubeFace = activeCubeFace;\r\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\r\n\r\n\t\t\tlet useDefaultFramebuffer = true;\r\n\t\t\tlet framebuffer = null;\r\n\t\t\tlet isCube = false;\r\n\t\t\tlet isRenderTarget3D = false;\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\r\n\r\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\t\t\t\tuseDefaultFramebuffer = false;\r\n\r\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\r\n\r\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\r\n\r\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\r\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst texture = renderTarget.texture;\r\n\r\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\t\tisRenderTarget3D = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tisCube = true;\r\n\r\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\r\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\r\n\r\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport );\r\n\t\t\tstate.scissor( _currentScissor );\r\n\t\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\r\n\r\n\t\t\t} else if ( isRenderTarget3D ) {\r\n\r\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\tconst layer = activeCubeFace || 0;\r\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\r\n\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\r\n\r\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tconst texture = renderTarget.texture;\r\n\t\t\t\t\tconst textureFormat = texture.format;\r\n\t\t\t\t\tconst textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\r\n\t\t\t\t\t// restore framebuffer of current render target if necessary\r\n\r\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\r\n\r\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tconst texture = renderTarget.texture;\r\n\t\t\t\t\tconst textureFormat = texture.format;\r\n\t\t\t\t\tconst textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\tconst glBuffer = _gl.createBuffer();\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\r\n\t\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\r\n\t\t\t\t\t\t_gl.flush();\r\n\r\n\t\t\t\t\t\t// check if the commands have finished every 8 ms\r\n\t\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\r\n\t\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\r\n\r\n\t\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\r\n\t\t\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\r\n\r\n\t\t\t\t\t\t} finally {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( glBuffer );\r\n\t\t\t\t\t\t\t_gl.deleteSync( sync );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn buffer;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\r\n\t\t\t\t\t// restore framebuffer of current render target if necessary\r\n\r\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\r\n\r\n\t\t\t// support previous signature with position first\r\n\t\t\tif ( texture.isTexture !== true ) {\r\n\r\n\t\t\t\t// @deprecated, r165\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\r\n\r\n\t\t\t\tposition = arguments[ 0 ] || null;\r\n\t\t\t\ttexture = arguments[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst levelScale = Math.pow( 2, - level );\r\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\r\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\r\n\r\n\t\t\tconst x = position !== null ? position.x : 0;\r\n\t\t\tconst y = position !== null ? position.y : 0;\r\n\r\n\t\t\ttextures.setTexture2D( texture, 0 );\r\n\r\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\r\n\r\n\t\t\t// support previous signature with dstPosition first\r\n\t\t\tif ( srcTexture.isTexture !== true ) {\r\n\r\n\t\t\t\t// @deprecated, r165\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\r\n\r\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\r\n\t\t\t\tsrcTexture = arguments[ 1 ];\r\n\t\t\t\tdstTexture = arguments[ 2 ];\r\n\t\t\t\tlevel = arguments[ 3 ] || 0;\r\n\t\t\t\tsrcRegion = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet width, height, minX, minY;\r\n\t\t\tlet dstX, dstY;\r\n\t\t\tif ( srcRegion !== null ) {\r\n\r\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\r\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\r\n\t\t\t\tminX = srcRegion.min.x;\r\n\t\t\t\tminY = srcRegion.min.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\twidth = srcTexture.image.width;\r\n\t\t\t\theight = srcTexture.image.height;\r\n\t\t\t\tminX = 0;\r\n\t\t\t\tminY = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( dstPosition !== null ) {\r\n\r\n\t\t\t\tdstX = dstPosition.x;\r\n\t\t\t\tdstY = dstPosition.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdstX = 0;\r\n\t\t\t\tdstY = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\r\n\t\t\tconst glType = utils.convert( dstTexture.type );\r\n\r\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\r\n\r\n\t\t\t// As another texture upload may have changed pixelStorei\r\n\t\t\t// parameters, make sure they are correct for the dstTexture\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\r\n\r\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\r\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\r\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\r\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\r\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\r\n\r\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\r\n\r\n\t\t\tif ( srcTexture.isDataTexture ) {\r\n\r\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image.data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\r\n\r\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, image.width, image.height, glFormat, image.data );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, glFormat, glType, image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\r\n\r\n\t\t\t// Generate mipmaps only when copying level 0\r\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\r\n\r\n\t\t\t// support previous signature with source box first\r\n\t\t\tif ( srcTexture.isTexture !== true ) {\r\n\r\n\t\t\t\t// @deprecated, r165\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\r\n\r\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\r\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\r\n\t\t\t\tsrcTexture = arguments[ 2 ];\r\n\t\t\t\tdstTexture = arguments[ 3 ];\r\n\t\t\t\tlevel = arguments[ 4 ] || 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet width, height, depth, minX, minY, minZ;\r\n\t\t\tlet dstX, dstY, dstZ;\r\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\r\n\t\t\tif ( srcRegion !== null ) {\r\n\r\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\r\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\r\n\t\t\t\tdepth = srcRegion.max.z - srcRegion.min.z;\r\n\t\t\t\tminX = srcRegion.min.x;\r\n\t\t\t\tminY = srcRegion.min.y;\r\n\t\t\t\tminZ = srcRegion.min.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\twidth = image.width;\r\n\t\t\t\theight = image.height;\r\n\t\t\t\tdepth = image.depth;\r\n\t\t\t\tminX = 0;\r\n\t\t\t\tminY = 0;\r\n\t\t\t\tminZ = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( dstPosition !== null ) {\r\n\r\n\t\t\t\tdstX = dstPosition.x;\r\n\t\t\t\tdstY = dstPosition.y;\r\n\t\t\t\tdstZ = dstPosition.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdstX = 0;\r\n\t\t\t\tdstY = 0;\r\n\t\t\t\tdstZ = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\r\n\t\t\tconst glType = utils.convert( dstTexture.type );\r\n\t\t\tlet glTarget;\r\n\r\n\t\t\tif ( dstTexture.isData3DTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\r\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\r\n\r\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\r\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\r\n\r\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\r\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\r\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\r\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\r\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\r\n\r\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\r\n\r\n\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\r\n\r\n\t\t\t// Generate mipmaps only when copying level 0\r\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\tthis.initRenderTarget = function ( target ) {\r\n\r\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\ttextures.setupRenderTarget( target );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.initTexture = function ( texture ) {\r\n\r\n\t\t\tif ( texture.isCubeTexture ) {\r\n\r\n\t\t\t\ttextures.setTextureCube( texture, 0 );\r\n\r\n\t\t\t} else if ( texture.isData3DTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture3D( texture, 0 );\r\n\r\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttextures.setTexture2D( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\tthis.resetState = function () {\r\n\r\n\t\t\t_currentActiveCubeFace = 0;\r\n\t\t\t_currentActiveMipmapLevel = 0;\r\n\t\t\t_currentRenderTarget = null;\r\n\r\n\t\t\tstate.reset();\r\n\t\t\tbindingStates.reset();\r\n\r\n\t\t};\r\n\r\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget coordinateSystem() {\r\n\r\n\t\treturn WebGLCoordinateSystem;\r\n\r\n\t}\r\n\r\n\tget outputColorSpace() {\r\n\r\n\t\treturn this._outputColorSpace;\r\n\r\n\t}\r\n\r\n\tset outputColorSpace( colorSpace ) {\r\n\r\n\t\tthis._outputColorSpace = colorSpace;\r\n\r\n\t\tconst gl = this.getContext();\r\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\r\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FogExp2 {\r\n\r\n\tconstructor( color, density = 0.00025 ) {\r\n\r\n\t\tthis.isFogExp2 = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.density = density;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new FogExp2( this.color, this.density );\r\n\r\n\t}\r\n\r\n\ttoJSON( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'FogExp2',\r\n\t\t\tname: this.name,\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tdensity: this.density\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Fog {\r\n\r\n\tconstructor( color, near = 1, far = 1000 ) {\r\n\r\n\t\tthis.isFog = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Fog( this.color, this.near, this.far );\r\n\r\n\t}\r\n\r\n\ttoJSON( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'Fog',\r\n\t\t\tname: this.name,\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tnear: this.near,\r\n\t\t\tfar: this.far\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Scene extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isScene = true;\r\n\r\n\t\tthis.type = 'Scene';\r\n\r\n\t\tthis.background = null;\r\n\t\tthis.environment = null;\r\n\t\tthis.fog = null;\r\n\r\n\t\tthis.backgroundBlurriness = 0;\r\n\t\tthis.backgroundIntensity = 1;\r\n\t\tthis.backgroundRotation = new Euler();\r\n\r\n\t\tthis.environmentIntensity = 1;\r\n\t\tthis.environmentRotation = new Euler();\r\n\r\n\t\tthis.overrideMaterial = null;\r\n\r\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.background !== null ) this.background = source.background.clone();\r\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\r\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\r\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\r\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\r\n\r\n\t\tthis.environmentIntensity = source.environmentIntensity;\r\n\t\tthis.environmentRotation.copy( source.environmentRotation );\r\n\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\r\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\r\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\r\n\r\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\r\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InterleavedBuffer {\r\n\r\n\tconstructor( array, stride ) {\r\n\r\n\t\tthis.isInterleavedBuffer = true;\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis._updateRange = { offset: 0, count: - 1 };\r\n\t\tthis.updateRanges = [];\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t}\r\n\r\n\tonUploadCallback() {}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tget updateRange() {\r\n\r\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\r\n\t\treturn this._updateRange;\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddUpdateRange( start, count ) {\r\n\r\n\t\tthis.updateRanges.push( { start, count } );\r\n\r\n\t}\r\n\r\n\tclearUpdateRanges() {\r\n\r\n\t\tthis.updateRanges.length = 0;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.count = source.count;\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.usage = source.usage;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyAt( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( value, offset = 0 ) {\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( data ) {\r\n\r\n\t\tif ( data.arrayBuffers === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers = {};\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.array.buffer._uuid === undefined ) {\r\n\r\n\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\r\n\r\n\t\t}\r\n\r\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\r\n\r\n\t\tconst ib = new this.constructor( array, this.stride );\r\n\t\tib.setUsage( this.usage );\r\n\r\n\t\treturn ib;\r\n\r\n\t}\r\n\r\n\tonUpload( callback ) {\r\n\r\n\t\tthis.onUploadCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( data ) {\r\n\r\n\t\tif ( data.arrayBuffers === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers = {};\r\n\r\n\t\t}\r\n\r\n\t\t// generate UUID for array buffer if necessary\r\n\r\n\t\tif ( this.array.buffer._uuid === undefined ) {\r\n\r\n\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\treturn {\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tbuffer: this.array.buffer._uuid,\r\n\t\t\ttype: this.array.constructor.name,\r\n\t\t\tstride: this.stride\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$6 = /*@__PURE__*/ new Vector3();\r\n\r\nclass InterleavedBufferAttribute {\r\n\r\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\r\n\r\n\t\tthis.isInterleavedBufferAttribute = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\r\n\t\tthis.normalized = normalized;\r\n\r\n\t}\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.count;\r\n\r\n\t}\r\n\r\n\tget array() {\r\n\r\n\t\treturn this.data.array;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tthis.data.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$6.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$6.applyMatrix4( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$6.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$6.applyNormalMatrix( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$6.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$6.transformDirection( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index, component ) {\r\n\r\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\r\n\r\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, component, value ) {\r\n\r\n\t\tif ( this.normalized ) value = normalize( value, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( data ) {\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( data.interleavedBuffers === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( data ) {\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\r\n\r\n\t\t\treturn {\r\n\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\tarray: array,\r\n\t\t\t\tnormalized: this.normalized\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// save as true interleaved attribute\r\n\r\n\t\t\tif ( data.interleavedBuffers === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tisInterleavedBufferAttribute: true,\r\n\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\tdata: this.data.uuid,\r\n\t\t\t\toffset: this.offset,\r\n\t\t\t\tnormalized: this.normalized\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SpriteMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSpriteMaterial = true;\r\n\r\n\t\tthis.type = 'SpriteMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _geometry;\r\n\r\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\r\nconst _worldScale = /*@__PURE__*/ new Vector3();\r\nconst _mvPosition = /*@__PURE__*/ new Vector3();\r\n\r\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\r\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\r\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nconst _vA = /*@__PURE__*/ new Vector3();\r\nconst _vB = /*@__PURE__*/ new Vector3();\r\nconst _vC = /*@__PURE__*/ new Vector3();\r\n\r\nconst _uvA = /*@__PURE__*/ new Vector2();\r\nconst _uvB = /*@__PURE__*/ new Vector2();\r\nconst _uvC = /*@__PURE__*/ new Vector2();\r\n\r\nclass Sprite extends Object3D {\r\n\r\n\tconstructor( material = new SpriteMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSprite = true;\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tif ( _geometry === undefined ) {\r\n\r\n\t\t\t_geometry = new BufferGeometry();\r\n\r\n\t\t\tconst float32Array = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\r\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\r\n\t\t\t\t0.5, 0.5, 0, 1, 1,\r\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\r\n\t\t\t] );\r\n\r\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\r\n\r\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\r\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\r\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry = _geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.center = new Vector2( 0.5, 0.5 );\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tif ( raycaster.camera === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\r\n\r\n\t\t}\r\n\r\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\r\n\r\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\r\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\r\n\r\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\r\n\r\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\r\n\r\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\r\n\r\n\t\t}\r\n\r\n\t\tconst rotation = this.material.rotation;\r\n\t\tlet sin, cos;\r\n\r\n\t\tif ( rotation !== 0 ) {\r\n\r\n\t\t\tcos = Math.cos( rotation );\r\n\t\t\tsin = Math.sin( rotation );\r\n\r\n\t\t}\r\n\r\n\t\tconst center = this.center;\r\n\r\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\r\n\t\t_uvA.set( 0, 0 );\r\n\t\t_uvB.set( 1, 0 );\r\n\t\t_uvC.set( 1, 1 );\r\n\r\n\t\t// check first triangle\r\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\r\n\r\n\t\tif ( intersect === null ) {\r\n\r\n\t\t\t// check second triangle\r\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\t\t_uvB.set( 0, 1 );\r\n\r\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\r\n\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\r\n\r\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: _intersectPoint.clone(),\r\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\r\n\r\n\t\tthis.material = source.material;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\r\n\r\n\t// compute position in camera space\r\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\r\n\r\n\t// to check if rotation is not zero\r\n\tif ( sin !== undefined ) {\r\n\r\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\r\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\r\n\r\n\t} else {\r\n\r\n\t\t_rotatedPosition.copy( _alignedPosition );\r\n\r\n\t}\r\n\r\n\r\n\tvertexPosition.copy( mvPosition );\r\n\tvertexPosition.x += _rotatedPosition.x;\r\n\tvertexPosition.y += _rotatedPosition.y;\r\n\r\n\t// transform to world space\r\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\r\n\r\n}\r\n\r\nconst _v1$2 = /*@__PURE__*/ new Vector3();\r\nconst _v2$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass LOD extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._currentLevel = 0;\r\n\r\n\t\tthis.type = 'LOD';\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tisLOD: {\r\n\t\t\t\tvalue: true,\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.autoUpdate = true;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source, false );\r\n\r\n\t\tconst levels = source.levels;\r\n\r\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst level = levels[ i ];\r\n\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\r\n\r\n\t\t}\r\n\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\r\n\r\n\t\tdistance = Math.abs( distance );\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tlet l;\r\n\r\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\r\n\r\n\t\tthis.add( object );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetCurrentLevel() {\r\n\r\n\t\treturn this._currentLevel;\r\n\r\n\t}\r\n\r\n\r\n\r\n\tgetObjectForDistance( distance ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 0 ) {\r\n\r\n\t\t\tlet i, l;\r\n\r\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet levelDistance = levels[ i ].distance;\r\n\r\n\t\t\t\tif ( levels[ i ].object.visible ) {\r\n\r\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( distance < levelDistance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn levels[ i - 1 ].object;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 0 ) {\r\n\r\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\r\n\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( camera ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tlet i, l;\r\n\r\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet levelDistance = levels[ i ].distance;\r\n\r\n\t\t\t\tif ( levels[ i ].object.visible ) {\r\n\r\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( distance >= levelDistance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentLevel = i - 1;\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\r\n\r\n\t\tdata.object.levels = [];\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst level = levels[ i ];\r\n\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance,\r\n\t\t\t\thysteresis: level.hysteresis\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _basePosition = /*@__PURE__*/ new Vector3();\r\n\r\nconst _skinIndex = /*@__PURE__*/ new Vector4();\r\nconst _skinWeight = /*@__PURE__*/ new Vector4();\r\n\r\nconst _vector3 = /*@__PURE__*/ new Vector3();\r\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\r\nconst _vertex = /*@__PURE__*/ new Vector3();\r\n\r\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\r\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\r\nconst _ray$2 = /*@__PURE__*/ new Ray();\r\n\r\nclass SkinnedMesh extends Mesh {\r\n\r\n\tconstructor( geometry, material ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isSkinnedMesh = true;\r\n\r\n\t\tthis.type = 'SkinnedMesh';\r\n\r\n\t\tthis.bindMode = AttachedBindMode;\r\n\t\tthis.bindMatrix = new Matrix4();\r\n\t\tthis.bindMatrixInverse = new Matrix4();\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\tthis.getVertexPosition( i, _vertex );\r\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.makeEmpty();\r\n\r\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\tthis.getVertexPosition( i, _vertex );\r\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.bindMode = source.bindMode;\r\n\t\tthis.bindMatrix.copy( source.bindMatrix );\r\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\r\n\r\n\t\tthis.skeleton = source.skeleton;\r\n\r\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\r\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst material = this.material;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere in world space\r\n\r\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\r\n\r\n\t\t_sphere$4.copy( this.boundingSphere );\r\n\t\t_sphere$4.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\r\n\r\n\t\t// convert ray to local space of skinned mesh\r\n\r\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\r\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\r\n\r\n\t\t// test with bounding box in local space\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// test for intersections with geometry\r\n\r\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\r\n\r\n\t}\r\n\r\n\tgetVertexPosition( index, target ) {\r\n\r\n\t\tsuper.getVertexPosition( index, target );\r\n\r\n\t\tthis.applyBoneTransform( index, target );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tbind( skeleton, bindMatrix ) {\r\n\r\n\t\tthis.skeleton = skeleton;\r\n\r\n\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t}\r\n\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\r\n\r\n\t}\r\n\r\n\tpose() {\r\n\r\n\t\tthis.skeleton.pose();\r\n\r\n\t}\r\n\r\n\tnormalizeSkinWeights() {\r\n\r\n\t\tconst vector = new Vector4();\r\n\r\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\r\n\r\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\r\n\r\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tvector.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t}\r\n\r\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tif ( this.bindMode === AttachedBindMode ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tapplyBoneTransform( index, vector ) {\r\n\r\n\t\tconst skeleton = this.skeleton;\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\r\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\r\n\r\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\r\n\r\n\t\tvector.set( 0, 0, 0 );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tconst weight = _skinWeight.getComponent( i );\r\n\r\n\t\t\tif ( weight !== 0 ) {\r\n\r\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\r\n\r\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\r\n\r\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Bone extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isBone = true;\r\n\r\n\t\tthis.type = 'Bone';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DataTexture extends Texture {\r\n\r\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\tthis.isDataTexture = true;\r\n\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\r\n\r\nclass Skeleton {\r\n\r\n\tconstructor( bones = [], boneInverses = [] ) {\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\tthis.boneInverses = boneInverses;\r\n\t\tthis.boneMatrices = null;\r\n\r\n\t\tthis.boneTexture = null;\r\n\r\n\t\tthis.init();\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\r\n\t\tconst bones = this.bones;\r\n\t\tconst boneInverses = this.boneInverses;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\r\n\r\n\t\t// calculate inverse bone matrices if necessary\r\n\r\n\t\tif ( boneInverses.length === 0 ) {\r\n\r\n\t\t\tthis.calculateInverses();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case\r\n\r\n\t\t\tif ( bones.length !== boneInverses.length ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\r\n\r\n\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcalculateInverses() {\r\n\r\n\t\tthis.boneInverses.length = 0;\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst inverse = new Matrix4();\r\n\r\n\t\t\tif ( this.bones[ i ] ) {\r\n\r\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpose() {\r\n\r\n\t\t// recover the bind-time world matrices\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst bone = this.bones[ i ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst bone = this.bones[ i ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst bones = this.bones;\r\n\t\tconst boneInverses = this.boneInverses;\r\n\t\tconst boneMatrices = this.boneMatrices;\r\n\t\tconst boneTexture = this.boneTexture;\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\r\n\r\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\r\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boneTexture !== null ) {\r\n\r\n\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Skeleton( this.bones, this.boneInverses );\r\n\r\n\t}\r\n\r\n\tcomputeBoneTexture() {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = Math.ceil( size / 4 ) * 4;\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\r\n\r\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\r\n\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\tthis.boneMatrices = boneMatrices;\r\n\t\tthis.boneTexture = boneTexture;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetBoneByName( name ) {\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst bone = this.bones[ i ];\r\n\r\n\t\t\tif ( bone.name === name ) {\r\n\r\n\t\t\t\treturn bone;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\tdispose( ) {\r\n\r\n\t\tif ( this.boneTexture !== null ) {\r\n\r\n\t\t\tthis.boneTexture.dispose();\r\n\r\n\t\t\tthis.boneTexture = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfromJSON( json, bones ) {\r\n\r\n\t\tthis.uuid = json.uuid;\r\n\r\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst uuid = json.bones[ i ];\r\n\t\t\tlet bone = bones[ uuid ];\r\n\r\n\t\t\tif ( bone === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\r\n\t\t\t\tbone = new Bone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.bones.push( bone );\r\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.init();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Skeleton',\r\n\t\t\t\tgenerator: 'Skeleton.toJSON'\r\n\t\t\t},\r\n\t\t\tbones: [],\r\n\t\t\tboneInverses: []\r\n\t\t};\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\r\n\t\tconst bones = this.bones;\r\n\t\tconst boneInverses = this.boneInverses;\r\n\r\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst bone = bones[ i ];\r\n\t\t\tdata.bones.push( bone.uuid );\r\n\r\n\t\t\tconst boneInverse = boneInverses[ i ];\r\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InstancedBufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\r\n\r\n\t\tsuper( array, itemSize, normalized );\r\n\r\n\t\tthis.isInstancedBufferAttribute = true;\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\r\n\r\n\t\tdata.isInstancedBufferAttribute = true;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nconst _instanceIntersects = [];\r\n\r\nconst _box3 = /*@__PURE__*/ new Box3();\r\nconst _identity = /*@__PURE__*/ new Matrix4();\r\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\r\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\r\n\r\nclass InstancedMesh extends Mesh {\r\n\r\n\tconstructor( geometry, material, count ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isInstancedMesh = true;\r\n\r\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\r\n\t\tthis.instanceColor = null;\r\n\t\tthis.morphTexture = null;\r\n\r\n\t\tthis.count = count;\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.setMatrixAt( i, _identity );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst count = this.count;\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\r\n\r\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\r\n\r\n\t\t\tthis.boundingBox.union( _box3 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst count = this.count;\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere === null ) {\r\n\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.makeEmpty();\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\r\n\r\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\r\n\r\n\t\t\tthis.boundingSphere.union( _sphere$3 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\r\n\r\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\r\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\r\n\r\n\t\tthis.count = source.count;\r\n\r\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\r\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetColorAt( index, color ) {\r\n\r\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\r\n\r\n\t}\r\n\r\n\tgetMatrixAt( index, matrix ) {\r\n\r\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\r\n\r\n\t}\r\n\r\n\tgetMorphAt( index, object ) {\r\n\r\n\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\tconst array = this.morphTexture.source.data.data;\r\n\r\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\r\n\r\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\r\n\r\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n\r\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst raycastTimes = this.count;\r\n\r\n\t\t_mesh$1.geometry = this.geometry;\r\n\t\t_mesh$1.material = this.material;\r\n\r\n\t\tif ( _mesh$1.material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere first\r\n\r\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\r\n\r\n\t\t_sphere$3.copy( this.boundingSphere );\r\n\t\t_sphere$3.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\r\n\r\n\t\t// now test each instance\r\n\r\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\r\n\r\n\t\t\t// calculate the world matrix for each instance\r\n\r\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\r\n\r\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\r\n\r\n\t\t\t// the mesh represents this single instance\r\n\r\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\r\n\r\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\r\n\r\n\t\t\t// process the result of raycast\r\n\r\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\r\n\t\t\t\tintersect.instanceId = instanceId;\r\n\t\t\t\tintersect.object = this;\r\n\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_instanceIntersects.length = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetColorAt( index, color ) {\r\n\r\n\t\tif ( this.instanceColor === null ) {\r\n\r\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\r\n\r\n\t\t}\r\n\r\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\r\n\r\n\t}\r\n\r\n\tsetMatrixAt( index, matrix ) {\r\n\r\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\r\n\r\n\t}\r\n\r\n\tsetMorphAt( index, object ) {\r\n\r\n\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\r\n\r\n\t\tif ( this.morphTexture === null ) {\r\n\r\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\r\n\r\n\t\t}\r\n\r\n\t\tconst array = this.morphTexture.source.data.data;\r\n\r\n\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n\r\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\r\n\t\tconst dataIndex = len * index;\r\n\r\n\t\tarray[ dataIndex ] = morphBaseInfluence;\r\n\r\n\t\tarray.set( objectInfluences, dataIndex + 1 );\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\tif ( this.morphTexture !== null ) {\r\n\r\n\t\t\tthis.morphTexture.dispose();\r\n\t\t\tthis.morphTexture = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction sortOpaque( a, b ) {\r\n\r\n\treturn a.z - b.z;\r\n\r\n}\r\n\r\nfunction sortTransparent( a, b ) {\r\n\r\n\treturn b.z - a.z;\r\n\r\n}\r\n\r\nclass MultiDrawRenderList {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.index = 0;\r\n\t\tthis.pool = [];\r\n\t\tthis.list = [];\r\n\r\n\t}\r\n\r\n\tpush( drawRange, z ) {\r\n\r\n\t\tconst pool = this.pool;\r\n\t\tconst list = this.list;\r\n\t\tif ( this.index >= pool.length ) {\r\n\r\n\t\t\tpool.push( {\r\n\r\n\t\t\t\tstart: - 1,\r\n\t\t\t\tcount: - 1,\r\n\t\t\t\tz: - 1,\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tconst item = pool[ this.index ];\r\n\t\tlist.push( item );\r\n\t\tthis.index ++;\r\n\r\n\t\titem.start = drawRange.start;\r\n\t\titem.count = drawRange.count;\r\n\t\titem.z = z;\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.list.length = 0;\r\n\t\tthis.index = 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst ID_ATTR_NAME = 'batchId';\r\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\r\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\r\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\r\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\r\nconst _frustum = /*@__PURE__*/ new Frustum();\r\nconst _box$1 = /*@__PURE__*/ new Box3();\r\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\r\nconst _vector$5 = /*@__PURE__*/ new Vector3();\r\nconst _forward = /*@__PURE__*/ new Vector3();\r\nconst _temp = /*@__PURE__*/ new Vector3();\r\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\r\nconst _mesh = /*@__PURE__*/ new Mesh();\r\nconst _batchIntersects = [];\r\n\r\n// @TODO: SkinnedMesh support?\r\n// @TODO: geometry.groups support?\r\n// @TODO: geometry.drawRange support?\r\n// @TODO: geometry.morphAttributes support?\r\n// @TODO: Support uniform parameter per geometry\r\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\r\n\r\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\r\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\r\n\r\n\tconst itemSize = target.itemSize;\r\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\r\n\r\n\t\t// use the component getters and setters if the array data cannot\r\n\t\t// be copied directly\r\n\t\tconst vertexCount = src.count;\r\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\r\n\r\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\r\n\r\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// faster copy approach using typed array set function\r\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\r\n\r\n\t}\r\n\r\n\ttarget.needsUpdate = true;\r\n\r\n}\r\n\r\nclass BatchedMesh extends Mesh {\r\n\r\n\tget maxGeometryCount() {\r\n\r\n\t\treturn this._maxGeometryCount;\r\n\r\n\t}\r\n\r\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\r\n\r\n\t\tsuper( new BufferGeometry(), material );\r\n\r\n\t\tthis.isBatchedMesh = true;\r\n\t\tthis.perObjectFrustumCulled = true;\r\n\t\tthis.sortObjects = true;\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\tthis.customSort = null;\r\n\r\n\t\tthis._drawRanges = [];\r\n\t\tthis._reservedRanges = [];\r\n\r\n\t\tthis._visibility = [];\r\n\t\tthis._active = [];\r\n\t\tthis._bounds = [];\r\n\r\n\t\tthis._maxGeometryCount = maxGeometryCount;\r\n\t\tthis._maxVertexCount = maxVertexCount;\r\n\t\tthis._maxIndexCount = maxIndexCount;\r\n\r\n\t\tthis._geometryInitialized = false;\r\n\t\tthis._geometryCount = 0;\r\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\r\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\r\n\t\tthis._multiDrawCount = 0;\r\n\t\tthis._multiDrawInstances = null;\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\t// Local matrix per geometry by using data texture\r\n\t\tthis._matricesTexture = null;\r\n\r\n\t\tthis._initMatricesTexture();\r\n\r\n\t\t// Local color per geometry by using data texture\r\n\t\tthis._colorsTexture = null;\r\n\r\n\t}\r\n\r\n\t_initMatricesTexture() {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\r\n\r\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = Math.ceil( size / 4 ) * 4;\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\r\n\r\n\t\tthis._matricesTexture = matricesTexture;\r\n\r\n\t}\r\n\r\n\t_initColorsTexture() {\r\n\r\n\t\tlet size = Math.sqrt( this._maxGeometryCount );\r\n\t\tsize = Math.ceil( size );\r\n\r\n\t\t// 4 floats per RGBA pixel initialized to white\r\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\r\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\r\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\r\n\r\n\t\tthis._colorsTexture = colorsTexture;\r\n\r\n\t}\r\n\r\n\t_initializeGeometry( reference ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst maxVertexCount = this._maxVertexCount;\r\n\t\tconst maxGeometryCount = this._maxGeometryCount;\r\n\t\tconst maxIndexCount = this._maxIndexCount;\r\n\t\tif ( this._geometryInitialized === false ) {\r\n\r\n\t\t\tfor ( const attributeName in reference.attributes ) {\r\n\r\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\r\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\r\n\r\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\r\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\r\n\r\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( reference.getIndex() !== null ) {\r\n\r\n\t\t\t\tconst indexArray = maxVertexCount > 65536\r\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\r\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\r\n\r\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst idArray = maxGeometryCount > 65536\r\n\t\t\t\t? new Uint32Array( maxVertexCount )\r\n\t\t\t\t: new Uint16Array( maxVertexCount );\r\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\r\n\r\n\t\t\tthis._geometryInitialized = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\r\n\t_validateGeometry( geometry ) {\r\n\r\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\r\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\r\n\r\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\r\n\r\n\t\t}\r\n\r\n\t\t// check to ensure the geometries are using consistent attributes and indices\r\n\t\tconst batchGeometry = this.geometry;\r\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\r\n\r\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\r\n\r\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\r\n\r\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\r\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\r\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\r\n\r\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetCustomSort( func ) {\r\n\r\n\t\tthis.customSort = func;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tconst boundingBox = this.boundingBox;\r\n\t\tconst active = this._active;\r\n\r\n\t\tboundingBox.makeEmpty();\r\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\r\n\r\n\t\t\tif ( active[ i ] === false ) continue;\r\n\r\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix$1 );\r\n\t\t\tboundingBox.union( _box$1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tconst boundingSphere = this.boundingSphere;\r\n\t\tconst active = this._active;\r\n\r\n\t\tboundingSphere.makeEmpty();\r\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\r\n\r\n\t\t\tif ( active[ i ] === false ) continue;\r\n\r\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\r\n\t\t\tboundingSphere.union( _sphere$2 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\r\n\r\n\t\tthis._initializeGeometry( geometry );\r\n\r\n\t\tthis._validateGeometry( geometry );\r\n\r\n\t\t// ensure we're not over geometry\r\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\r\n\r\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\r\n\r\n\t\t}\r\n\r\n\t\t// get the necessary range fo the geometry\r\n\t\tconst reservedRange = {\r\n\t\t\tvertexStart: - 1,\r\n\t\t\tvertexCount: - 1,\r\n\t\t\tindexStart: - 1,\r\n\t\t\tindexCount: - 1,\r\n\t\t};\r\n\r\n\t\tlet lastRange = null;\r\n\t\tconst reservedRanges = this._reservedRanges;\r\n\t\tconst drawRanges = this._drawRanges;\r\n\t\tconst bounds = this._bounds;\r\n\t\tif ( this._geometryCount !== 0 ) {\r\n\r\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( vertexCount === - 1 ) {\r\n\r\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treservedRange.vertexCount = vertexCount;\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastRange === null ) {\r\n\r\n\t\t\treservedRange.vertexStart = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\r\n\r\n\t\t}\r\n\r\n\t\tconst index = geometry.getIndex();\r\n\t\tconst hasIndex = index !== null;\r\n\t\tif ( hasIndex ) {\r\n\r\n\t\t\tif ( indexCount\t=== - 1 ) {\r\n\r\n\t\t\t\treservedRange.indexCount = index.count;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treservedRange.indexCount = indexCount;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lastRange === null ) {\r\n\r\n\t\t\t\treservedRange.indexStart = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\treservedRange.indexStart !== - 1 &&\r\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\r\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\r\n\t\t) {\r\n\r\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst visibility = this._visibility;\r\n\t\tconst active = this._active;\r\n\t\tconst matricesTexture = this._matricesTexture;\r\n\t\tconst matricesArray = this._matricesTexture.image.data;\r\n\t\tconst colorsTexture = this._colorsTexture;\r\n\r\n\t\t// push new visibility states\r\n\t\tvisibility.push( true );\r\n\t\tactive.push( true );\r\n\r\n\t\t// update id\r\n\t\tconst geometryId = this._geometryCount;\r\n\t\tthis._geometryCount ++;\r\n\r\n\t\t// initialize matrix information\r\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\r\n\t\tmatricesTexture.needsUpdate = true;\r\n\r\n\t\t// initialize the color to white\r\n\t\tif ( colorsTexture !== null ) {\r\n\r\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, geometryId * 4 );\r\n\t\t\tcolorsTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// add the reserved range and draw range objects\r\n\t\treservedRanges.push( reservedRange );\r\n\t\tdrawRanges.push( {\r\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\r\n\t\t\tcount: - 1\r\n\t\t} );\r\n\t\tbounds.push( {\r\n\t\t\tboxInitialized: false,\r\n\t\t\tbox: new Box3(),\r\n\r\n\t\t\tsphereInitialized: false,\r\n\t\t\tsphere: new Sphere()\r\n\t\t} );\r\n\r\n\t\t// set the id for the geometry\r\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\r\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\r\n\r\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\r\n\r\n\t\t}\r\n\r\n\t\tidAttribute.needsUpdate = true;\r\n\r\n\t\t// update the geometry\r\n\t\tthis.setGeometryAt( geometryId, geometry );\r\n\r\n\t\treturn geometryId;\r\n\r\n\t}\r\n\r\n\tsetGeometryAt( id, geometry ) {\r\n\r\n\t\tif ( id >= this._geometryCount ) {\r\n\r\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis._validateGeometry( geometry );\r\n\r\n\t\tconst batchGeometry = this.geometry;\r\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\r\n\t\tconst dstIndex = batchGeometry.getIndex();\r\n\t\tconst srcIndex = geometry.getIndex();\r\n\t\tconst reservedRange = this._reservedRanges[ id ];\r\n\t\tif (\r\n\t\t\thasIndex &&\r\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\r\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\r\n\t\t) {\r\n\r\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\r\n\r\n\t\t}\r\n\r\n\t\t// copy geometry over\r\n\t\tconst vertexStart = reservedRange.vertexStart;\r\n\t\tconst vertexCount = reservedRange.vertexCount;\r\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\r\n\r\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// copy attribute data\r\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\r\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\r\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\r\n\r\n\t\t\t// fill the rest in with zeroes\r\n\t\t\tconst itemSize = srcAttribute.itemSize;\r\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst index = vertexStart + i;\r\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\r\n\r\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdstAttribute.needsUpdate = true;\r\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\r\n\r\n\t\t}\r\n\r\n\t\t// copy index\r\n\t\tif ( hasIndex ) {\r\n\r\n\t\t\tconst indexStart = reservedRange.indexStart;\r\n\r\n\t\t\t// copy index data over\r\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\r\n\r\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// fill the rest in with zeroes\r\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\r\n\r\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdstIndex.needsUpdate = true;\r\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\r\n\r\n\t\t}\r\n\r\n\t\t// store the bounding boxes\r\n\t\tconst bound = this._bounds[ id ];\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tbound.box.copy( geometry.boundingBox );\r\n\t\t\tbound.boxInitialized = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbound.boxInitialized = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\r\n\t\t\tbound.sphereInitialized = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbound.sphereInitialized = false;\r\n\r\n\t\t}\r\n\r\n\t\t// set drawRange count\r\n\t\tconst drawRange = this._drawRanges[ id ];\r\n\t\tconst posAttr = geometry.getAttribute( 'position' );\r\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\treturn id;\r\n\r\n\t}\r\n\r\n\tdeleteGeometry( geometryId ) {\r\n\r\n\t\t// Note: User needs to call optimize() afterward to pack the data.\r\n\r\n\t\tconst active = this._active;\r\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tactive[ geometryId ] = false;\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetInstanceCountAt( id ) {\r\n\r\n\t\tif ( this._multiDrawInstances === null ) return null;\r\n\r\n\t\treturn this._multiDrawInstances[ id ];\r\n\r\n\t}\r\n\r\n\tsetInstanceCountAt( id, instanceCount ) {\r\n\r\n\t\tif ( this._multiDrawInstances === null ) {\r\n\r\n\t\t\tthis._multiDrawInstances = new Int32Array( this._maxGeometryCount ).fill( 1 );\r\n\r\n\t\t}\r\n\r\n\t\tthis._multiDrawInstances[ id ] = instanceCount;\r\n\r\n\t\treturn id;\r\n\r\n\t}\r\n\r\n\t// get bounding box and compute it if it doesn't exist\r\n\tgetBoundingBoxAt( id, target ) {\r\n\r\n\t\tconst active = this._active;\r\n\t\tif ( active[ id ] === false ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// compute bounding box\r\n\t\tconst bound = this._bounds[ id ];\r\n\t\tconst box = bound.box;\r\n\t\tconst geometry = this.geometry;\r\n\t\tif ( bound.boxInitialized === false ) {\r\n\r\n\t\t\tbox.makeEmpty();\r\n\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst position = geometry.attributes.position;\r\n\t\t\tconst drawRange = this._drawRanges[ id ];\r\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet iv = i;\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tiv = index.getX( iv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbound.boxInitialized = true;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.copy( box );\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t// get bounding sphere and compute it if it doesn't exist\r\n\tgetBoundingSphereAt( id, target ) {\r\n\r\n\t\tconst active = this._active;\r\n\t\tif ( active[ id ] === false ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// compute bounding sphere\r\n\t\tconst bound = this._bounds[ id ];\r\n\t\tconst sphere = bound.sphere;\r\n\t\tconst geometry = this.geometry;\r\n\t\tif ( bound.sphereInitialized === false ) {\r\n\r\n\t\t\tsphere.makeEmpty();\r\n\r\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\r\n\t\t\t_box$1.getCenter( sphere.center );\r\n\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst position = geometry.attributes.position;\r\n\t\t\tconst drawRange = this._drawRanges[ id ];\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet iv = i;\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tiv = index.getX( iv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\t\tbound.sphereInitialized = true;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.copy( sphere );\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tsetMatrixAt( geometryId, matrix ) {\r\n\r\n\t\t// @TODO: Map geometryId to index of the arrays because\r\n\t\t//        optimize() can make geometryId mismatch the index\r\n\r\n\t\tconst active = this._active;\r\n\t\tconst matricesTexture = this._matricesTexture;\r\n\t\tconst matricesArray = this._matricesTexture.image.data;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\r\n\t\tmatricesTexture.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMatrixAt( geometryId, matrix ) {\r\n\r\n\t\tconst active = this._active;\r\n\t\tconst matricesArray = this._matricesTexture.image.data;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\r\n\r\n\t}\r\n\r\n\tsetColorAt( geometryId, color ) {\r\n\r\n\t\tif ( this._colorsTexture === null ) {\r\n\r\n\t\t\tthis._initColorsTexture();\r\n\r\n\t\t}\r\n\r\n\t\t// @TODO: Map geometryId to index of the arrays because\r\n\t\t//        optimize() can make geometryId mismatch the index\r\n\r\n\t\tconst active = this._active;\r\n\t\tconst colorsTexture = this._colorsTexture;\r\n\t\tconst colorsArray = this._colorsTexture.image.data;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tcolor.toArray( colorsArray, geometryId * 4 );\r\n\t\tcolorsTexture.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetColorAt( geometryId, color ) {\r\n\r\n\t\tconst active = this._active;\r\n\t\tconst colorsArray = this._colorsTexture.image.data;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn color.fromArray( colorsArray, geometryId * 4 );\r\n\r\n\t}\r\n\r\n\tsetVisibleAt( geometryId, value ) {\r\n\r\n\t\tconst visibility = this._visibility;\r\n\t\tconst active = this._active;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\r\n\t\t// if the geometry is out of range, not active, or visibility state\r\n\t\t// does not change then return early\r\n\t\tif (\r\n\t\t\tgeometryId >= geometryCount ||\r\n\t\t\tactive[ geometryId ] === false ||\r\n\t\t\tvisibility[ geometryId ] === value\r\n\t\t) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvisibility[ geometryId ] = value;\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetVisibleAt( geometryId ) {\r\n\r\n\t\tconst visibility = this._visibility;\r\n\t\tconst active = this._active;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\r\n\t\t// return early if the geometry is out of range or not active\r\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn visibility[ geometryId ];\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst visibility = this._visibility;\r\n\t\tconst active = this._active;\r\n\t\tconst drawRanges = this._drawRanges;\r\n\t\tconst geometryCount = this._geometryCount;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst batchGeometry = this.geometry;\r\n\r\n\t\t// iterate over each geometry\r\n\t\t_mesh.material = this.material;\r\n\t\t_mesh.geometry.index = batchGeometry.index;\r\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\r\n\t\tif ( _mesh.geometry.boundingBox === null ) {\r\n\r\n\t\t\t_mesh.geometry.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\r\n\r\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\r\n\r\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst drawRange = drawRanges[ i ];\r\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\r\n\r\n\t\t\t// ge the intersects\r\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\r\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\r\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\r\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\r\n\r\n\t\t\t// add batch id to the intersects\r\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\r\n\r\n\t\t\t\tconst intersect = _batchIntersects[ j ];\r\n\t\t\t\tintersect.object = this;\r\n\t\t\t\tintersect.batchId = i;\r\n\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_batchIntersects.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\t_mesh.material = null;\r\n\t\t_mesh.geometry.index = null;\r\n\t\t_mesh.geometry.attributes = {};\r\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.geometry = source.geometry.clone();\r\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\r\n\t\tthis.sortObjects = source.sortObjects;\r\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\r\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\r\n\r\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\r\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\r\n\r\n\t\tthis._visibility = source._visibility.slice();\r\n\t\tthis._active = source._active.slice();\r\n\t\tthis._bounds = source._bounds.map( bound => ( {\r\n\t\t\tboxInitialized: bound.boxInitialized,\r\n\t\t\tbox: bound.box.clone(),\r\n\r\n\t\t\tsphereInitialized: bound.sphereInitialized,\r\n\t\t\tsphere: bound.sphere.clone()\r\n\t\t} ) );\r\n\r\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\r\n\t\tthis._maxVertexCount = source._maxVertexCount;\r\n\t\tthis._maxIndexCount = source._maxIndexCount;\r\n\r\n\t\tthis._geometryInitialized = source._geometryInitialized;\r\n\t\tthis._geometryCount = source._geometryCount;\r\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\r\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\r\n\r\n\t\tthis._matricesTexture = source._matricesTexture.clone();\r\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\r\n\r\n\t\tif ( this._colorsTexture !== null ) {\r\n\r\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\r\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.slice();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\t// Assuming the geometry is not shared with other meshes\r\n\t\tthis.geometry.dispose();\r\n\r\n\t\tthis._matricesTexture.dispose();\r\n\t\tthis._matricesTexture = null;\r\n\r\n\t\tif ( this._colorsTexture !== null ) {\r\n\r\n\t\t\tthis._colorsTexture.dispose();\r\n\t\t\tthis._colorsTexture = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\r\n\r\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\r\n\t\t// then skip iterating over all items\r\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// the indexed version of the multi draw function requires specifying the start\r\n\t\t// offset in bytes.\r\n\t\tconst index = geometry.getIndex();\r\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\r\n\r\n\t\tconst active = this._active;\r\n\t\tconst visibility = this._visibility;\r\n\t\tconst multiDrawStarts = this._multiDrawStarts;\r\n\t\tconst multiDrawCounts = this._multiDrawCounts;\r\n\t\tconst drawRanges = this._drawRanges;\r\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\r\n\r\n\t\t// prepare the frustum in the local frame\r\n\t\tif ( perObjectFrustumCulled ) {\r\n\r\n\t\t\t_projScreenMatrix$2\r\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\r\n\t\t\t\t.multiply( this.matrixWorld );\r\n\t\t\t_frustum.setFromProjectionMatrix(\r\n\t\t\t\t_projScreenMatrix$2,\r\n\t\t\t\trenderer.coordinateSystem\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tlet count = 0;\r\n\t\tif ( this.sortObjects ) {\r\n\r\n\t\t\t// get the camera position in the local frame\r\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\r\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\r\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _invMatrixWorld );\r\n\r\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\r\n\r\n\t\t\t\t\t// get the bounds in world space\r\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\r\n\r\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\r\n\t\t\t\t\tlet culled = false;\r\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\r\n\r\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! culled ) {\r\n\r\n\t\t\t\t\t\t// get the distance from camera used for sorting\r\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\r\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Sort the draw ranges and prep for rendering\r\n\t\t\tconst list = _renderList.list;\r\n\t\t\tconst customSort = this.customSort;\r\n\t\t\tif ( customSort === null ) {\r\n\r\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcustomSort.call( this, list, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst item = list[ i ];\r\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\r\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\r\n\t\t\t\tcount ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_renderList.reset();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\r\n\r\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\r\n\t\t\t\t\tlet culled = false;\r\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\r\n\r\n\t\t\t\t\t\t// get the bounds in world space\r\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\r\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! culled ) {\r\n\r\n\t\t\t\t\t\tconst range = drawRanges[ i ];\r\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\r\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\r\n\t\t\t\t\t\tcount ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._multiDrawCount = count;\r\n\t\tthis._visibilityChanged = false;\r\n\r\n\t}\r\n\r\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\r\n\r\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineBasicMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineBasicMaterial = true;\r\n\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vStart = /*@__PURE__*/ new Vector3();\r\nconst _vEnd = /*@__PURE__*/ new Vector3();\r\n\r\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\r\nconst _ray$1 = /*@__PURE__*/ new Ray();\r\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\r\n\r\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\r\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\r\n\r\nclass Line extends Object3D {\r\n\r\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLine = true;\r\n\r\n\t\tthis.type = 'Line';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcomputeLineDistances() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\t// we assume non-indexed geometry\r\n\r\n\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\tconst lineDistances = [ 0 ];\r\n\r\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\r\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst threshold = raycaster.params.Line.threshold;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere$1.copy( geometry.boundingSphere );\r\n\t\t_sphere$1.applyMatrix4( matrixWorld );\r\n\t\t_sphere$1.radius += threshold;\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\r\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\r\n\r\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\r\n\t\tconst step = this.isLineSegments ? 2 : 1;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\r\n\r\n\t\t\t\tconst a = index.getX( i );\r\n\t\t\t\tconst b = index.getX( i + 1 );\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isLineLoop ) {\r\n\r\n\t\t\t\tconst a = index.getX( end - 1 );\r\n\t\t\t\tconst b = index.getX( start );\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isLineLoop ) {\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\r\n\r\n\tconst positionAttribute = object.geometry.attributes.position;\r\n\r\n\t_vStart.fromBufferAttribute( positionAttribute, a );\r\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\r\n\r\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\r\n\r\n\tif ( distSq > thresholdSq ) return;\r\n\r\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\r\n\r\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\treturn {\r\n\r\n\t\tdistance: distance,\r\n\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t// point: raycaster.ray.at( distance ),\r\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\r\n\t\tindex: a,\r\n\t\tface: null,\r\n\t\tfaceIndex: null,\r\n\t\tobject: object\r\n\r\n\t};\r\n\r\n}\r\n\r\nconst _start = /*@__PURE__*/ new Vector3();\r\nconst _end = /*@__PURE__*/ new Vector3();\r\n\r\nclass LineSegments extends Line {\r\n\r\n\tconstructor( geometry, material ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isLineSegments = true;\r\n\r\n\t\tthis.type = 'LineSegments';\r\n\r\n\t}\r\n\r\n\tcomputeLineDistances() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\t// we assume non-indexed geometry\r\n\r\n\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\tconst lineDistances = [];\r\n\r\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\r\n\r\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\r\n\r\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineLoop extends Line {\r\n\r\n\tconstructor( geometry, material ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isLineLoop = true;\r\n\r\n\t\tthis.type = 'LineLoop';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PointsMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPointsMaterial = true;\r\n\r\n\t\tthis.type = 'PointsMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _ray = /*@__PURE__*/ new Ray();\r\nconst _sphere = /*@__PURE__*/ new Sphere();\r\nconst _position$2 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Points extends Object3D {\r\n\r\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPoints = true;\r\n\r\n\t\tthis.type = 'Points';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst threshold = raycaster.params.Points.threshold;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere.copy( geometry.boundingSphere );\r\n\t\t_sphere.applyMatrix4( matrixWorld );\r\n\t\t_sphere.radius += threshold;\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\r\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\r\n\r\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst a = index.getX( i );\r\n\r\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\r\n\r\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\r\n\r\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\r\n\r\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\r\n\r\n\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\tconst intersectPoint = new Vector3();\r\n\r\n\t\t_ray.closestPointToPoint( point, intersectPoint );\r\n\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\tpoint: intersectPoint,\r\n\t\t\tindex: index,\r\n\t\t\tface: null,\r\n\t\t\tobject: object\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass VideoTexture extends Texture {\r\n\r\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isVideoTexture = true;\r\n\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tfunction updateVideo() {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'requestVideoFrameCallback' in video ) {\r\n\r\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.image ).copy( this );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst video = this.image;\r\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\r\n\r\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FramebufferTexture extends Texture {\r\n\r\n\tconstructor( width, height ) {\r\n\r\n\t\tsuper( { width, height } );\r\n\r\n\t\tthis.isFramebufferTexture = true;\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CompressedTexture extends Texture {\r\n\r\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\tthis.isCompressedTexture = true;\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CompressedArrayTexture extends CompressedTexture {\r\n\r\n\tconstructor( mipmaps, width, height, depth, format, type ) {\r\n\r\n\t\tsuper( mipmaps, width, height, format, type );\r\n\r\n\t\tthis.isCompressedArrayTexture = true;\r\n\t\tthis.image.depth = depth;\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.layerUpdates = new Set();\r\n\r\n\t}\r\n\r\n\taddLayerUpdates( layerIndex ) {\r\n\r\n\t\tthis.layerUpdates.add( layerIndex );\r\n\r\n\t}\r\n\r\n\tclearLayerUpdates() {\r\n\r\n\t\tthis.layerUpdates.clear();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CompressedCubeTexture extends CompressedTexture {\r\n\r\n\tconstructor( images, format, type ) {\r\n\r\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\r\n\r\n\t\tthis.isCompressedCubeTexture = true;\r\n\t\tthis.isCubeTexture = true;\r\n\r\n\t\tthis.image = images;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CanvasTexture extends Texture {\r\n\r\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isCanvasTexture = true;\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Extensible curve object.\r\n *\r\n * Some common of curve methods:\r\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following curves inherit from THREE.Curve:\r\n *\r\n * -- 2D curves --\r\n * THREE.ArcCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.EllipseCurve\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.SplineCurve\r\n *\r\n * -- 3D curves --\r\n * THREE.CatmullRomCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath.\r\n *\r\n **/\r\n\r\nclass Curve {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'Curve';\r\n\r\n\t\tthis.arcLengthDivisions = 200;\r\n\r\n\t}\r\n\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\r\n\tgetPoint( /* t, optionalTarget */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\tconst t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t, optionalTarget );\r\n\r\n\t}\r\n\r\n\t// Get sequence of points using getPoint( t )\r\n\r\n\tgetPoints( divisions = 5 ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\t// Get sequence of points using getPointAt( u )\r\n\r\n\tgetSpacedPoints( divisions = 5 ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\t// Get total curve arc length\r\n\r\n\tgetLength() {\r\n\r\n\t\tconst lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t}\r\n\r\n\t// Get list of cumulative segment lengths\r\n\r\n\tgetLengths( divisions = this.arcLengthDivisions ) {\r\n\r\n\t\tif ( this.cacheArcLengths &&\r\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\r\n\t\t\t! this.needsUpdate ) {\r\n\r\n\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tconst cache = [];\r\n\t\tlet current, last = this.getPoint( 0 );\r\n\t\tlet sum = 0;\r\n\r\n\t\tcache.push( 0 );\r\n\r\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\tcurrent = this.getPoint( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\r\n\t}\r\n\r\n\tupdateArcLengths() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\r\n\t}\r\n\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\tgetUtoTmapping( u, distance ) {\r\n\r\n\t\tconst arcLengths = this.getLengths();\r\n\r\n\t\tlet i = 0;\r\n\t\tconst il = arcLengths.length;\r\n\r\n\t\tlet targetArcLength; // The targeted u distance value to get\r\n\r\n\t\tif ( distance ) {\r\n\r\n\t\t\ttargetArcLength = distance;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\tlet low = 0, high = il - 1, comparison;\r\n\r\n\t\twhile ( low <= high ) {\r\n\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t// DONE\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ti = high;\r\n\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\treturn i / ( il - 1 );\r\n\r\n\t\t}\r\n\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\tconst lengthBefore = arcLengths[ i ];\r\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\tconst segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t// add that fractional amount to t\r\n\r\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\r\n\tgetTangent( t, optionalTarget ) {\r\n\r\n\t\tconst delta = 0.0001;\r\n\t\tlet t1 = t - delta;\r\n\t\tlet t2 = t + delta;\r\n\r\n\t\t// Capping in case of danger\r\n\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\tconst pt1 = this.getPoint( t1 );\r\n\t\tconst pt2 = this.getPoint( t2 );\r\n\r\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\r\n\r\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\r\n\r\n\t\treturn tangent;\r\n\r\n\t}\r\n\r\n\tgetTangentAt( u, optionalTarget ) {\r\n\r\n\t\tconst t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t, optionalTarget );\r\n\r\n\t}\r\n\r\n\tcomputeFrenetFrames( segments, closed ) {\r\n\r\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\tconst tangents = [];\r\n\t\tconst normals = [];\r\n\t\tconst binormals = [];\r\n\r\n\t\tconst vec = new Vector3();\r\n\t\tconst mat = new Matrix4();\r\n\r\n\t\t// compute the tangent vectors for each segment on the curve\r\n\r\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tconst u = i / segments;\r\n\r\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\r\n\r\n\t\t}\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new Vector3();\r\n\t\tbinormals[ 0 ] = new Vector3();\r\n\t\tlet min = Number.MAX_VALUE;\r\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\r\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\r\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= min ) {\r\n\r\n\t\t\tmin = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= min ) {\r\n\r\n\t\t\tmin = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= min ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\t\tvec.normalize();\r\n\r\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\t\tif ( closed === true ) {\r\n\r\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\r\n\t\t\ttheta /= segments;\r\n\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\r\n\r\n\t\t\t\ttheta = - theta;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttangents: tangents,\r\n\t\t\tnormals: normals,\r\n\t\t\tbinormals: binormals\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Curve',\r\n\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\tdata.type = this.type;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass EllipseCurve extends Curve {\r\n\r\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isEllipseCurve = true;\r\n\r\n\t\tthis.type = 'EllipseCurve';\r\n\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\r\n\t\tthis.aClockwise = aClockwise;\r\n\r\n\t\tthis.aRotation = aRotation;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst twoPi = Math.PI * 2;\r\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n\r\n\t\t// ensures that deltaAngle is 0 .. 2 PI\r\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n\r\n\t\tif ( deltaAngle < Number.EPSILON ) {\r\n\r\n\t\t\tif ( samePoints ) {\r\n\r\n\t\t\t\tdeltaAngle = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aClockwise === true && ! samePoints ) {\r\n\r\n\t\t\tif ( deltaAngle === twoPi ) {\r\n\r\n\t\t\t\tdeltaAngle = - twoPi;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\r\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\t\tconst cos = Math.cos( this.aRotation );\r\n\t\t\tconst sin = Math.sin( this.aRotation );\r\n\r\n\t\t\tconst tx = x - this.aX;\r\n\t\t\tconst ty = y - this.aY;\r\n\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\r\n\t\t}\r\n\r\n\t\treturn point.set( x, y );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.aX = source.aX;\r\n\t\tthis.aY = source.aY;\r\n\r\n\t\tthis.xRadius = source.xRadius;\r\n\t\tthis.yRadius = source.yRadius;\r\n\r\n\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\tthis.aEndAngle = source.aEndAngle;\r\n\r\n\t\tthis.aClockwise = source.aClockwise;\r\n\r\n\t\tthis.aRotation = source.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.aX = this.aX;\r\n\t\tdata.aY = this.aY;\r\n\r\n\t\tdata.xRadius = this.xRadius;\r\n\t\tdata.yRadius = this.yRadius;\r\n\r\n\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\tdata.aEndAngle = this.aEndAngle;\r\n\r\n\t\tdata.aClockwise = this.aClockwise;\r\n\r\n\t\tdata.aRotation = this.aRotation;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.aX = json.aX;\r\n\t\tthis.aY = json.aY;\r\n\r\n\t\tthis.xRadius = json.xRadius;\r\n\t\tthis.yRadius = json.yRadius;\r\n\r\n\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\tthis.aEndAngle = json.aEndAngle;\r\n\r\n\t\tthis.aClockwise = json.aClockwise;\r\n\r\n\t\tthis.aRotation = json.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ArcCurve extends EllipseCurve {\r\n\r\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\tthis.isArcCurve = true;\r\n\r\n\t\tthis.type = 'ArcCurve';\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\n\r\n/*\r\nBased on an optimized c++ solution in\r\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n - http://ideone.com/NoEbVM\r\n\r\nThis CubicPoly class could be used for reusing some variables and calculations,\r\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\nwhich can be placed in CurveUtils.\r\n*/\r\n\r\nfunction CubicPoly() {\r\n\r\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tfunction init( x0, x1, t0, t1 ) {\r\n\r\n\t\tc0 = x0;\r\n\t\tc1 = t0;\r\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\r\n\r\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t\t},\r\n\r\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\r\n\t\t\tinit( x1, x2, t1, t2 );\r\n\r\n\t\t},\r\n\r\n\t\tcalc: function ( t ) {\r\n\r\n\t\t\tconst t2 = t * t;\r\n\t\t\tconst t3 = t2 * t;\r\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n//\r\n\r\nconst tmp = /*@__PURE__*/ new Vector3();\r\nconst px = /*@__PURE__*/ new CubicPoly();\r\nconst py = /*@__PURE__*/ new CubicPoly();\r\nconst pz = /*@__PURE__*/ new CubicPoly();\r\n\r\nclass CatmullRomCurve3 extends Curve {\r\n\r\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCatmullRomCurve3 = true;\r\n\r\n\t\tthis.type = 'CatmullRomCurve3';\r\n\r\n\t\tthis.points = points;\r\n\t\tthis.closed = closed;\r\n\t\tthis.curveType = curveType;\r\n\t\tthis.tension = tension;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst points = this.points;\r\n\t\tconst l = points.length;\r\n\r\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\tlet intPoint = Math.floor( p );\r\n\t\tlet weight = p - intPoint;\r\n\r\n\t\tif ( this.closed ) {\r\n\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\r\n\r\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\tintPoint = l - 2;\r\n\t\t\tweight = 1;\r\n\r\n\t\t}\r\n\r\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\r\n\r\n\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate first point\r\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\tp0 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tconst p1 = points[ intPoint % l ];\r\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate last point\r\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\tp3 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\r\n\r\n\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t// safety check for repeated points\r\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t} else if ( this.curveType === 'catmullrom' ) {\r\n\r\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\r\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\r\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\r\n\r\n\t\t}\r\n\r\n\t\tpoint.set(\r\n\t\t\tpx.calc( weight ),\r\n\t\t\tpy.calc( weight ),\r\n\t\t\tpz.calc( weight )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = source.closed;\r\n\t\tthis.curveType = source.curveType;\r\n\t\tthis.tension = source.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\tdata.closed = this.closed;\r\n\t\tdata.curveType = this.curveType;\r\n\t\tdata.tension = this.tension;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = json.closed;\r\n\t\tthis.curveType = json.curveType;\r\n\t\tthis.tension = json.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Bezier Curves formulas obtained from\r\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n */\r\n\r\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\r\n\r\n\tconst v0 = ( p2 - p0 ) * 0.5;\r\n\tconst v1 = ( p3 - p1 ) * 0.5;\r\n\tconst t2 = t * t;\r\n\tconst t3 = t * t2;\r\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n}\r\n\r\n//\r\n\r\nfunction QuadraticBezierP0( t, p ) {\r\n\r\n\tconst k = 1 - t;\r\n\treturn k * k * p;\r\n\r\n}\r\n\r\nfunction QuadraticBezierP1( t, p ) {\r\n\r\n\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n}\r\n\r\nfunction QuadraticBezierP2( t, p ) {\r\n\r\n\treturn t * t * p;\r\n\r\n}\r\n\r\nfunction QuadraticBezier( t, p0, p1, p2 ) {\r\n\r\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\r\n\t\tQuadraticBezierP2( t, p2 );\r\n\r\n}\r\n\r\n//\r\n\r\nfunction CubicBezierP0( t, p ) {\r\n\r\n\tconst k = 1 - t;\r\n\treturn k * k * k * p;\r\n\r\n}\r\n\r\nfunction CubicBezierP1( t, p ) {\r\n\r\n\tconst k = 1 - t;\r\n\treturn 3 * k * k * t * p;\r\n\r\n}\r\n\r\nfunction CubicBezierP2( t, p ) {\r\n\r\n\treturn 3 * ( 1 - t ) * t * t * p;\r\n\r\n}\r\n\r\nfunction CubicBezierP3( t, p ) {\r\n\r\n\treturn t * t * t * p;\r\n\r\n}\r\n\r\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\r\n\r\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\r\n\t\tCubicBezierP3( t, p3 );\r\n\r\n}\r\n\r\nclass CubicBezierCurve extends Curve {\r\n\r\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCubicBezierCurve = true;\r\n\r\n\t\tthis.type = 'CubicBezierCurve';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CubicBezierCurve3 extends Curve {\r\n\r\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCubicBezierCurve3 = true;\r\n\r\n\t\tthis.type = 'CubicBezierCurve3';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\r\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineCurve extends Curve {\r\n\r\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineCurve = true;\r\n\r\n\t\tthis.type = 'LineCurve';\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tgetTangent( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\r\n\r\n\t}\r\n\r\n\tgetTangentAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getTangent( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineCurve3 extends Curve {\r\n\r\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineCurve3 = true;\r\n\r\n\t\tthis.type = 'LineCurve3';\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tgetTangent( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\r\n\r\n\t}\r\n\r\n\tgetTangentAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getTangent( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass QuadraticBezierCurve extends Curve {\r\n\r\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isQuadraticBezierCurve = true;\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass QuadraticBezierCurve3 extends Curve {\r\n\r\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isQuadraticBezierCurve3 = true;\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve3';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\r\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SplineCurve extends Curve {\r\n\r\n\tconstructor( points = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSplineCurve = true;\r\n\r\n\t\tthis.type = 'SplineCurve';\r\n\r\n\t\tthis.points = points;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst points = this.points;\r\n\t\tconst p = ( points.length - 1 ) * t;\r\n\r\n\t\tconst intPoint = Math.floor( p );\r\n\t\tconst weight = p - intPoint;\r\n\r\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tconst p1 = points[ intPoint ];\r\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tpoint.set(\r\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\r\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nvar Curves = /*#__PURE__*/Object.freeze({\r\n\t__proto__: null,\r\n\tArcCurve: ArcCurve,\r\n\tCatmullRomCurve3: CatmullRomCurve3,\r\n\tCubicBezierCurve: CubicBezierCurve,\r\n\tCubicBezierCurve3: CubicBezierCurve3,\r\n\tEllipseCurve: EllipseCurve,\r\n\tLineCurve: LineCurve,\r\n\tLineCurve3: LineCurve3,\r\n\tQuadraticBezierCurve: QuadraticBezierCurve,\r\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\tSplineCurve: SplineCurve\r\n});\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nclass CurvePath extends Curve {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CurvePath';\r\n\r\n\t\tthis.curves = [];\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\r\n\t}\r\n\r\n\tadd( curve ) {\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t}\r\n\r\n\tclosePath() {\r\n\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\r\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\r\n\tgetPoint( t, optionalTarget ) {\r\n\r\n\t\tconst d = t * this.getLength();\r\n\t\tconst curveLengths = this.getCurveLengths();\r\n\t\tlet i = 0;\r\n\r\n\t\t// To think about boundaries points.\r\n\r\n\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\tconst diff = curveLengths[ i ] - d;\r\n\t\t\t\tconst curve = this.curves[ i ];\r\n\r\n\t\t\t\tconst segmentLength = curve.getLength();\r\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\r\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t}\r\n\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\r\n\tgetLength() {\r\n\r\n\t\tconst lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t}\r\n\r\n\t// cacheLengths must be recalculated.\r\n\tupdateArcLengths() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.cacheLengths = null;\r\n\t\tthis.getCurveLengths();\r\n\r\n\t}\r\n\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\tgetCurveLengths() {\r\n\r\n\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\treturn this.cacheLengths;\r\n\r\n\t\t}\r\n\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\r\n\t\tconst lengths = [];\r\n\t\tlet sums = 0;\r\n\r\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheLengths = lengths;\r\n\r\n\t\treturn lengths;\r\n\r\n\t}\r\n\r\n\tgetSpacedPoints( divisions = 40 ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClose ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\tgetPoints( divisions = 12 ) {\r\n\r\n\t\tconst points = [];\r\n\t\tlet last;\r\n\r\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n\r\n\t\t\tconst curve = curves[ i ];\r\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\r\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\r\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\r\n\t\t\t\t\t\t: divisions;\r\n\r\n\t\t\tconst pts = curve.getPoints( resolution );\r\n\r\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\r\n\r\n\t\t\t\tconst point = pts[ j ];\r\n\r\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\tpoints.push( point );\r\n\t\t\t\tlast = point;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.curves = [];\r\n\r\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst curve = source.curves[ i ];\r\n\r\n\t\t\tthis.curves.push( curve.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.autoClose = source.autoClose;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.autoClose = this.autoClose;\r\n\t\tdata.curves = [];\r\n\r\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst curve = this.curves[ i ];\r\n\t\t\tdata.curves.push( curve.toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.autoClose = json.autoClose;\r\n\t\tthis.curves = [];\r\n\r\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst curve = json.curves[ i ];\r\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Path extends CurvePath {\r\n\r\n\tconstructor( points ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'Path';\r\n\r\n\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\tif ( points ) {\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\r\n\r\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmoveTo( x, y ) {\r\n\r\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlineTo( x, y ) {\r\n\r\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.set( x, y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\tconst curve = new QuadraticBezierCurve(\r\n\t\t\tthis.currentPoint.clone(),\r\n\t\t\tnew Vector2( aCPx, aCPy ),\r\n\t\t\tnew Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\tconst curve = new CubicBezierCurve(\r\n\t\t\tthis.currentPoint.clone(),\r\n\t\t\tnew Vector2( aCP1x, aCP1y ),\r\n\t\t\tnew Vector2( aCP2x, aCP2y ),\r\n\t\t\tnew Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsplineThru( pts /*Array of Vector*/ ) {\r\n\r\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\r\n\r\n\t\tconst curve = new SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tconst x0 = this.currentPoint.x;\r\n\t\tconst y0 = this.currentPoint.y;\r\n\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tconst x0 = this.currentPoint.x;\r\n\t\tconst y0 = this.currentPoint.y;\r\n\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\tif ( this.curves.length > 0 ) {\r\n\r\n\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\tconst firstPoint = curve.getPoint( 0 );\r\n\r\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\r\n\r\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tconst lastPoint = curve.getPoint( 1 );\r\n\t\tthis.currentPoint.copy( lastPoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.currentPoint.copy( source.currentPoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.currentPoint.fromArray( json.currentPoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LatheGeometry extends BufferGeometry {\r\n\r\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'LatheGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.floor( segments );\r\n\r\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst uvs = [];\r\n\t\tconst initNormals = [];\r\n\t\tconst normals = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst inverseSegments = 1.0 / segments;\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst curNormal = new Vector3();\r\n\t\tconst prevNormal = new Vector3();\r\n\t\tlet dx = 0;\r\n\t\tlet dy = 0;\r\n\r\n\t\t// pre-compute normals for initial \"meridian\"\r\n\r\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\tswitch ( j ) {\r\n\r\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\r\n\r\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\r\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\r\n\r\n\t\t\t\t\tnormal.x = dy * 1.0;\r\n\t\t\t\t\tnormal.y = - dx;\r\n\t\t\t\t\tnormal.z = dy * 0.0;\r\n\r\n\t\t\t\t\tprevNormal.copy( normal );\r\n\r\n\t\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\r\n\r\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\r\n\r\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\r\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\r\n\r\n\t\t\t\t\tnormal.x = dy * 1.0;\r\n\t\t\t\t\tnormal.y = - dx;\r\n\t\t\t\t\tnormal.z = dy * 0.0;\r\n\r\n\t\t\t\t\tcurNormal.copy( normal );\r\n\r\n\t\t\t\t\tnormal.x += prevNormal.x;\r\n\t\t\t\t\tnormal.y += prevNormal.y;\r\n\t\t\t\t\tnormal.z += prevNormal.z;\r\n\r\n\t\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\tprevNormal.copy( curNormal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices, uvs and normals\r\n\r\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\t\tconst sin = Math.sin( phi );\r\n\t\t\tconst cos = Math.cos( phi );\r\n\r\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\t\tvertex.y = points[ j ].y;\r\n\t\t\t\tvertex.z = points[ j ].x * cos;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = i / segments;\r\n\t\t\t\tuv.y = j / ( points.length - 1 );\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\r\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\r\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\r\n\r\n\t\t\t\tnormals.push( x, y, z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let i = 0; i < segments; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\tconst base = j + i * points.length;\r\n\r\n\t\t\t\tconst a = base;\r\n\t\t\t\tconst b = base + points.length;\r\n\t\t\t\tconst c = base + points.length + 1;\r\n\t\t\t\tconst d = base + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( c, d, b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CapsuleGeometry extends LatheGeometry {\r\n\r\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\r\n\r\n\t\tconst path = new Path();\r\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\r\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\r\n\r\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\r\n\r\n\t\tthis.type = 'CapsuleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tlength: length,\r\n\t\t\tcapSegments: capSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CircleGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CircleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.max( 3, segments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\r\n\t\t// center point\r\n\r\n\t\tvertices.push( 0, 0, 0 );\r\n\t\tnormals.push( 0, 0, 1 );\r\n\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\r\n\r\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\r\n\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CylinderGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CylinderGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tradialSegments = Math.floor( radialSegments );\r\n\t\theightSegments = Math.floor( heightSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet index = 0;\r\n\t\tconst indexArray = [];\r\n\t\tconst halfHeight = height / 2;\r\n\t\tlet groupStart = 0;\r\n\r\n\t\t// generate geometry\r\n\r\n\t\tgenerateTorso();\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction generateTorso() {\r\n\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\t// this will be used to calculate the normal\r\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\t\tconst indexRow = [];\r\n\r\n\t\t\t\tconst v = y / heightSegments;\r\n\r\n\t\t\t\t// calculate the radius of the current row\r\n\r\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t\tconst u = x / radialSegments;\r\n\r\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\r\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\r\n\r\n\t\t\t\t\t// vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t// normal\r\n\r\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\r\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\t// uv\r\n\r\n\t\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\t\t// save index of vertex in respective row\r\n\r\n\t\t\t\t\tindexRow.push( index ++ );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now save vertices of the row in our index array\r\n\r\n\t\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t\t// we use the index array to access the correct indices\r\n\r\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\r\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// update group counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateCap( top ) {\r\n\r\n\t\t\t// save the index of the first center vertex\r\n\t\t\tconst centerIndexStart = index;\r\n\r\n\t\t\tconst uv = new Vector2();\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t\t// first we generate the center vertex data of the cap.\r\n\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// save the index of the last center vertex\r\n\t\t\tconst centerIndexEnd = index;\r\n\r\n\t\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tconst u = x / radialSegments;\r\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\tconst cosTheta = Math.cos( theta );\r\n\t\t\t\tconst sinTheta = Math.sin( theta );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tconst c = centerIndexStart + x;\r\n\t\t\t\tconst i = centerIndexEnd + x;\r\n\r\n\t\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t\t// face top\r\n\r\n\t\t\t\t\tindices.push( i, i + 1, c );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// face bottom\r\n\r\n\t\t\t\t\tindices.push( i + 1, i, c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ConeGeometry extends CylinderGeometry {\r\n\r\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PolyhedronGeometry extends BufferGeometry {\r\n\r\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\t// default buffer data\r\n\r\n\t\tconst vertexBuffer = [];\r\n\t\tconst uvBuffer = [];\r\n\r\n\t\t// the subdivision creates the vertex buffer data\r\n\r\n\t\tsubdivide( detail );\r\n\r\n\t\t// all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\tapplyRadius( radius );\r\n\r\n\t\t// finally, create the uv data\r\n\r\n\t\tgenerateUVs();\r\n\r\n\t\t// build non-indexed geometry\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\r\n\r\n\t\tif ( detail === 0 ) {\r\n\r\n\t\t\tthis.computeVertexNormals(); // flat normals\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.normalizeNormals(); // smooth normals\r\n\r\n\t\t}\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction subdivide( detail ) {\r\n\r\n\t\t\tconst a = new Vector3();\r\n\t\t\tconst b = new Vector3();\r\n\t\t\tconst c = new Vector3();\r\n\r\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\r\n\r\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t// get the vertices of the face\r\n\r\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\r\n\r\n\t\t\t\t// perform subdivision\r\n\r\n\t\t\t\tsubdivideFace( a, b, c, detail );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction subdivideFace( a, b, c, detail ) {\r\n\r\n\t\t\tconst cols = detail + 1;\r\n\r\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\tconst v = [];\r\n\r\n\t\t\t// construct all of the vertices for this subdivision\r\n\r\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\r\n\r\n\t\t\t\tv[ i ] = [];\r\n\r\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\r\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\r\n\r\n\t\t\t\tconst rows = cols - i;\r\n\r\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// construct all of the faces\r\n\r\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\r\n\r\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\t\tconst k = Math.floor( j / 2 );\r\n\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction applyRadius( radius ) {\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\r\n\r\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\r\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\r\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\r\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\r\n\t\t\t\tuvBuffer.push( u, 1 - v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcorrectUVs();\r\n\r\n\t\t\tcorrectSeam();\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctSeam() {\r\n\r\n\t\t\t// handle case when face straddles the seam, see #3269\r\n\r\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\r\n\r\n\t\t\t\t// uv data of a single face\r\n\r\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\r\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\r\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\r\n\r\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\r\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\r\n\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\r\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\r\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushVertex( vertex ) {\r\n\r\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getVertexByIndex( index, vertex ) {\r\n\r\n\t\t\tconst stride = index * 3;\r\n\r\n\t\t\tvertex.x = vertices[ stride + 0 ];\r\n\t\t\tvertex.y = vertices[ stride + 1 ];\r\n\t\t\tvertex.z = vertices[ stride + 2 ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUVs() {\r\n\r\n\t\t\tconst a = new Vector3();\r\n\t\t\tconst b = new Vector3();\r\n\t\t\tconst c = new Vector3();\r\n\r\n\t\t\tconst centroid = new Vector3();\r\n\r\n\t\t\tconst uvA = new Vector2();\r\n\t\t\tconst uvB = new Vector2();\r\n\t\t\tconst uvC = new Vector2();\r\n\r\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\r\n\r\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\r\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\r\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\r\n\r\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\r\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\r\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\r\n\r\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\r\n\r\n\t\t\t\tconst azi = azimuth( centroid );\r\n\r\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\r\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\r\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\r\n\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\t\tfunction azimuth( vector ) {\r\n\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// Angle above the XZ plane.\r\n\r\n\t\tfunction inclination( vector ) {\r\n\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DodecahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tconst r = 1 / t;\r\n\r\n\t\tconst vertices = [\r\n\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\r\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\r\n\t\t\t1, - 1, - 1, 1, - 1, 1,\r\n\t\t\t1, 1, - 1, 1, 1, 1,\r\n\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t0, - r, - t, 0, - r, t,\r\n\t\t\t0, r, - t, 0, r, t,\r\n\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t, 0, - r, t, 0,\r\n\t\t\tr, - t, 0, r, t, 0,\r\n\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t, 0, - r, t, 0, - r,\r\n\t\t\t- t, 0, r, t, 0, r\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\r\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\r\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\r\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\r\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\r\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\r\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\r\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\r\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\r\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\r\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\r\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v0 = /*@__PURE__*/ new Vector3();\r\nconst _v1$1 = /*@__PURE__*/ new Vector3();\r\nconst _normal = /*@__PURE__*/ new Vector3();\r\nconst _triangle = /*@__PURE__*/ new Triangle();\r\n\r\nclass EdgesGeometry extends BufferGeometry {\r\n\r\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'EdgesGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tgeometry: geometry,\r\n\t\t\tthresholdAngle: thresholdAngle\r\n\t\t};\r\n\r\n\t\tif ( geometry !== null ) {\r\n\r\n\t\t\tconst precisionPoints = 4;\r\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\r\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\r\n\r\n\t\t\tconst indexAttr = geometry.getIndex();\r\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\r\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n\r\n\t\t\tconst indexArr = [ 0, 0, 0 ];\r\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\r\n\t\t\tconst hashes = new Array( 3 );\r\n\r\n\t\t\tconst edgeData = {};\r\n\t\t\tconst vertices = [];\r\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\r\n\r\n\t\t\t\tif ( indexAttr ) {\r\n\r\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\r\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\r\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tindexArr[ 0 ] = i;\r\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\r\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst { a, b, c } = _triangle;\r\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\r\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\r\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\r\n\t\t\t\t_triangle.getNormal( _normal );\r\n\r\n\t\t\t\t// create hashes for the edge from the vertices\r\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\r\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\r\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\r\n\r\n\t\t\t\t// skip degenerate triangles\r\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// iterate over every edge\r\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t// get the first and next vertex making up the edge\r\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\r\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\r\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\r\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\r\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\r\n\r\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\r\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\r\n\r\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\r\n\r\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\r\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\r\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\r\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\r\n\r\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\r\n\r\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\r\n\t\t\t\t\t\tedgeData[ hash ] = {\r\n\r\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\r\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\r\n\t\t\t\t\t\t\tnormal: _normal.clone(),\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\r\n\t\t\tfor ( const key in edgeData ) {\r\n\r\n\t\t\t\tif ( edgeData[ key ] ) {\r\n\r\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\r\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\r\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\r\n\r\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\r\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Shape extends Path {\r\n\r\n\tconstructor( points ) {\r\n\r\n\t\tsuper( points );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.type = 'Shape';\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t}\r\n\r\n\tgetPointsHoles( divisions ) {\r\n\r\n\t\tconst holesPts = [];\r\n\r\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t}\r\n\r\n\t\treturn holesPts;\r\n\r\n\t}\r\n\r\n\t// get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\textractPoints( divisions ) {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst hole = source.holes[ i ];\r\n\r\n\t\t\tthis.holes.push( hole.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.holes = [];\r\n\r\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst hole = this.holes[ i ];\r\n\t\t\tdata.holes.push( hole.toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.uuid = json.uuid;\r\n\t\tthis.holes = [];\r\n\r\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst hole = json.holes[ i ];\r\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Port from https://github.com/mapbox/earcut (v2.2.4)\r\n */\r\n\r\nconst Earcut = {\r\n\r\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\r\n\r\n\t\tconst hasHoles = holeIndices && holeIndices.length;\r\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\r\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\r\n\t\tconst triangles = [];\r\n\r\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\r\n\r\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\r\n\r\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\t\tif ( data.length > 80 * dim ) {\r\n\r\n\t\t\tminX = maxX = data[ 0 ];\r\n\t\t\tminY = maxY = data[ 1 ];\r\n\r\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\r\n\r\n\t\t\t\tx = data[ i ];\r\n\t\t\t\ty = data[ i + 1 ];\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\r\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\r\n\r\n\t\t}\r\n\r\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\r\n\r\n\t\treturn triangles;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\nfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n\tlet i, last;\r\n\r\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t} else {\r\n\r\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t}\r\n\r\n\tif ( last && equals( last, last.next ) ) {\r\n\r\n\t\tremoveNode( last );\r\n\t\tlast = last.next;\r\n\r\n\t}\r\n\r\n\treturn last;\r\n\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\nfunction filterPoints( start, end ) {\r\n\r\n\tif ( ! start ) return start;\r\n\tif ( ! end ) end = start;\r\n\r\n\tlet p = start,\r\n\t\tagain;\r\n\tdo {\r\n\r\n\t\tagain = false;\r\n\r\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n\t\t\tremoveNode( p );\r\n\t\t\tp = end = p.prev;\r\n\t\t\tif ( p === p.next ) break;\r\n\t\t\tagain = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t} while ( again || p !== end );\r\n\r\n\treturn end;\r\n\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\r\n\r\n\tif ( ! ear ) return;\r\n\r\n\t// interlink polygon nodes in z-order\r\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\r\n\r\n\tlet stop = ear,\r\n\t\tprev, next;\r\n\r\n\t// iterate through ears, slicing them one by one\r\n\twhile ( ear.prev !== ear.next ) {\r\n\r\n\t\tprev = ear.prev;\r\n\t\tnext = ear.next;\r\n\r\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n\t\t\t// cut off the triangle\r\n\t\t\ttriangles.push( prev.i / dim | 0 );\r\n\t\t\ttriangles.push( ear.i / dim | 0 );\r\n\t\t\ttriangles.push( next.i / dim | 0 );\r\n\r\n\t\t\tremoveNode( ear );\r\n\r\n\t\t\t// skipping the next vertex leads to less sliver triangles\r\n\t\t\tear = next.next;\r\n\t\t\tstop = next.next;\r\n\r\n\t\t\tcontinue;\r\n\r\n\t\t}\r\n\r\n\t\tear = next;\r\n\r\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\r\n\t\tif ( ear === stop ) {\r\n\r\n\t\t\t// try filtering points and slicing again\r\n\t\t\tif ( ! pass ) {\r\n\r\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\r\n\r\n\t\t\t} else if ( pass === 1 ) {\r\n\r\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\r\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\r\n\r\n\t\t\t} else if ( pass === 2 ) {\r\n\r\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\nfunction isEar( ear ) {\r\n\r\n\tconst a = ear.prev,\r\n\t\tb = ear,\r\n\t\tc = ear.next;\r\n\r\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t// now make sure we don't have other points inside the potential ear\r\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n\t// triangle bbox; min & max are calculated like this for speed\r\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\r\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\r\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\r\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\r\n\r\n\tlet p = c.next;\r\n\twhile ( p !== a ) {\r\n\r\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\r\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\tp = p.next;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n\tconst a = ear.prev,\r\n\t\tb = ear,\r\n\t\tc = ear.next;\r\n\r\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n\t// triangle bbox; min & max are calculated like this for speed\r\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\r\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\r\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\r\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\r\n\r\n\t// z-order range for the current triangle bbox;\r\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\r\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\r\n\r\n\tlet p = ear.prevZ,\r\n\t\tn = ear.nextZ;\r\n\r\n\t// look for points inside the triangle in both directions\r\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\r\n\r\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\tp = p.prevZ;\r\n\r\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\r\n\t\tn = n.nextZ;\r\n\r\n\t}\r\n\r\n\t// look for remaining points in decreasing z-order\r\n\twhile ( p && p.z >= minZ ) {\r\n\r\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\tp = p.prevZ;\r\n\r\n\t}\r\n\r\n\t// look for remaining points in increasing z-order\r\n\twhile ( n && n.z <= maxZ ) {\r\n\r\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\r\n\t\tn = n.nextZ;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\nfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n\tlet p = start;\r\n\tdo {\r\n\r\n\t\tconst a = p.prev,\r\n\t\t\tb = p.next.next;\r\n\r\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n\t\t\ttriangles.push( a.i / dim | 0 );\r\n\t\t\ttriangles.push( p.i / dim | 0 );\r\n\t\t\ttriangles.push( b.i / dim | 0 );\r\n\r\n\t\t\t// remove two nodes involved\r\n\t\t\tremoveNode( p );\r\n\t\t\tremoveNode( p.next );\r\n\r\n\t\t\tp = start = b;\r\n\r\n\t\t}\r\n\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== start );\r\n\r\n\treturn filterPoints( p );\r\n\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n\t// look for a valid diagonal that divides the polygon into two\r\n\tlet a = start;\r\n\tdo {\r\n\r\n\t\tlet b = a.next.next;\r\n\t\twhile ( b !== a.prev ) {\r\n\r\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n\t\t\t\t// split the polygon in two by the diagonal\r\n\t\t\t\tlet c = splitPolygon( a, b );\r\n\r\n\t\t\t\t// filter colinear points around the cuts\r\n\t\t\t\ta = filterPoints( a, a.next );\r\n\t\t\t\tc = filterPoints( c, c.next );\r\n\r\n\t\t\t\t// run earcut on each half\r\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\r\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tb = b.next;\r\n\r\n\t\t}\r\n\r\n\t\ta = a.next;\r\n\r\n\t} while ( a !== start );\r\n\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n\tconst queue = [];\r\n\tlet i, len, start, end, list;\r\n\r\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n\t\tstart = holeIndices[ i ] * dim;\r\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n\t\tlist = linkedList( data, start, end, dim, false );\r\n\t\tif ( list === list.next ) list.steiner = true;\r\n\t\tqueue.push( getLeftmost( list ) );\r\n\r\n\t}\r\n\r\n\tqueue.sort( compareX );\r\n\r\n\t// process holes from left to right\r\n\tfor ( i = 0; i < queue.length; i ++ ) {\r\n\r\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\r\n\r\n\t}\r\n\r\n\treturn outerNode;\r\n\r\n}\r\n\r\nfunction compareX( a, b ) {\r\n\r\n\treturn a.x - b.x;\r\n\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and link it\r\nfunction eliminateHole( hole, outerNode ) {\r\n\r\n\tconst bridge = findHoleBridge( hole, outerNode );\r\n\tif ( ! bridge ) {\r\n\r\n\t\treturn outerNode;\r\n\r\n\t}\r\n\r\n\tconst bridgeReverse = splitPolygon( bridge, hole );\r\n\r\n\t// filter collinear points around the cuts\r\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\r\n\treturn filterPoints( bridge, bridge.next );\r\n\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\nfunction findHoleBridge( hole, outerNode ) {\r\n\r\n\tlet p = outerNode,\r\n\t\tqx = - Infinity,\r\n\t\tm;\r\n\r\n\tconst hx = hole.x, hy = hole.y;\r\n\r\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t// segment's endpoint with lesser x will be potential connection point\r\n\tdo {\r\n\r\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\t\t\tif ( x <= hx && x > qx ) {\r\n\r\n\t\t\t\tqx = x;\r\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== outerNode );\r\n\r\n\tif ( ! m ) return null;\r\n\r\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t// if there are no points found, we have a valid connection;\r\n\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\tconst stop = m,\r\n\t\tmx = m.x,\r\n\t\tmy = m.y;\r\n\tlet tanMin = Infinity, tan;\r\n\r\n\tp = m;\r\n\r\n\tdo {\r\n\r\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\r\n\r\n\t\t\t\tm = p;\r\n\t\t\t\ttanMin = tan;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== stop );\r\n\r\n\treturn m;\r\n\r\n}\r\n\r\n// whether sector in vertex m contains sector in vertex p in the same coordinates\r\nfunction sectorContainsSector( m, p ) {\r\n\r\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\r\n\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\nfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n\tlet p = start;\r\n\tdo {\r\n\r\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\r\n\t\tp.prevZ = p.prev;\r\n\t\tp.nextZ = p.next;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== start );\r\n\r\n\tp.prevZ.nextZ = null;\r\n\tp.prevZ = null;\r\n\r\n\tsortLinked( p );\r\n\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\nfunction sortLinked( list ) {\r\n\r\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\r\n\t\tinSize = 1;\r\n\r\n\tdo {\r\n\r\n\t\tp = list;\r\n\t\tlist = null;\r\n\t\ttail = null;\r\n\t\tnumMerges = 0;\r\n\r\n\t\twhile ( p ) {\r\n\r\n\t\t\tnumMerges ++;\r\n\t\t\tq = p;\r\n\t\t\tpSize = 0;\r\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\r\n\r\n\t\t\t\tpSize ++;\r\n\t\t\t\tq = q.nextZ;\r\n\t\t\t\tif ( ! q ) break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tqSize = inSize;\r\n\r\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n\t\t\t\t\te = p;\r\n\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\tpSize --;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\te = q;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tqSize --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( tail ) tail.nextZ = e;\r\n\t\t\t\telse list = e;\r\n\r\n\t\t\t\te.prevZ = tail;\r\n\t\t\t\ttail = e;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = q;\r\n\r\n\t\t}\r\n\r\n\t\ttail.nextZ = null;\r\n\t\tinSize *= 2;\r\n\r\n\t} while ( numMerges > 1 );\r\n\r\n\treturn list;\r\n\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\nfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n\t// coords are transformed into non-negative 15-bit integer range\r\n\tx = ( x - minX ) * invSize | 0;\r\n\ty = ( y - minY ) * invSize | 0;\r\n\r\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\r\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\r\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n\treturn x | ( y << 1 );\r\n\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\nfunction getLeftmost( start ) {\r\n\r\n\tlet p = start,\r\n\t\tleftmost = start;\r\n\tdo {\r\n\r\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== start );\r\n\r\n\treturn leftmost;\r\n\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\r\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\r\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\r\n\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\nfunction isValidDiagonal( a, b ) {\r\n\r\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\r\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\r\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\r\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\r\n\r\n}\r\n\r\n// signed area of a triangle\r\nfunction area( p, q, r ) {\r\n\r\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n}\r\n\r\n// check if two points are equal\r\nfunction equals( p1, p2 ) {\r\n\r\n\treturn p1.x === p2.x && p1.y === p2.y;\r\n\r\n}\r\n\r\n// check if two segments intersect\r\nfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n\tconst o1 = sign( area( p1, q1, p2 ) );\r\n\tconst o2 = sign( area( p1, q1, q2 ) );\r\n\tconst o3 = sign( area( p2, q2, p1 ) );\r\n\tconst o4 = sign( area( p2, q2, q1 ) );\r\n\r\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\r\n\r\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\n// for collinear points p, q, r, check if point q lies on segment pr\r\nfunction onSegment( p, q, r ) {\r\n\r\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\r\n\r\n}\r\n\r\nfunction sign( num ) {\r\n\r\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\r\n\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\nfunction intersectsPolygon( a, b ) {\r\n\r\n\tlet p = a;\r\n\tdo {\r\n\r\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n\t\t\tintersects( p, p.next, a, b ) ) return true;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== a );\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\nfunction locallyInside( a, b ) {\r\n\r\n\treturn area( a.prev, a, a.next ) < 0 ?\r\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\nfunction middleInside( a, b ) {\r\n\r\n\tlet p = a,\r\n\t\tinside = false;\r\n\tconst px = ( a.x + b.x ) / 2,\r\n\t\tpy = ( a.y + b.y ) / 2;\r\n\tdo {\r\n\r\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\r\n\t\t\tinside = ! inside;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== a );\r\n\r\n\treturn inside;\r\n\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\nfunction splitPolygon( a, b ) {\r\n\r\n\tconst a2 = new Node( a.i, a.x, a.y ),\r\n\t\tb2 = new Node( b.i, b.x, b.y ),\r\n\t\tan = a.next,\r\n\t\tbp = b.prev;\r\n\r\n\ta.next = b;\r\n\tb.prev = a;\r\n\r\n\ta2.next = an;\r\n\tan.prev = a2;\r\n\r\n\tb2.next = a2;\r\n\ta2.prev = b2;\r\n\r\n\tbp.next = b2;\r\n\tb2.prev = bp;\r\n\r\n\treturn b2;\r\n\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\nfunction insertNode( i, x, y, last ) {\r\n\r\n\tconst p = new Node( i, x, y );\r\n\r\n\tif ( ! last ) {\r\n\r\n\t\tp.prev = p;\r\n\t\tp.next = p;\r\n\r\n\t} else {\r\n\r\n\t\tp.next = last.next;\r\n\t\tp.prev = last;\r\n\t\tlast.next.prev = p;\r\n\t\tlast.next = p;\r\n\r\n\t}\r\n\r\n\treturn p;\r\n\r\n}\r\n\r\nfunction removeNode( p ) {\r\n\r\n\tp.next.prev = p.prev;\r\n\tp.prev.next = p.next;\r\n\r\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\r\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\r\n\r\n}\r\n\r\nfunction Node( i, x, y ) {\r\n\r\n\t// vertex index in coordinates array\r\n\tthis.i = i;\r\n\r\n\t// vertex coordinates\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\r\n\t// previous and next vertex nodes in a polygon ring\r\n\tthis.prev = null;\r\n\tthis.next = null;\r\n\r\n\t// z-order curve value\r\n\tthis.z = 0;\r\n\r\n\t// previous and next nodes in z-order\r\n\tthis.prevZ = null;\r\n\tthis.nextZ = null;\r\n\r\n\t// indicates whether this is a steiner point\r\n\tthis.steiner = false;\r\n\r\n}\r\n\r\nfunction signedArea( data, start, end, dim ) {\r\n\r\n\tlet sum = 0;\r\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n\t\tj = i;\r\n\r\n\t}\r\n\r\n\treturn sum;\r\n\r\n}\r\n\r\nclass ShapeUtils {\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tstatic area( contour ) {\r\n\r\n\t\tconst n = contour.length;\r\n\t\tlet a = 0.0;\r\n\r\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t}\r\n\r\n\tstatic isClockWise( pts ) {\r\n\r\n\t\treturn ShapeUtils.area( pts ) < 0;\r\n\r\n\t}\r\n\r\n\tstatic triangulateShape( contour, holes ) {\r\n\r\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\t\tconst holeIndices = []; // array of hole indices\r\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\tremoveDupEndPts( contour );\r\n\t\taddContour( vertices, contour );\r\n\r\n\t\t//\r\n\r\n\t\tlet holeIndex = contour.length;\r\n\r\n\t\tholes.forEach( removeDupEndPts );\r\n\r\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\r\n\r\n\t\t\tholeIndices.push( holeIndex );\r\n\t\t\tholeIndex += holes[ i ].length;\r\n\t\t\taddContour( vertices, holes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\r\n\r\n\t\t//\r\n\r\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\r\n\r\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn faces;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction removeDupEndPts( points ) {\r\n\r\n\tconst l = points.length;\r\n\r\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\tpoints.pop();\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction addContour( vertices, contour ) {\r\n\r\n\tfor ( let i = 0; i < contour.length; i ++ ) {\r\n\r\n\t\tvertices.push( contour[ i ].x );\r\n\t\tvertices.push( contour[ i ].y );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  depth: <float>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n *  bevelOffset: <float>, // how far from shape outline does bevel start\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n *\r\n *  UVGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n */\r\n\r\n\r\nclass ExtrudeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst verticesArray = [];\r\n\t\tconst uvArray = [];\r\n\r\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ i ];\r\n\t\t\taddShape( shape );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tconst placeholder = [];\r\n\r\n\t\t\t// options\r\n\r\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\r\n\r\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\r\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\r\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\t\t\tconst extrudePath = options.extrudePath;\r\n\r\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet extrudePts, extrudeByPath = false;\r\n\t\t\tlet splineTube, binormal, normal, position2;\r\n\r\n\t\t\tif ( extrudePath ) {\r\n\r\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\t\t\textrudeByPath = true;\r\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t\t\t// SETUP TNB variables\r\n\r\n\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\r\n\r\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\tnormal = new Vector3();\r\n\t\t\t\tposition2 = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Safeguards if bevels are not enabled\r\n\r\n\t\t\tif ( ! bevelEnabled ) {\r\n\r\n\t\t\t\tbevelSegments = 0;\r\n\t\t\t\tbevelThickness = 0;\r\n\t\t\t\tbevelSize = 0;\r\n\t\t\t\tbevelOffset = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Variables initialization\r\n\r\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tlet vertices = shapePoints.shape;\r\n\t\t\tconst holes = shapePoints.holes;\r\n\r\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\r\n\r\n\t\t\tif ( reverse ) {\r\n\r\n\t\t\t\tvertices = vertices.reverse();\r\n\r\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t\t\t/* Vertices */\r\n\r\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tconst ahole = holes[ h ];\r\n\r\n\t\t\t\tvertices = vertices.concat( ahole );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction scalePt2( pt, vec, size ) {\r\n\r\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\r\n\r\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst vlen = vertices.length, flen = faces.length;\r\n\r\n\r\n\t\t\t// Find directions for point movement\r\n\r\n\r\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t//\r\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\r\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\r\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t\t\t// check for collinear edges\r\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not collinear\r\n\r\n\t\t\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\r\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\r\n\r\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst contourMovements = [];\r\n\r\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst holesMovements = [];\r\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tconst ahole = holes[ h ];\r\n\r\n\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst bs = bevelSize + bevelOffset;\r\n\r\n\t\t\t// Back facing vertices\r\n\r\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Add stepped vertices...\r\n\t\t\t// Including front facing vertices\r\n\r\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Add bevel segments planes\r\n\r\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* Faces */\r\n\r\n\t\t\t// Top and bottom faces\r\n\r\n\t\t\tbuildLidFaces();\r\n\r\n\t\t\t// Sides faces\r\n\r\n\t\t\tbuildSideFaces();\r\n\r\n\r\n\t\t\t/////  Internal functions\r\n\r\n\t\t\tfunction buildLidFaces() {\r\n\r\n\t\t\t\tconst start = verticesArray.length / 3;\r\n\r\n\t\t\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\t\t\tlet layer = 0; // steps + 1\r\n\t\t\t\t\tlet offset = vlen * layer;\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Create faces for the z-sides of the shape\r\n\r\n\t\t\tfunction buildSideFaces() {\r\n\r\n\t\t\t\tconst start = verticesArray.length / 3;\r\n\t\t\t\tlet layeroffset = 0;\r\n\t\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\t\t\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t\t\t//, true\r\n\t\t\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\t\t\tlet i = contour.length;\r\n\r\n\t\t\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\t\t\tconst j = i;\r\n\t\t\t\t\tlet k = i - 1;\r\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\r\n\r\n\t\t\t\t\t\tconst slen1 = vlen * s;\r\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\t\t\tf4( a, b, c, d );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction v( x, y, z ) {\r\n\r\n\t\t\t\tplaceholder.push( x );\r\n\t\t\t\tplaceholder.push( y );\r\n\t\t\t\tplaceholder.push( z );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction f3( a, b, c ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\r\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction f4( a, b, c, d ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( d );\r\n\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\t\t\t\taddVertex( d );\r\n\r\n\r\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addVertex( index ) {\r\n\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction addUV( vector2 ) {\r\n\r\n\t\t\t\tuvArray.push( vector2.x );\r\n\t\t\t\tuvArray.push( vector2.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tconst shapes = this.parameters.shapes;\r\n\t\tconst options = this.parameters.options;\r\n\r\n\t\treturn toJSON$1( shapes, options, data );\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data, shapes ) {\r\n\r\n\t\tconst geometryShapes = [];\r\n\r\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t}\r\n\r\n\t\tconst extrudePath = data.options.extrudePath;\r\n\r\n\t\tif ( extrudePath !== undefined ) {\r\n\r\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\r\n\r\n\t\t}\r\n\r\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\r\n\r\n\t\tconst a_x = vertices[ indexA * 3 ];\r\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\r\n\t\tconst b_x = vertices[ indexB * 3 ];\r\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\r\n\t\tconst c_x = vertices[ indexC * 3 ];\r\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\r\n\r\n\t\treturn [\r\n\t\t\tnew Vector2( a_x, a_y ),\r\n\t\t\tnew Vector2( b_x, b_y ),\r\n\t\t\tnew Vector2( c_x, c_y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tconst a_x = vertices[ indexA * 3 ];\r\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\r\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\r\n\t\tconst b_x = vertices[ indexB * 3 ];\r\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\r\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\r\n\t\tconst c_x = vertices[ indexC * 3 ];\r\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\r\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\r\n\t\tconst d_x = vertices[ indexD * 3 ];\r\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\r\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\r\n\r\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\r\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\r\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\r\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\r\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\r\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\r\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nfunction toJSON$1( shapes, options, data ) {\r\n\r\n\tdata.shapes = [];\r\n\r\n\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t}\r\n\r\n\tdata.options = Object.assign( {}, options );\r\n\r\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\r\n\r\n\treturn data;\r\n\r\n}\r\n\r\nclass IcosahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\t\tconst vertices = [\r\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\r\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\r\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\r\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\r\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\r\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass OctahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\r\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\r\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\r\n\t\t\t1, 3, 4,\t1, 4, 2\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RingGeometry extends BufferGeometry {\r\n\r\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'RingGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthetaSegments = Math.max( 3, thetaSegments );\r\n\t\tphiSegments = Math.max( 1, phiSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// some helper variables\r\n\r\n\t\tlet radius = innerRadius;\r\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\r\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// increase the radius for next row of vertices\r\n\r\n\t\t\tradius += radiusStep;\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\t\tconst segment = i + thetaSegmentLevel;\r\n\r\n\t\t\t\tconst a = segment;\r\n\t\t\t\tconst b = segment + thetaSegments + 1;\r\n\t\t\t\tconst c = segment + thetaSegments + 2;\r\n\t\t\t\tconst d = segment + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ShapeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'ShapeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet groupStart = 0;\r\n\t\tlet groupCount = 0;\r\n\r\n\t\t// allow single and array values for \"shapes\" parameter\r\n\r\n\t\tif ( Array.isArray( shapes ) === false ) {\r\n\r\n\t\t\taddShape( shapes );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\r\n\r\n\t\t\t\taddShape( shapes[ i ] );\r\n\r\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\tgroupCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tconst indexOffset = vertices.length / 3;\r\n\t\t\tconst points = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tlet shapeVertices = points.shape;\r\n\t\t\tconst shapeHoles = points.holes;\r\n\r\n\t\t\t// check direction of vertices\r\n\r\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\r\n\r\n\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\r\n\r\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\r\n\r\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\r\n\r\n\t\t\t// join vertices of inner and outer paths to a single array\r\n\r\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\r\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices, normals, uvs\r\n\r\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst vertex = shapeVertices[ i ];\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst face = faces[ i ];\r\n\r\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\r\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\r\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\r\n\r\n\t\t\t\tindices.push( a, b, c );\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tconst shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON( shapes, data );\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data, shapes ) {\r\n\r\n\t\tconst geometryShapes = [];\r\n\r\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t}\r\n\r\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction toJSON( shapes, data ) {\r\n\r\n\tdata.shapes = [];\r\n\r\n\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n}\r\n\r\nclass SphereGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'SphereGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\r\n\r\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\r\n\r\n\t\tlet index = 0;\r\n\t\tconst grid = [];\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\r\n\r\n\t\t\tconst verticesRow = [];\r\n\r\n\t\t\tconst v = iy / heightSegments;\r\n\r\n\t\t\t// special case for the poles\r\n\r\n\t\t\tlet uOffset = 0;\r\n\r\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\r\n\r\n\t\t\t\tuOffset = 0.5 / widthSegments;\r\n\r\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\r\n\r\n\t\t\t\tuOffset = - 0.5 / widthSegments;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tconst u = ix / widthSegments;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.copy( vertex ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\r\n\r\n\t\t\t\tverticesRow.push( index ++ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgrid.push( verticesRow );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\r\n\r\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\r\n\t\t\t\tconst b = grid[ iy ][ ix ];\r\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\r\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\r\n\r\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\r\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TetrahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TorusGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'TorusGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tradialSegments = Math.floor( radialSegments );\r\n\t\ttubularSegments = Math.floor( tubularSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst center = new Vector3();\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tconst u = i / tubularSegments * arc;\r\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TorusKnotGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\ttubularSegments = Math.floor( tubularSegments );\r\n\t\tradialSegments = Math.floor( radialSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\tconst P1 = new Vector3();\r\n\t\tconst P2 = new Vector3();\r\n\r\n\t\tconst B = new Vector3();\r\n\t\tconst T = new Vector3();\r\n\t\tconst N = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\r\n\r\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t\t// calculate orthonormal basis\r\n\r\n\t\t\tT.subVectors( P2, P1 );\r\n\t\t\tN.addVectors( P2, P1 );\r\n\t\t\tB.crossVectors( T, N );\r\n\t\t\tN.crossVectors( B, T );\r\n\r\n\t\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\r\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\tconst cx = - tube * Math.cos( v );\r\n\t\t\t\tconst cy = tube * Math.sin( v );\r\n\r\n\t\t\t\t// now calculate the final vertex position.\r\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\r\n\r\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// this function calculates the current position on the torus curve\r\n\r\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\t\tconst cu = Math.cos( u );\r\n\t\t\tconst su = Math.sin( u );\r\n\t\t\tconst quOverP = q / p * u;\r\n\t\t\tconst cs = Math.cos( quOverP );\r\n\r\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TubeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'TubeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = frames.tangents;\r\n\t\tthis.normals = frames.normals;\r\n\t\tthis.binormals = frames.binormals;\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\t\tlet P = new Vector3();\r\n\r\n\t\t// buffer\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\t\tconst indices = [];\r\n\r\n\t\t// create buffer data\r\n\r\n\t\tgenerateBufferData();\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction generateBufferData() {\r\n\r\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tgenerateSegment( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t// at the regular position on the given path\r\n\t\t\t//\r\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\r\n\r\n\t\t\t// uvs are generated in a separate function.\r\n\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\tgenerateUVs();\r\n\r\n\t\t\t// finally create faces\r\n\r\n\t\t\tgenerateIndices();\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateSegment( i ) {\r\n\r\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\r\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\r\n\r\n\t\t\t// retrieve corresponding normal and binormal\r\n\r\n\t\t\tconst N = frames.normals[ i ];\r\n\t\t\tconst B = frames.binormals[ i ];\r\n\r\n\t\t\t// generate normals and vertices for the current segment\r\n\r\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\tconst sin = Math.sin( v );\r\n\t\t\t\tconst cos = - Math.cos( v );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\r\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\r\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\r\n\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateIndices() {\r\n\r\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\tuv.y = j / radialSegments;\r\n\r\n\t\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.path = this.parameters.path.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\r\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\r\n\t\treturn new TubeGeometry(\r\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\r\n\t\t\tdata.tubularSegments,\r\n\t\t\tdata.radius,\r\n\t\t\tdata.radialSegments,\r\n\t\t\tdata.closed\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WireframeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( geometry = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'WireframeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tgeometry: geometry\r\n\t\t};\r\n\r\n\t\tif ( geometry !== null ) {\r\n\r\n\t\t\t// buffer\r\n\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst edges = new Set();\r\n\r\n\t\t\t// helper variables\r\n\r\n\t\t\tconst start = new Vector3();\r\n\t\t\tconst end = new Vector3();\r\n\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t// indexed BufferGeometry\r\n\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\t\t\t\tconst indices = geometry.index;\r\n\t\t\t\tlet groups = geometry.groups;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a data structure that contains all edges without duplicates\r\n\r\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\t\tconst group = groups[ o ];\r\n\r\n\t\t\t\t\tconst groupStart = group.start;\r\n\t\t\t\t\tconst groupCount = group.count;\r\n\r\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\r\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\r\n\r\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\r\n\r\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\r\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\r\n\t\t\t\t\t\tconst index1 = 3 * i + j;\r\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\r\n\r\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\r\n\r\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\r\n\r\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\r\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// build geometry\r\n\r\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction isUniqueEdge( start, end, edges ) {\r\n\r\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\r\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\r\n\r\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\r\n\r\n\t\treturn false;\r\n\r\n\t} else {\r\n\r\n\t\tedges.add( hash1 );\r\n\t\tedges.add( hash2 );\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nvar Geometries = /*#__PURE__*/Object.freeze({\r\n\t__proto__: null,\r\n\tBoxGeometry: BoxGeometry,\r\n\tCapsuleGeometry: CapsuleGeometry,\r\n\tCircleGeometry: CircleGeometry,\r\n\tConeGeometry: ConeGeometry,\r\n\tCylinderGeometry: CylinderGeometry,\r\n\tDodecahedronGeometry: DodecahedronGeometry,\r\n\tEdgesGeometry: EdgesGeometry,\r\n\tExtrudeGeometry: ExtrudeGeometry,\r\n\tIcosahedronGeometry: IcosahedronGeometry,\r\n\tLatheGeometry: LatheGeometry,\r\n\tOctahedronGeometry: OctahedronGeometry,\r\n\tPlaneGeometry: PlaneGeometry,\r\n\tPolyhedronGeometry: PolyhedronGeometry,\r\n\tRingGeometry: RingGeometry,\r\n\tShapeGeometry: ShapeGeometry,\r\n\tSphereGeometry: SphereGeometry,\r\n\tTetrahedronGeometry: TetrahedronGeometry,\r\n\tTorusGeometry: TorusGeometry,\r\n\tTorusKnotGeometry: TorusKnotGeometry,\r\n\tTubeGeometry: TubeGeometry,\r\n\tWireframeGeometry: WireframeGeometry\r\n});\r\n\r\nclass ShadowMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isShadowMaterial = true;\r\n\r\n\t\tthis.type = 'ShadowMaterial';\r\n\r\n\t\tthis.color = new Color( 0x000000 );\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RawShaderMaterial extends ShaderMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper( parameters );\r\n\r\n\t\tthis.isRawShaderMaterial = true;\r\n\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshStandardMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshStandardMaterial = true;\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.type = 'MeshStandardMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.roughness = 1.0;\r\n\t\tthis.metalness = 0.0;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.roughnessMap = null;\r\n\r\n\t\tthis.metalnessMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.envMapIntensity = 1.0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.roughness = source.roughness;\r\n\t\tthis.metalness = source.metalness;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\t\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhysicalMaterial = true;\r\n\r\n\t\tthis.defines = {\r\n\r\n\t\t\t'STANDARD': '',\r\n\t\t\t'PHYSICAL': ''\r\n\r\n\t\t};\r\n\r\n\t\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\t\tthis.anisotropyRotation = 0;\r\n\t\tthis.anisotropyMap = null;\r\n\r\n\t\tthis.clearcoatMap = null;\r\n\t\tthis.clearcoatRoughness = 0.0;\r\n\t\tthis.clearcoatRoughnessMap = null;\r\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\r\n\t\tthis.clearcoatNormalMap = null;\r\n\r\n\t\tthis.ior = 1.5;\r\n\r\n\t\tObject.defineProperty( this, 'reflectivity', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( reflectivity ) {\r\n\r\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.iridescenceMap = null;\r\n\t\tthis.iridescenceIOR = 1.3;\r\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\r\n\t\tthis.iridescenceThicknessMap = null;\r\n\r\n\t\tthis.sheenColor = new Color( 0x000000 );\r\n\t\tthis.sheenColorMap = null;\r\n\t\tthis.sheenRoughness = 1.0;\r\n\t\tthis.sheenRoughnessMap = null;\r\n\r\n\t\tthis.transmissionMap = null;\r\n\r\n\t\tthis.thickness = 0;\r\n\t\tthis.thicknessMap = null;\r\n\t\tthis.attenuationDistance = Infinity;\r\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\r\n\r\n\t\tthis.specularIntensity = 1.0;\r\n\t\tthis.specularIntensityMap = null;\r\n\t\tthis.specularColor = new Color( 1, 1, 1 );\r\n\t\tthis.specularColorMap = null;\r\n\r\n\t\tthis._anisotropy = 0;\r\n\t\tthis._clearcoat = 0;\r\n\t\tthis._dispersion = 0;\r\n\t\tthis._iridescence = 0;\r\n\t\tthis._sheen = 0.0;\r\n\t\tthis._transmission = 0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tget anisotropy() {\r\n\r\n\t\treturn this._anisotropy;\r\n\r\n\t}\r\n\r\n\tset anisotropy( value ) {\r\n\r\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._anisotropy = value;\r\n\r\n\t}\r\n\r\n\tget clearcoat() {\r\n\r\n\t\treturn this._clearcoat;\r\n\r\n\t}\r\n\r\n\tset clearcoat( value ) {\r\n\r\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._clearcoat = value;\r\n\r\n\t}\r\n\r\n\tget iridescence() {\r\n\r\n\t\treturn this._iridescence;\r\n\r\n\t}\r\n\r\n\tset iridescence( value ) {\r\n\r\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._iridescence = value;\r\n\r\n\t}\r\n\r\n\tget dispersion() {\r\n\r\n\t\treturn this._dispersion;\r\n\r\n\t}\r\n\r\n\tset dispersion( value ) {\r\n\r\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._dispersion = value;\r\n\r\n\t}\r\n\r\n\tget sheen() {\r\n\r\n\t\treturn this._sheen;\r\n\r\n\t}\r\n\r\n\tset sheen( value ) {\r\n\r\n\t\tif ( this._sheen > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._sheen = value;\r\n\r\n\t}\r\n\r\n\tget transmission() {\r\n\r\n\t\treturn this._transmission;\r\n\r\n\t}\r\n\r\n\tset transmission( value ) {\r\n\r\n\t\tif ( this._transmission > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._transmission = value;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.defines = {\r\n\r\n\t\t\t'STANDARD': '',\r\n\t\t\t'PHYSICAL': ''\r\n\r\n\t\t};\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\r\n\t\tthis.anisotropyMap = source.anisotropyMap;\r\n\r\n\t\tthis.clearcoat = source.clearcoat;\r\n\t\tthis.clearcoatMap = source.clearcoatMap;\r\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\r\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\r\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\r\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\r\n\r\n\t\tthis.dispersion = source.dispersion;\r\n\t\tthis.ior = source.ior;\r\n\r\n\t\tthis.iridescence = source.iridescence;\r\n\t\tthis.iridescenceMap = source.iridescenceMap;\r\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\r\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\r\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\r\n\r\n\t\tthis.sheen = source.sheen;\r\n\t\tthis.sheenColor.copy( source.sheenColor );\r\n\t\tthis.sheenColorMap = source.sheenColorMap;\r\n\t\tthis.sheenRoughness = source.sheenRoughness;\r\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\r\n\r\n\t\tthis.transmission = source.transmission;\r\n\t\tthis.transmissionMap = source.transmissionMap;\r\n\r\n\t\tthis.thickness = source.thickness;\r\n\t\tthis.thicknessMap = source.thicknessMap;\r\n\t\tthis.attenuationDistance = source.attenuationDistance;\r\n\t\tthis.attenuationColor.copy( source.attenuationColor );\r\n\r\n\t\tthis.specularIntensity = source.specularIntensity;\r\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\r\n\t\tthis.specularColor.copy( source.specularColor );\r\n\t\tthis.specularColorMap = source.specularColorMap;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshPhongMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhongMaterial = true;\r\n\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.specular = new Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshToonMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshToonMaterial = true;\r\n\r\n\t\tthis.defines = { 'TOON': '' };\r\n\r\n\t\tthis.type = 'MeshToonMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.gradientMap = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\t\tthis.gradientMap = source.gradientMap;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshNormalMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshNormalMaterial = true;\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshLambertMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshLambertMaterial = true;\r\n\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshMatcapMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshMatcapMaterial = true;\r\n\r\n\t\tthis.defines = { 'MATCAP': '' };\r\n\r\n\t\tthis.type = 'MeshMatcapMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.matcap = null;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.defines = { 'MATCAP': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.matcap = source.matcap;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineDashedMaterial extends LineBasicMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineDashedMaterial = true;\r\n\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// converts an array to a specific type\r\nfunction convertArray( array, type, forceClone ) {\r\n\r\n\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\treturn new type( array ); // create typed array\r\n\r\n\t}\r\n\r\n\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n}\r\n\r\nfunction isTypedArray( object ) {\r\n\r\n\treturn ArrayBuffer.isView( object ) &&\r\n\t\t! ( object instanceof DataView );\r\n\r\n}\r\n\r\n// returns an array by which times and values can be sorted\r\nfunction getKeyframeOrder( times ) {\r\n\r\n\tfunction compareTime( i, j ) {\r\n\r\n\t\treturn times[ i ] - times[ j ];\r\n\r\n\t}\r\n\r\n\tconst n = times.length;\r\n\tconst result = new Array( n );\r\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\tresult.sort( compareTime );\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n// uses the array previously returned by 'getKeyframeOrder' to sort data\r\nfunction sortedArray( values, stride, order ) {\r\n\r\n\tconst nValues = values.length;\r\n\tconst result = new values.constructor( nValues );\r\n\r\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\tconst srcOffset = order[ i ] * stride;\r\n\r\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n// function for parsing AOS keyframe formats\r\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\tlet i = 1, key = jsonKeys[ 0 ];\r\n\r\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t}\r\n\r\n\tif ( key === undefined ) return; // no data\r\n\r\n\tlet value = key[ valuePropertyName ];\r\n\tif ( value === undefined ) return; // no data\r\n\r\n\tif ( Array.isArray( value ) ) {\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\ttimes.push( key.time );\r\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t} while ( key !== undefined );\r\n\r\n\t} else if ( value.toArray !== undefined ) {\r\n\r\n\t\t// ...assume THREE.Math-ish\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\ttimes.push( key.time );\r\n\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t} while ( key !== undefined );\r\n\r\n\t} else {\r\n\r\n\t\t// otherwise push as-is\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\ttimes.push( key.time );\r\n\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t} while ( key !== undefined );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\r\n\r\n\tconst clip = sourceClip.clone();\r\n\r\n\tclip.name = name;\r\n\r\n\tconst tracks = [];\r\n\r\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n\r\n\t\tconst track = clip.tracks[ i ];\r\n\t\tconst valueSize = track.getValueSize();\r\n\r\n\t\tconst times = [];\r\n\t\tconst values = [];\r\n\r\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\r\n\r\n\t\t\tconst frame = track.times[ j ] * fps;\r\n\r\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\r\n\r\n\t\t\ttimes.push( track.times[ j ] );\r\n\r\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\r\n\r\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( times.length === 0 ) continue;\r\n\r\n\t\ttrack.times = convertArray( times, track.times.constructor );\r\n\t\ttrack.values = convertArray( values, track.values.constructor );\r\n\r\n\t\ttracks.push( track );\r\n\r\n\t}\r\n\r\n\tclip.tracks = tracks;\r\n\r\n\t// find minimum .times value across all tracks in the trimmed clip\r\n\r\n\tlet minStartTime = Infinity;\r\n\r\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n\r\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\r\n\r\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// shift all tracks such that clip begins at t=0\r\n\r\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n\r\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\r\n\r\n\t}\r\n\r\n\tclip.resetDuration();\r\n\r\n\treturn clip;\r\n\r\n}\r\n\r\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\r\n\r\n\tif ( fps <= 0 ) fps = 30;\r\n\r\n\tconst numTracks = referenceClip.tracks.length;\r\n\tconst referenceTime = referenceFrame / fps;\r\n\r\n\t// Make each track's values relative to the values at the reference frame\r\n\tfor ( let i = 0; i < numTracks; ++ i ) {\r\n\r\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\r\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\r\n\r\n\t\t// Skip this track if it's non-numeric\r\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\r\n\r\n\t\t// Find the track in the target clip whose name and type matches the reference track\r\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\r\n\r\n\t\t\treturn track.name === referenceTrack.name\r\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\r\n\r\n\t\t} );\r\n\r\n\t\tif ( targetTrack === undefined ) continue;\r\n\r\n\t\tlet referenceOffset = 0;\r\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\r\n\r\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n\r\n\t\t\treferenceOffset = referenceValueSize / 3;\r\n\r\n\t\t}\r\n\r\n\t\tlet targetOffset = 0;\r\n\t\tconst targetValueSize = targetTrack.getValueSize();\r\n\r\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n\r\n\t\t\ttargetOffset = targetValueSize / 3;\r\n\r\n\t\t}\r\n\r\n\t\tconst lastIndex = referenceTrack.times.length - 1;\r\n\t\tlet referenceValue;\r\n\r\n\t\t// Find the value to subtract out of the track\r\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\r\n\r\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\r\n\t\t\tconst startIndex = referenceOffset;\r\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\r\n\r\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\r\n\r\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\r\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\r\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\r\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Interpolate to the reference value\r\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\r\n\t\t\tconst startIndex = referenceOffset;\r\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\tinterpolant.evaluate( referenceTime );\r\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// Conjugate the quaternion\r\n\t\tif ( referenceTrackType === 'quaternion' ) {\r\n\r\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\r\n\t\t\treferenceQuat.toArray( referenceValue );\r\n\r\n\t\t}\r\n\r\n\t\t// Subtract the reference value from all of the track values\r\n\r\n\t\tconst numTimes = targetTrack.times.length;\r\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\r\n\r\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\r\n\r\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\r\n\r\n\t\t\t\t// Multiply the conjugate for quaternion track types\r\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\r\n\t\t\t\t\ttargetTrack.values,\r\n\t\t\t\t\tvalueStart,\r\n\t\t\t\t\treferenceValue,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\ttargetTrack.values,\r\n\t\t\t\t\tvalueStart\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\r\n\r\n\t\t\t\t// Subtract each value for all other numeric track types\r\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\r\n\r\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\r\n\r\n\treturn targetClip;\r\n\r\n}\r\n\r\nconst AnimationUtils = {\r\n\tconvertArray: convertArray,\r\n\tisTypedArray: isTypedArray,\r\n\tgetKeyframeOrder: getKeyframeOrder,\r\n\tsortedArray: sortedArray,\r\n\tflattenJSON: flattenJSON,\r\n\tsubclip: subclip,\r\n\tmakeClipAdditive: makeClipAdditive\r\n};\r\n\r\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n */\r\n\r\nclass Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\r\n\t\tthis.settings = null;\r\n\t\tthis.DefaultSettings_ = {};\r\n\r\n\t}\r\n\r\n\tevaluate( t ) {\r\n\r\n\t\tconst pp = this.parameterPositions;\r\n\t\tlet i1 = this._cachedIndex,\r\n\t\t\tt1 = pp[ i1 ],\r\n\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\tvalidate_interval: {\r\n\r\n\t\t\tseek: {\r\n\r\n\t\t\t\tlet right;\r\n\r\n\t\t\t\tlinear_scan: {\r\n\r\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t//-\r\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\r\n\r\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\r\n\r\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t// binary search\r\n\r\n\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt1 = pp[ i1 ];\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\treturn this.copySampleValue_( 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // seek\r\n\r\n\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t} // validate_interval\r\n\r\n\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t}\r\n\r\n\tgetSettings_() {\r\n\r\n\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t}\r\n\r\n\tcopySampleValue_( index ) {\r\n\r\n\t\t// copies a sample value to the result buffer\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = index * stride;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t// Template methods for derived classes:\r\n\r\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\r\n\r\n\t\tthrow new Error( 'call to abstract method' );\r\n\t\t// implementations shall return this.resultBuffer\r\n\r\n\t}\r\n\r\n\tintervalChanged_( /* i1, t0, t1 */ ) {\r\n\r\n\t\t// empty\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n */\r\n\r\nclass CubicInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t\tthis._weightPrev = - 0;\r\n\t\tthis._offsetPrev = - 0;\r\n\t\tthis._weightNext = - 0;\r\n\t\tthis._offsetNext = - 0;\r\n\r\n\t\tthis.DefaultSettings_ = {\r\n\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tintervalChanged_( i1, t0, t1 ) {\r\n\r\n\t\tconst pp = this.parameterPositions;\r\n\t\tlet iPrev = i1 - 2,\r\n\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\tstride = this.valueSize;\r\n\r\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\tthis._offsetPrev = iPrev * stride;\r\n\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1, t0, t, t1 ) {\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tpp = p * p,\r\n\t\t\tppp = pp * p;\r\n\r\n\t\t// evaluate polynomials\r\n\r\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\r\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\r\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\r\n\t\tconst sN = wN * ppp - wN * pp;\r\n\r\n\t\t// combine data linearly\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LinearInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1, t0, t, t1 ) {\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset1 = i1 * stride,\r\n\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceding\r\n * the parameter.\r\n */\r\n\r\nclass DiscreteInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\r\n\r\n\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass KeyframeTrack {\r\n\r\n\tconstructor( name, times, values, interpolation ) {\r\n\r\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\r\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.times = convertArray( times, this.TimeBufferType );\r\n\t\tthis.values = convertArray( values, this.ValueBufferType );\r\n\r\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\t}\r\n\r\n\t// Serialization (in static context, because of constructor invocation\r\n\t// and automatic invocation of .toJSON):\r\n\r\n\tstatic toJSON( track ) {\r\n\r\n\t\tconst trackType = track.constructor;\r\n\r\n\t\tlet json;\r\n\r\n\t\t// derived classes can define a static toJSON method\r\n\t\tif ( trackType.toJSON !== this.toJSON ) {\r\n\r\n\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\tjson = {\r\n\r\n\t\t\t\t'name': track.name,\r\n\t\t\t\t'times': convertArray( track.times, Array ),\r\n\t\t\t\t'values': convertArray( track.values, Array )\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconst interpolation = track.getInterpolation();\r\n\r\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\treturn json;\r\n\r\n\t}\r\n\r\n\tInterpolantFactoryMethodDiscrete( result ) {\r\n\r\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n\tInterpolantFactoryMethodLinear( result ) {\r\n\r\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n\tInterpolantFactoryMethodSmooth( result ) {\r\n\r\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n\tsetInterpolation( interpolation ) {\r\n\r\n\t\tlet factoryMethod;\r\n\r\n\t\tswitch ( interpolation ) {\r\n\r\n\t\t\tcase InterpolateDiscrete:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase InterpolateLinear:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase InterpolateSmooth:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\tconst message = 'unsupported interpolation for ' +\r\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\r\n\r\n\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetInterpolation() {\r\n\r\n\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\treturn InterpolateSmooth;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetValueSize() {\r\n\r\n\t\treturn this.values.length / this.times.length;\r\n\r\n\t}\r\n\r\n\t// move all keyframes either forwards or backwards in time\r\n\tshift( timeOffset ) {\r\n\r\n\t\tif ( timeOffset !== 0.0 ) {\r\n\r\n\t\t\tconst times = this.times;\r\n\r\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\tscale( timeScale ) {\r\n\r\n\t\tif ( timeScale !== 1.0 ) {\r\n\r\n\t\t\tconst times = this.times;\r\n\r\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\ttrim( startTime, endTime ) {\r\n\r\n\t\tconst times = this.times,\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tlet from = 0,\r\n\t\t\tto = nKeys - 1;\r\n\r\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\r\n\r\n\t\t\t++ from;\r\n\r\n\t\t}\r\n\r\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\r\n\r\n\t\t\t-- to;\r\n\r\n\t\t}\r\n\r\n\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\tif ( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\tif ( from >= to ) {\r\n\r\n\t\t\t\tto = Math.max( to, 1 );\r\n\t\t\t\tfrom = to - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst stride = this.getValueSize();\r\n\t\t\tthis.times = times.slice( from, to );\r\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\tvalidate() {\r\n\r\n\t\tlet valid = true;\r\n\r\n\t\tconst valueSize = this.getValueSize();\r\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tconst times = this.times,\r\n\t\t\tvalues = this.values,\r\n\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tif ( nKeys === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tlet prevTime = null;\r\n\r\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\tconst currTime = times[ i ];\r\n\r\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevTime = currTime;\r\n\r\n\t\t}\r\n\r\n\t\tif ( values !== undefined ) {\r\n\r\n\t\t\tif ( isTypedArray( values ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tconst value = values[ i ];\r\n\r\n\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\r\n\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t}\r\n\r\n\t// removes equivalent sequential keys as common in morph target sequences\r\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\toptimize() {\r\n\r\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\r\n\t\tconst times = this.times.slice(),\r\n\t\t\tvalues = this.values.slice(),\r\n\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\r\n\t\t\tlastIndex = times.length - 1;\r\n\r\n\t\tlet writeIndex = 1;\r\n\r\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\r\n\r\n\t\t\tlet keep = false;\r\n\r\n\t\t\tconst time = times[ i ];\r\n\t\t\tconst timeNext = times[ i + 1 ];\r\n\r\n\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\r\n\r\n\t\t\t\tif ( ! smoothInterpolation ) {\r\n\r\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\r\n\t\t\t\t\tconst offset = i * stride,\r\n\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tconst value = values[ offset + j ];\r\n\r\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tkeep = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// in-place compaction\r\n\r\n\t\t\tif ( keep ) {\r\n\r\n\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\tconst readOffset = i * stride,\r\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// flush last keyframe (compaction looks ahead)\r\n\r\n\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\r\n\r\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++ writeIndex;\r\n\r\n\t\t}\r\n\r\n\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\tthis.times = times.slice( 0, writeIndex );\r\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.times = times;\r\n\t\t\tthis.values = values;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\tconst times = this.times.slice();\r\n\t\tconst values = this.values.slice();\r\n\r\n\t\tconst TypedKeyframeTrack = this.constructor;\r\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\r\n\r\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\t\ttrack.createInterpolant = this.createInterpolant;\r\n\r\n\t\treturn track;\r\n\r\n\t}\r\n\r\n}\r\n\r\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\r\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\r\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\r\n/**\r\n * A Track of Boolean keyframe values.\r\n */\r\nclass BooleanKeyframeTrack extends KeyframeTrack {\r\n\r\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\r\n\tconstructor( name, times, values ) {\r\n\r\n\t\tsuper( name, times, values );\r\n\r\n\t}\r\n\r\n}\r\n\r\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\r\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\r\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n/**\r\n * A Track of keyframe values that represent color.\r\n */\r\nclass ColorKeyframeTrack extends KeyframeTrack {}\r\n\r\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\r\n\r\n/**\r\n * A Track of numeric keyframe values.\r\n */\r\nclass NumberKeyframeTrack extends KeyframeTrack {}\r\n\r\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\r\n\r\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n */\r\n\r\nclass QuaternionLinearInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1, t0, t, t1 ) {\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\tlet offset = i1 * stride;\r\n\r\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A Track of quaternion keyframe values.\r\n */\r\nclass QuaternionKeyframeTrack extends KeyframeTrack {\r\n\r\n\tInterpolantFactoryMethodLinear( result ) {\r\n\r\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n}\r\n\r\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\r\n// ValueBufferType is inherited\r\n// DefaultInterpolation is inherited;\r\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n/**\r\n * A Track that interpolates Strings\r\n */\r\nclass StringKeyframeTrack extends KeyframeTrack {\r\n\r\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\r\n\tconstructor( name, times, values ) {\r\n\r\n\t\tsuper( name, times, values );\r\n\r\n\t}\r\n\r\n}\r\n\r\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\r\nStringKeyframeTrack.prototype.ValueBufferType = Array;\r\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n/**\r\n * A Track of vectored keyframe values.\r\n */\r\nclass VectorKeyframeTrack extends KeyframeTrack {}\r\n\r\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\r\n\r\nclass AnimationClip {\r\n\r\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = duration;\r\n\t\tthis.blendMode = blendMode;\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\r\n\t\t\tthis.resetDuration();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tstatic parse( json ) {\r\n\r\n\t\tconst tracks = [],\r\n\t\t\tjsonTracks = json.tracks,\r\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\r\n\t\tclip.uuid = json.uuid;\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n\tstatic toJSON( clip ) {\r\n\r\n\t\tconst tracks = [],\r\n\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\tconst json = {\r\n\r\n\t\t\t'name': clip.name,\r\n\t\t\t'duration': clip.duration,\r\n\t\t\t'tracks': tracks,\r\n\t\t\t'uuid': clip.uuid,\r\n\t\t\t'blendMode': clip.blendMode\r\n\r\n\t\t};\r\n\r\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\r\n\t}\r\n\r\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\tconst numMorphTargets = morphTargetSequence.length;\r\n\t\tconst tracks = [];\r\n\r\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\tlet times = [];\r\n\t\t\tlet values = [];\r\n\r\n\t\t\ttimes.push(\r\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\ti,\r\n\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\tconst order = getKeyframeOrder( times );\r\n\t\t\ttimes = sortedArray( times, 1, order );\r\n\t\t\tvalues = sortedArray( values, 1, order );\r\n\r\n\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t// last frame as well for perfect loop.\r\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttracks.push(\r\n\t\t\t\tnew NumberKeyframeTrack(\r\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\ttimes, values\r\n\t\t\t\t).scale( 1.0 / fps ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn new this( name, - 1, tracks );\r\n\r\n\t}\r\n\r\n\tstatic findByName( objectOrClipArray, name ) {\r\n\r\n\t\tlet clipArray = objectOrClipArray;\r\n\r\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\tconst o = objectOrClipArray;\r\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\r\n\r\n\t\tconst animationToMorphTargets = {};\r\n\r\n\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t// sort morph target names into animation groups based\r\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst morphTarget = morphTargets[ i ];\r\n\t\t\tconst parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\tconst name = parts[ 1 ];\r\n\r\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\r\n\r\n\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst clips = [];\r\n\r\n\t\tfor ( const name in animationToMorphTargets ) {\r\n\r\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn clips;\r\n\r\n\t}\r\n\r\n\t// parse the animation.hierarchy format\r\n\tstatic parseAnimation( animation, bones ) {\r\n\r\n\t\tif ( ! animation ) {\r\n\r\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t// only return track if there are actually keys.\r\n\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\tconst times = [];\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tconst tracks = [];\r\n\r\n\t\tconst clipName = animation.name || 'default';\r\n\t\tconst fps = animation.fps || 30;\r\n\t\tconst blendMode = animation.blendMode;\r\n\r\n\t\t// automatic length determination in AnimationClip.\r\n\t\tlet duration = animation.length || - 1;\r\n\r\n\t\tconst hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t// skip empty tracks\r\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t// process morph targets\r\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\r\n\r\n\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\tconst morphTargetNames = {};\r\n\r\n\t\t\t\tlet k;\r\n\r\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t// the morphTarget is named.\r\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\tconst times = [];\r\n\t\t\t\t\tconst values = [];\r\n\r\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\r\n\r\n\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tduration = morphTargetNames.length * fps;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n\tresetDuration() {\r\n\r\n\t\tconst tracks = this.tracks;\r\n\t\tlet duration = 0;\r\n\r\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst track = this.tracks[ i ];\r\n\r\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis.duration = duration;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttrim() {\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tvalidate() {\r\n\r\n\t\tlet valid = true;\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tvalid = valid && this.tracks[ i ].validate();\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t}\r\n\r\n\toptimize() {\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\tconst tracks = [];\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\ttracks.push( this.tracks[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.constructor.toJSON( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getTrackTypeForValueTypeName( typeName ) {\r\n\r\n\tswitch ( typeName.toLowerCase() ) {\r\n\r\n\t\tcase 'scalar':\r\n\t\tcase 'double':\r\n\t\tcase 'float':\r\n\t\tcase 'number':\r\n\t\tcase 'integer':\r\n\r\n\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\tcase 'vector':\r\n\t\tcase 'vector2':\r\n\t\tcase 'vector3':\r\n\t\tcase 'vector4':\r\n\r\n\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\tcase 'color':\r\n\r\n\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\tcase 'quaternion':\r\n\r\n\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\tcase 'bool':\r\n\t\tcase 'boolean':\r\n\r\n\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\tcase 'string':\r\n\r\n\t\t\treturn StringKeyframeTrack;\r\n\r\n\t}\r\n\r\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\r\n\r\n}\r\n\r\nfunction parseKeyframeTrack( json ) {\r\n\r\n\tif ( json.type === undefined ) {\r\n\r\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\r\n\r\n\t}\r\n\r\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\r\n\r\n\tif ( json.times === undefined ) {\r\n\r\n\t\tconst times = [], values = [];\r\n\r\n\t\tflattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\tjson.times = times;\r\n\t\tjson.values = values;\r\n\r\n\t}\r\n\r\n\t// derived classes can define a static parse method\r\n\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\treturn trackType.parse( json );\r\n\r\n\t} else {\r\n\r\n\t\t// by default, we assume a constructor compatible with the base\r\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\nclass LoadingManager {\r\n\r\n\tconstructor( onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tlet isLoading = false;\r\n\t\tlet itemsLoaded = 0;\r\n\t\tlet itemsTotal = 0;\r\n\t\tlet urlModifier = undefined;\r\n\t\tconst handlers = [];\r\n\r\n\t\t// Refer to #5689 for the reason why we don't set .onStart\r\n\t\t// in the constructor\r\n\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\r\n\t\tthis.itemStart = function ( url ) {\r\n\r\n\t\t\titemsTotal ++;\r\n\r\n\t\t\tif ( isLoading === false ) {\r\n\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tisLoading = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemEnd = function ( url ) {\r\n\r\n\t\t\titemsLoaded ++;\r\n\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemError = function ( url ) {\r\n\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\t\tscope.onError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.resolveURL = function ( url ) {\r\n\r\n\t\t\tif ( urlModifier ) {\r\n\r\n\t\t\t\treturn urlModifier( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn url;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setURLModifier = function ( transform ) {\r\n\r\n\t\t\turlModifier = transform;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.addHandler = function ( regex, loader ) {\r\n\r\n\t\t\thandlers.push( regex, loader );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.removeHandler = function ( regex ) {\r\n\r\n\t\t\tconst index = handlers.indexOf( regex );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\thandlers.splice( index, 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getHandler = function ( file ) {\r\n\r\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tconst regex = handlers[ i ];\r\n\t\t\t\tconst loader = handlers[ i + 1 ];\r\n\r\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\r\n\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\t\treturn loader;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\r\n\r\nclass Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\tthis.crossOrigin = 'anonymous';\r\n\t\tthis.withCredentials = false;\r\n\t\tthis.path = '';\r\n\t\tthis.resourcePath = '';\r\n\t\tthis.requestHeader = {};\r\n\r\n\t}\r\n\r\n\tload( /* url, onLoad, onProgress, onError */ ) {}\r\n\r\n\tloadAsync( url, onProgress ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tscope.load( url, resolve, onProgress, reject );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tparse( /* data */ ) {}\r\n\r\n\tsetCrossOrigin( crossOrigin ) {\r\n\r\n\t\tthis.crossOrigin = crossOrigin;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetWithCredentials( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetPath( path ) {\r\n\r\n\t\tthis.path = path;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetResourcePath( resourcePath ) {\r\n\r\n\t\tthis.resourcePath = resourcePath;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRequestHeader( requestHeader ) {\r\n\r\n\t\tthis.requestHeader = requestHeader;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\r\n\r\nconst loading = {};\r\n\r\nclass HttpError extends Error {\r\n\r\n\tconstructor( message, response ) {\r\n\r\n\t\tsuper( message );\r\n\t\tthis.response = response;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FileLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( url === undefined ) url = '';\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tthis.manager.itemStart( url );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tthis.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\t// Check if request is duplicate\r\n\r\n\t\tif ( loading[ url ] !== undefined ) {\r\n\r\n\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\tonLoad: onLoad,\r\n\t\t\t\tonProgress: onProgress,\r\n\t\t\t\tonError: onError\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Initialise array for duplicate requests\r\n\t\tloading[ url ] = [];\r\n\r\n\t\tloading[ url ].push( {\r\n\t\t\tonLoad: onLoad,\r\n\t\t\tonProgress: onProgress,\r\n\t\t\tonError: onError,\r\n\t\t} );\r\n\r\n\t\t// create request\r\n\t\tconst req = new Request( url, {\r\n\t\t\theaders: new Headers( this.requestHeader ),\r\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\r\n\t\t\t// An abort controller could be added within a future PR\r\n\t\t} );\r\n\r\n\t\t// record states ( avoid data race )\r\n\t\tconst mimeType = this.mimeType;\r\n\t\tconst responseType = this.responseType;\r\n\r\n\t\t// start the fetch\r\n\t\tfetch( req )\r\n\t\t\t.then( response => {\r\n\r\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\r\n\r\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\t\tif ( response.status === 0 ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\r\n\r\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\r\n\r\n\t\t\t\t\t\treturn response;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst callbacks = loading[ url ];\r\n\t\t\t\t\tconst reader = response.body.getReader();\r\n\r\n\t\t\t\t\t// Nginx needs X-File-Size check\r\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\r\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\r\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\r\n\t\t\t\t\tconst lengthComputable = total !== 0;\r\n\t\t\t\t\tlet loaded = 0;\r\n\r\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\r\n\t\t\t\t\tconst stream = new ReadableStream( {\r\n\t\t\t\t\t\tstart( controller ) {\r\n\r\n\t\t\t\t\t\t\treadData();\r\n\r\n\t\t\t\t\t\t\tfunction readData() {\r\n\r\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( done ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\r\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\r\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\r\n\t\t\t\t\t\t\t\t\t\treadData();\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}, ( e ) => {\r\n\r\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\r\n\r\n\t\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\treturn new Response( stream );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.then( response => {\r\n\r\n\t\t\t\tswitch ( responseType ) {\r\n\r\n\t\t\t\t\tcase 'arraybuffer':\r\n\r\n\t\t\t\t\t\treturn response.arrayBuffer();\r\n\r\n\t\t\t\t\tcase 'blob':\r\n\r\n\t\t\t\t\t\treturn response.blob();\r\n\r\n\t\t\t\t\tcase 'document':\r\n\r\n\t\t\t\t\t\treturn response.text()\r\n\t\t\t\t\t\t\t.then( text => {\r\n\r\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tcase 'json':\r\n\r\n\t\t\t\t\t\treturn response.json();\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( mimeType === undefined ) {\r\n\r\n\t\t\t\t\t\t\treturn response.text();\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// sniff encoding\r\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\r\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\r\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\r\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\r\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.then( data => {\r\n\r\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\r\n\t\t\t\t// error response bodies as proper responses to requests.\r\n\t\t\t\tCache.add( url, data );\r\n\r\n\t\t\t\tconst callbacks = loading[ url ];\r\n\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst callback = callbacks[ i ];\r\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.catch( err => {\r\n\r\n\t\t\t\t// Abort errors and other errors are handled the same\r\n\r\n\t\t\t\tconst callbacks = loading[ url ];\r\n\r\n\t\t\t\tif ( callbacks === undefined ) {\r\n\r\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\r\n\t\t\t\t\tthis.manager.itemError( url );\r\n\t\t\t\t\tthrow err;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst callback = callbacks[ i ];\r\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.manager.itemError( url );\r\n\r\n\t\t\t} )\r\n\t\t\t.finally( () => {\r\n\r\n\t\t\t\tthis.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\tthis.manager.itemStart( url );\r\n\r\n\t}\r\n\r\n\tsetResponseType( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetMimeType( value ) {\r\n\r\n\t\tthis.mimeType = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AnimationLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst animations = [];\r\n\r\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\r\n\r\n\t\t\tanimations.push( clip );\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n *\r\n * Sub classes have to implement the parse() method which will be used in load().\r\n */\r\n\r\nclass CompressedTextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst images = [];\r\n\r\n\t\tconst texture = new CompressedTexture();\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\r\n\t\tlet loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\r\n\r\n\t\t\t\timages[ i ] = {\r\n\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t};\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\ttexture.image = images;\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.image = images;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ImageLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tconst image = createElementNS( 'img' );\r\n\r\n\t\tfunction onImageLoad() {\r\n\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\tCache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onImageError( event ) {\r\n\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}\r\n\r\n\t\tfunction removeEventListeners() {\r\n\r\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'load', onImageLoad, false );\r\n\t\timage.addEventListener( 'error', onImageError, false );\r\n\r\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\r\n\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\t}\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CubeTextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst texture = new CubeTexture();\r\n\t\ttexture.colorSpace = SRGBColorSpace;\r\n\r\n\t\tconst loader = new ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tlet loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded ++;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n *\r\n * Sub classes have to implement the parse() method which will be used in load().\r\n */\r\n\r\nclass DataTextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst texture = new DataTexture();\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tlet texData;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\ttexData = scope.parse( buffer );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\t\t\tonError( error );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( error );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.image !== undefined ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( texData.data !== undefined ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( texData.colorSpace !== undefined ) {\r\n\r\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.flipY !== undefined ) {\r\n\r\n\t\t\t\ttexture.flipY = texData.flipY;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.format !== undefined ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.type !== undefined ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.mipmaps !== undefined ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.mipmapCount === 1 ) {\r\n\r\n\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\r\n\r\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst texture = new Texture();\r\n\r\n\t\tconst loader = new ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Light extends Object3D {\r\n\r\n\tconstructor( color, intensity = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLight = true;\r\n\r\n\t\tthis.type = 'Light';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.intensity = intensity;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\t// Empty here in base class; some subclasses override.\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.intensity = source.intensity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass HemisphereLight extends Light {\r\n\r\n\tconstructor( skyColor, groundColor, intensity ) {\r\n\r\n\t\tsuper( skyColor, intensity );\r\n\r\n\t\tthis.isHemisphereLight = true;\r\n\r\n\t\tthis.type = 'HemisphereLight';\r\n\r\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.groundColor = new Color( groundColor );\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\r\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\r\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass LightShadow {\r\n\r\n\tconstructor( camera ) {\r\n\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.bias = 0;\r\n\t\tthis.normalBias = 0;\r\n\t\tthis.radius = 1;\r\n\t\tthis.blurSamples = 8;\r\n\r\n\t\tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.mapPass = null;\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tthis._frustum = new Frustum();\r\n\t\tthis._frameExtents = new Vector2( 1, 1 );\r\n\r\n\t\tthis._viewportCount = 1;\r\n\r\n\t\tthis._viewports = [\r\n\r\n\t\t\tnew Vector4( 0, 0, 1, 1 )\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tgetViewportCount() {\r\n\r\n\t\treturn this._viewportCount;\r\n\r\n\t}\r\n\r\n\tgetFrustum() {\r\n\r\n\t\treturn this._frustum;\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light ) {\r\n\r\n\t\tconst shadowCamera = this.camera;\r\n\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\r\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\r\n\r\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\tshadowCamera.lookAt( _lookTarget$1 );\r\n\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\r\n\r\n\t\tshadowMatrix.set(\r\n\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t);\r\n\r\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\r\n\r\n\t}\r\n\r\n\tgetViewport( viewportIndex ) {\r\n\r\n\t\treturn this._viewports[ viewportIndex ];\r\n\r\n\t}\r\n\r\n\tgetFrameExtents() {\r\n\r\n\t\treturn this._frameExtents;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tif ( this.map ) {\r\n\r\n\t\t\tthis.map.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.mapPass ) {\r\n\r\n\t\t\tthis.mapPass.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.radius = source.radius;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst object = {};\r\n\r\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\r\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n\t\tobject.camera = this.camera.toJSON( false ).object;\r\n\t\tdelete object.camera.matrix;\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SpotLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n\t\tthis.isSpotLightShadow = true;\r\n\r\n\t\tthis.focus = 1;\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light ) {\r\n\r\n\t\tconst camera = this.camera;\r\n\r\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\r\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\r\n\t\tconst far = light.distance || camera.far;\r\n\r\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\tcamera.fov = fov;\r\n\t\t\tcamera.aspect = aspect;\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t\tsuper.updateMatrices( light );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SpotLight extends Light {\r\n\r\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isSpotLight = true;\r\n\r\n\t\tthis.type = 'SpotLight';\r\n\r\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.angle = angle;\r\n\t\tthis.penumbra = penumbra;\r\n\t\tthis.decay = decay;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.shadow = new SpotLightShadow();\r\n\r\n\t}\r\n\r\n\tget power() {\r\n\r\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\r\n\t\treturn this.intensity * Math.PI;\r\n\r\n\t}\r\n\r\n\tset power( power ) {\r\n\r\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\tthis.intensity = power / Math.PI;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shadow.dispose();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.penumbra = source.penumbra;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.target = source.target.clone();\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\r\nconst _lookTarget = /*@__PURE__*/ new Vector3();\r\n\r\nclass PointLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n\t\tthis.isPointLightShadow = true;\r\n\r\n\t\tthis._frameExtents = new Vector2( 4, 2 );\r\n\r\n\t\tthis._viewportCount = 6;\r\n\r\n\t\tthis._viewports = [\r\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t// following orientation:\r\n\t\t\t//\r\n\t\t\t//  xzXZ\r\n\t\t\t//   y Y\r\n\t\t\t//\r\n\t\t\t// X - Positive x direction\r\n\t\t\t// x - Negative x direction\r\n\t\t\t// Y - Positive y direction\r\n\t\t\t// y - Negative y direction\r\n\t\t\t// Z - Positive z direction\r\n\t\t\t// z - Negative z direction\r\n\r\n\t\t\t// positive X\r\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\r\n\t\t\t// negative X\r\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\r\n\t\t\t// positive Z\r\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\r\n\t\t\t// negative Z\r\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\r\n\t\t\t// positive Y\r\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\r\n\t\t\t// negative Y\r\n\t\t\tnew Vector4( 1, 0, 1, 1 )\r\n\t\t];\r\n\r\n\t\tthis._cubeDirections = [\r\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\r\n\t\tthis._cubeUps = [\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light, viewportIndex = 0 ) {\r\n\r\n\t\tconst camera = this.camera;\r\n\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\tconst far = light.distance || camera.far;\r\n\r\n\t\tif ( far !== camera.far ) {\r\n\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\tcamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t_lookTarget.copy( camera.position );\r\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\r\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\r\n\t\tcamera.lookAt( _lookTarget );\r\n\t\tcamera.updateMatrixWorld();\r\n\r\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PointLight extends Light {\r\n\r\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isPointLight = true;\r\n\r\n\t\tthis.type = 'PointLight';\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.decay = decay;\r\n\r\n\t\tthis.shadow = new PointLightShadow();\r\n\r\n\t}\r\n\r\n\tget power() {\r\n\r\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\r\n\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t}\r\n\r\n\tset power( power ) {\r\n\r\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shadow.dispose();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DirectionalLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n\t\tthis.isDirectionalLightShadow = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DirectionalLight extends Light {\r\n\r\n\tconstructor( color, intensity ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isDirectionalLight = true;\r\n\r\n\t\tthis.type = 'DirectionalLight';\r\n\r\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.shadow = new DirectionalLightShadow();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shadow.dispose();\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.target = source.target.clone();\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AmbientLight extends Light {\r\n\r\n\tconstructor( color, intensity ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isAmbientLight = true;\r\n\r\n\t\tthis.type = 'AmbientLight';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RectAreaLight extends Light {\r\n\r\n\tconstructor( color, intensity, width = 10, height = 10 ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isRectAreaLight = true;\r\n\r\n\t\tthis.type = 'RectAreaLight';\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t}\r\n\r\n\tget power() {\r\n\r\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\r\n\t\treturn this.intensity * this.width * this.height * Math.PI;\r\n\r\n\t}\r\n\r\n\tset power( power ) {\r\n\r\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\r\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.width = this.width;\r\n\t\tdata.object.height = this.height;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Primary reference:\r\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n *\r\n * Secondary reference:\r\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\r\n */\r\n\r\n// 3-band SH defined by 9 coefficients\r\n\r\nclass SphericalHarmonics3 {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.isSphericalHarmonics3 = true;\r\n\r\n\t\tthis.coefficients = [];\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients.push( new Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( coefficients ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tzero() {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// get the radiance in the direction of the normal\r\n\t// target is a Vector3\r\n\tgetAt( normal, target ) {\r\n\r\n\t\t// normal is assumed to be unit length\r\n\r\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t\tconst coeff = this.coefficients;\r\n\r\n\t\t// band 0\r\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\r\n\r\n\t\t// band 1\r\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\r\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\r\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\r\n\r\n\t\t// band 2\r\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\r\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\r\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\r\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\r\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\r\n\t// target is a Vector3\r\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\tgetIrradianceAt( normal, target ) {\r\n\r\n\t\t// normal is assumed to be unit length\r\n\r\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t\tconst coeff = this.coefficients;\r\n\r\n\t\t// band 0\r\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\r\n\r\n\t\t// band 1\r\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\r\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\r\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\r\n\r\n\t\t// band 2\r\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\r\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\r\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\r\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\r\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tadd( sh ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledSH( sh, s ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( s ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerp( sh, alpha ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( sh ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tcopy( sh ) {\r\n\r\n\t\treturn this.set( sh.coefficients );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tconst coefficients = this.coefficients;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst coefficients = this.coefficients;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// evaluate the basis functions\r\n\t// shBasis is an Array[ 9 ]\r\n\tstatic getBasisAt( normal, shBasis ) {\r\n\r\n\t\t// normal is assumed to be unit length\r\n\r\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t\t// band 0\r\n\t\tshBasis[ 0 ] = 0.282095;\r\n\r\n\t\t// band 1\r\n\t\tshBasis[ 1 ] = 0.488603 * y;\r\n\t\tshBasis[ 2 ] = 0.488603 * z;\r\n\t\tshBasis[ 3 ] = 0.488603 * x;\r\n\r\n\t\t// band 2\r\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\r\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\r\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\r\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\r\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LightProbe extends Light {\r\n\r\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\r\n\r\n\t\tsuper( undefined, intensity );\r\n\r\n\t\tthis.isLightProbe = true;\r\n\r\n\t\tthis.sh = sh;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.sh.copy( source.sh );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\t\tthis.sh.fromArray( json.sh );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.sh = this.sh.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MaterialLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst textures = this.textures;\r\n\r\n\t\tfunction getTexture( name ) {\r\n\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\r\n\r\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\r\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\r\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\r\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\r\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\r\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\r\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\r\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\r\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\r\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\r\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\r\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\r\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\r\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\r\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\r\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\r\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\r\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\r\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\r\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\r\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\r\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\r\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\r\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\r\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\r\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\r\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\r\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\r\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\r\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\r\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\r\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\r\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\r\n\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\r\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n\r\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\r\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\r\n\r\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\r\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n\r\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\r\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\r\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\r\n\r\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\r\n\r\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\r\n\r\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\r\n\r\n\t\tif ( json.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\r\n\r\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Shader Material\r\n\r\n\t\tif ( json.uniforms !== undefined ) {\r\n\r\n\t\t\tfor ( const name in json.uniforms ) {\r\n\r\n\t\t\t\tconst uniform = json.uniforms[ name ];\r\n\r\n\t\t\t\tmaterial.uniforms[ name ] = {};\r\n\r\n\t\t\t\tswitch ( uniform.type ) {\r\n\r\n\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm3':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\r\n\r\n\t\tif ( json.extensions !== undefined ) {\r\n\r\n\t\t\tfor ( const key in json.extensions ) {\r\n\r\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\r\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\r\n\r\n\t\t// for PointsMaterial\r\n\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\tlet normalScale = json.normalScale;\r\n\r\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\r\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\r\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\r\n\r\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n\r\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\r\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\r\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\r\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\r\n\r\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\r\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\r\n\r\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\r\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\r\n\r\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\r\n\r\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\r\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\tsetTextures( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic createMaterialFromType( type ) {\r\n\r\n\t\tconst materialLib = {\r\n\t\t\tShadowMaterial,\r\n\t\t\tSpriteMaterial,\r\n\t\t\tRawShaderMaterial,\r\n\t\t\tShaderMaterial,\r\n\t\t\tPointsMaterial,\r\n\t\t\tMeshPhysicalMaterial,\r\n\t\t\tMeshStandardMaterial,\r\n\t\t\tMeshPhongMaterial,\r\n\t\t\tMeshToonMaterial,\r\n\t\t\tMeshNormalMaterial,\r\n\t\t\tMeshLambertMaterial,\r\n\t\t\tMeshDepthMaterial,\r\n\t\t\tMeshDistanceMaterial,\r\n\t\t\tMeshBasicMaterial,\r\n\t\t\tMeshMatcapMaterial,\r\n\t\t\tLineDashedMaterial,\r\n\t\t\tLineBasicMaterial,\r\n\t\t\tMaterial\r\n\t\t};\r\n\r\n\t\treturn new materialLib[ type ]();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LoaderUtils {\r\n\r\n\tstatic decodeText( array ) { // @deprecated, r165\r\n\r\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\r\n\r\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\r\n\r\n\t\t\treturn new TextDecoder().decode( array );\r\n\r\n\t\t}\r\n\r\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\t\tlet s = '';\r\n\r\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t// Implicitly assumes little-endian.\r\n\t\t\ts += String.fromCharCode( array[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\t// merges multi-byte utf-8 characters.\r\n\r\n\t\t\treturn decodeURIComponent( escape( s ) );\r\n\r\n\t\t} catch ( e ) { // see #16358\r\n\r\n\t\t\treturn s;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic extractUrlBase( url ) {\r\n\r\n\t\tconst index = url.lastIndexOf( '/' );\r\n\r\n\t\tif ( index === - 1 ) return './';\r\n\r\n\t\treturn url.slice( 0, index + 1 );\r\n\r\n\t}\r\n\r\n\tstatic resolveURL( url, path ) {\r\n\r\n\t\t// Invalid URL\r\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n\t\t// Host Relative URL\r\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\r\n\r\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\r\n\r\n\t\t}\r\n\r\n\t\t// Absolute URL http://,https://,//\r\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t// Data URI\r\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Blob URL\r\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Relative URL\r\n\t\treturn path + url;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InstancedBufferGeometry extends BufferGeometry {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isInstancedBufferGeometry = true;\r\n\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.instanceCount = Infinity;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.instanceCount = source.instanceCount;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.instanceCount = this.instanceCount;\r\n\r\n\t\tdata.isInstancedBufferGeometry = true;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass BufferGeometryLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst interleavedBufferMap = {};\r\n\t\tconst arrayBufferMap = {};\r\n\r\n\t\tfunction getInterleavedBuffer( json, uuid ) {\r\n\r\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\r\n\r\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\r\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\r\n\r\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\r\n\r\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\r\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\r\n\t\t\tib.uuid = interleavedBuffer.uuid;\r\n\r\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\r\n\r\n\t\t\treturn ib;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getArrayBuffer( json, uuid ) {\r\n\r\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\r\n\r\n\t\t\tconst arrayBuffers = json.arrayBuffers;\r\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\r\n\r\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\r\n\r\n\t\t\tarrayBufferMap[ uuid ] = ab;\r\n\r\n\t\t\treturn ab;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\r\n\r\n\t\tconst index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\r\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst attributes = json.data.attributes;\r\n\r\n\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ key ];\r\n\t\t\tlet bufferAttribute;\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\r\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\r\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\r\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\r\n\r\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\r\n\r\n\t\t}\r\n\r\n\t\tconst morphAttributes = json.data.morphAttributes;\r\n\r\n\t\tif ( morphAttributes ) {\r\n\r\n\t\t\tfor ( const key in morphAttributes ) {\r\n\r\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\r\n\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst attribute = attributeArray[ i ];\r\n\t\t\t\t\tlet bufferAttribute;\r\n\r\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\r\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\r\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\t\t\tarray.push( bufferAttribute );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\r\n\r\n\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\tgeometry.morphTargetsRelative = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tconst center = new Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.name ) geometry.name = json.name;\r\n\t\tif ( json.userData ) geometry.userData = json.userData;\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ObjectLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\tthis.resourcePath = this.resourcePath || path;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tlet json = null;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tif ( onError !== undefined ) onError( error );\r\n\r\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\r\n\r\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.parse( json, onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tasync loadAsync( url, onProgress ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\tthis.resourcePath = this.resourcePath || path;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\r\n\t\tconst text = await loader.loadAsync( url, onProgress );\r\n\r\n\t\tconst json = JSON.parse( text );\r\n\r\n\t\tconst metadata = json.metadata;\r\n\r\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n\r\n\t\t}\r\n\r\n\t\treturn await scope.parseAsync( json );\r\n\r\n\t}\r\n\r\n\tparse( json, onLoad ) {\r\n\r\n\t\tconst animations = this.parseAnimations( json.animations );\r\n\t\tconst shapes = this.parseShapes( json.shapes );\r\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\tconst images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tconst textures = this.parseTextures( json.textures, images );\r\n\t\tconst materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\r\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\r\n\r\n\t\tthis.bindSkeletons( object, skeletons );\r\n\r\n\t\t//\r\n\r\n\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\tlet hasImages = false;\r\n\r\n\t\t\tfor ( const uuid in images ) {\r\n\r\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\t\thasImages = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasImages === false ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n\tasync parseAsync( json ) {\r\n\r\n\t\tconst animations = this.parseAnimations( json.animations );\r\n\t\tconst shapes = this.parseShapes( json.shapes );\r\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\tconst images = await this.parseImagesAsync( json.images );\r\n\r\n\t\tconst textures = this.parseTextures( json.textures, images );\r\n\t\tconst materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\r\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\r\n\r\n\t\tthis.bindSkeletons( object, skeletons );\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n\tparseShapes( json ) {\r\n\r\n\t\tconst shapes = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\r\n\r\n\t\t\t\tshapes[ shape.uuid ] = shape;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tparseSkeletons( json, object ) {\r\n\r\n\t\tconst skeletons = {};\r\n\t\tconst bones = {};\r\n\r\n\t\t// generate bone lookup table\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\r\n\r\n\t\t} );\r\n\r\n\t\t// create skeletons\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\r\n\r\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn skeletons;\r\n\r\n\t}\r\n\r\n\tparseGeometries( json, shapes ) {\r\n\r\n\t\tconst geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet geometry;\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\t\t\t\t\tcase 'InstancedBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( data.type in Geometries ) {\r\n\r\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t}\r\n\r\n\tparseMaterials( json, textures ) {\r\n\r\n\t\tconst cache = {}; // MultiMaterial\r\n\t\tconst materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst loader = new MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tparseAnimations( json ) {\r\n\r\n\t\tconst animations = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tconst clip = AnimationClip.parse( data );\r\n\r\n\t\t\t\tanimations[ clip.uuid ] = clip;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t}\r\n\r\n\tparseImages( json, onLoad ) {\r\n\r\n\t\tconst scope = this;\r\n\t\tconst images = {};\r\n\r\n\t\tlet loader;\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, undefined, function () {\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tfunction deserializeImage( image ) {\r\n\r\n\t\t\tif ( typeof image === 'string' ) {\r\n\r\n\t\t\t\tconst url = image;\r\n\r\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\r\n\r\n\t\t\t\treturn loadImage( path );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( image.data ) {\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\r\n\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tconst manager = new LoadingManager( onLoad );\r\n\r\n\t\t\tloader = new ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst image = json[ i ];\r\n\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\tconst imageArray = [];\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\r\n\r\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\r\n\r\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\r\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t}\r\n\r\n\tasync parseImagesAsync( json ) {\r\n\r\n\t\tconst scope = this;\r\n\t\tconst images = {};\r\n\r\n\t\tlet loader;\r\n\r\n\t\tasync function deserializeImage( image ) {\r\n\r\n\t\t\tif ( typeof image === 'string' ) {\r\n\r\n\t\t\t\tconst url = image;\r\n\r\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\r\n\r\n\t\t\t\treturn await loader.loadAsync( path );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( image.data ) {\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\r\n\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tloader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst image = json[ i ];\r\n\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\tconst imageArray = [];\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\r\n\r\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\r\n\r\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\r\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t}\r\n\r\n\tparseTextures( json, images ) {\r\n\r\n\t\tfunction parseConstant( value, type ) {\r\n\r\n\t\t\tif ( typeof value === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn type[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tconst textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst source = images[ data.image ];\r\n\t\t\t\tconst image = source.data;\r\n\r\n\t\t\t\tlet texture;\r\n\r\n\t\t\t\tif ( Array.isArray( image ) ) {\r\n\r\n\t\t\t\t\ttexture = new CubeTexture();\r\n\r\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( image && image.data ) {\r\n\r\n\t\t\t\t\t\ttexture = new DataTexture();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture = new Texture();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.source = source;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\r\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\r\n\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\r\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\r\n\r\n\t\t\t\tif ( data.wrap !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\r\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\r\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\r\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\r\n\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\r\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n\r\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\r\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\r\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\r\n\r\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t}\r\n\r\n\tparseObject( data, geometries, materials, textures, animations ) {\r\n\r\n\t\tlet object;\r\n\r\n\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\tif ( Array.isArray( name ) ) {\r\n\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst uuid = name[ i ];\r\n\r\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tarray.push( materials[ uuid ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materials[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTexture( uuid ) {\r\n\r\n\t\t\tif ( textures[ uuid ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures[ uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tlet geometry, material;\r\n\r\n\t\tswitch ( data.type ) {\r\n\r\n\t\t\tcase 'Scene':\r\n\r\n\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\tif ( data.background !== undefined ) {\r\n\r\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\r\n\r\n\t\t\t\t\t\tobject.background = new Color( data.background );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject.background = getTexture( data.background );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.environment !== undefined ) {\r\n\r\n\t\t\t\t\tobject.environment = getTexture( data.environment );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.fog !== undefined ) {\r\n\r\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\r\n\r\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n\r\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\r\n\r\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.fog.name !== '' ) {\r\n\r\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\r\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\r\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\r\n\r\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\r\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'RectAreaLight':\r\n\r\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LightProbe':\r\n\r\n\t\t\t\tobject = new LightProbe().fromJSON( data );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SkinnedMesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t \tmaterial = getMaterial( data.material );\r\n\r\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\r\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\r\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t\tmaterial = getMaterial( data.material );\r\n\r\n\t\t\t\tobject = new Mesh( geometry, material );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'InstancedMesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t\tmaterial = getMaterial( data.material );\r\n\t\t\t\tconst count = data.count;\r\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\r\n\t\t\t\tconst instanceColor = data.instanceColor;\r\n\r\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\r\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\r\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'BatchedMesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t\tmaterial = getMaterial( data.material );\r\n\r\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\r\n\t\t\t\tobject.geometry = geometry;\r\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\r\n\t\t\t\tobject.sortObjects = data.sortObjects;\r\n\r\n\t\t\t\tobject._drawRanges = data.drawRanges;\r\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\r\n\r\n\t\t\t\tobject._visibility = data.visibility;\r\n\t\t\t\tobject._active = data.active;\r\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\r\n\r\n\t\t\t\t\tconst box = new Box3();\r\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\r\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\r\n\r\n\t\t\t\t\tconst sphere = new Sphere();\r\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\r\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\r\n\t\t\t\t\t\tbox: box,\r\n\r\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\r\n\t\t\t\t\t\tsphere: sphere\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\r\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\r\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\r\n\r\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\r\n\t\t\t\tobject._geometryCount = data.geometryCount;\r\n\r\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\r\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LOD':\r\n\r\n\t\t\t\tobject = new LOD();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Line':\r\n\r\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LineLoop':\r\n\r\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LineSegments':\r\n\r\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointCloud':\r\n\t\t\tcase 'Points':\r\n\r\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Group':\r\n\r\n\t\t\t\tobject = new Group();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Bone':\r\n\r\n\t\t\t\tobject = new Bone();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tobject = new Object3D();\r\n\r\n\t\t}\r\n\r\n\t\tobject.uuid = data.uuid;\r\n\r\n\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\r\n\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\tobject.matrix.fromArray( data.matrix );\r\n\r\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\r\n\r\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\tif ( data.shadow ) {\r\n\r\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\r\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\r\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\r\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\r\n\r\n\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\tconst children = data.children;\r\n\r\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.animations !== undefined ) {\r\n\r\n\t\t\tconst objectAnimations = data.animations;\r\n\r\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\r\n\r\n\t\t\t\tconst uuid = objectAnimations[ i ];\r\n\r\n\t\t\t\tobject.animations.push( animations[ uuid ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\r\n\r\n\t\t\tconst levels = data.levels;\r\n\r\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\tconst level = levels[ l ];\r\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n\tbindSkeletons( object, skeletons ) {\r\n\r\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\r\n\r\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\r\n\r\n\t\t\t\tif ( skeleton === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst TEXTURE_MAPPING = {\r\n\tUVMapping: UVMapping,\r\n\tCubeReflectionMapping: CubeReflectionMapping,\r\n\tCubeRefractionMapping: CubeRefractionMapping,\r\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\r\n};\r\n\r\nconst TEXTURE_WRAPPING = {\r\n\tRepeatWrapping: RepeatWrapping,\r\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n};\r\n\r\nconst TEXTURE_FILTER = {\r\n\tNearestFilter: NearestFilter,\r\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\r\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\r\n\tLinearFilter: LinearFilter,\r\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\r\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\r\n};\r\n\r\nclass ImageBitmapLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.isImageBitmapLoader = true;\r\n\r\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof fetch === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.options = { premultiplyAlpha: 'none' };\r\n\r\n\t}\r\n\r\n\tsetOptions( options ) {\r\n\r\n\t\tthis.options = options;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( url === undefined ) url = '';\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t// If cached is a promise, wait for it to resolve\r\n\t\t\tif ( cached.then ) {\r\n\r\n\t\t\t\tcached.then( imageBitmap => {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t} ).catch( e => {\r\n\r\n\t\t\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\t\t} );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\r\n\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tconst fetchOptions = {};\r\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\r\n\t\tfetchOptions.headers = this.requestHeader;\r\n\r\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\r\n\r\n\t\t\treturn res.blob();\r\n\r\n\t\t} ).then( function ( blob ) {\r\n\r\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\r\n\r\n\t\t} ).then( function ( imageBitmap ) {\r\n\r\n\t\t\tCache.add( url, imageBitmap );\r\n\r\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\treturn imageBitmap;\r\n\r\n\t\t} ).catch( function ( e ) {\r\n\r\n\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\tCache.remove( url );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t} );\r\n\r\n\t\tCache.add( url, promise );\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _context;\r\n\r\nclass AudioContext {\r\n\r\n\tstatic getContext() {\r\n\r\n\t\tif ( _context === undefined ) {\r\n\r\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t}\r\n\r\n\t\treturn _context;\r\n\r\n\t}\r\n\r\n\tstatic setContext( value ) {\r\n\r\n\t\t_context = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AudioLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\r\n\r\n\t\t\t\tconst context = AudioContext.getContext();\r\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\r\n\r\n\t\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t\t} ).catch( handleError );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\thandleError( e );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\tfunction handleError( e ) {\r\n\r\n\t\t\tif ( onError ) {\r\n\r\n\t\t\t\tonError( e );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\r\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\r\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nclass StereoCamera {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'StereoCamera';\r\n\r\n\t\tthis.aspect = 1;\r\n\r\n\t\tthis.eyeSep = 0.064;\r\n\r\n\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n\t\tthis._cache = {\r\n\t\t\tfocus: null,\r\n\t\t\tfov: null,\r\n\t\t\taspect: null,\r\n\t\t\tnear: null,\r\n\t\t\tfar: null,\r\n\t\t\tzoom: null,\r\n\t\t\teyeSep: null\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tupdate( camera ) {\r\n\r\n\t\tconst cache = this._cache;\r\n\r\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\r\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\r\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\tcache.focus = camera.focus;\r\n\t\t\tcache.fov = camera.fov;\r\n\t\t\tcache.aspect = camera.aspect * this.aspect;\r\n\t\t\tcache.near = camera.near;\r\n\t\t\tcache.far = camera.far;\r\n\t\t\tcache.zoom = camera.zoom;\r\n\t\t\tcache.eyeSep = this.eyeSep;\r\n\r\n\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\r\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\r\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\r\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\r\n\t\t\tlet xmin, xmax;\r\n\r\n\t\t\t// translate xOffset\r\n\r\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\r\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\r\n\r\n\t\t\t// for left eye\r\n\r\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\r\n\r\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\r\n\r\n\t\t\t// for right eye\r\n\r\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\r\n\r\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\r\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Clock {\r\n\r\n\tconstructor( autoStart = true ) {\r\n\r\n\t\tthis.autoStart = autoStart;\r\n\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t}\r\n\r\n\tstart() {\r\n\r\n\t\tthis.startTime = now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.elapsedTime = 0;\r\n\t\tthis.running = true;\r\n\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\t\tthis.autoStart = false;\r\n\r\n\t}\r\n\r\n\tgetElapsedTime() {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t}\r\n\r\n\tgetDelta() {\r\n\r\n\t\tlet diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tconst newTime = now();\r\n\r\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction now() {\r\n\r\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\r\n\r\n}\r\n\r\nconst _position$1 = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\r\nconst _scale$1 = /*@__PURE__*/ new Vector3();\r\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass AudioListener extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'AudioListener';\r\n\r\n\t\tthis.context = AudioContext.getContext();\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\r\n\t\tthis.filter = null;\r\n\r\n\t\tthis.timeDelta = 0;\r\n\r\n\t\t// private\r\n\r\n\t\tthis._clock = new Clock();\r\n\r\n\t}\r\n\r\n\tgetInput() {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t}\r\n\r\n\tremoveFilter() {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\tthis.filter = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetFilter() {\r\n\r\n\t\treturn this.filter;\r\n\r\n\t}\r\n\r\n\tsetFilter( value ) {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t}\r\n\r\n\t\tthis.filter = value;\r\n\t\tthis.gain.connect( this.filter );\r\n\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMasterVolume() {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t}\r\n\r\n\tsetMasterVolume( value ) {\r\n\r\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tconst listener = this.context.listener;\r\n\t\tconst up = this.up;\r\n\r\n\t\tthis.timeDelta = this._clock.getDelta();\r\n\r\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\r\n\r\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\r\n\r\n\t\tif ( listener.positionX ) {\r\n\r\n\t\t\t// code path for Chrome (see #14393)\r\n\r\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\r\n\r\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\r\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\r\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\r\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\r\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\r\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\r\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\r\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\r\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\r\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Audio extends Object3D {\r\n\r\n\tconstructor( listener ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'Audio';\r\n\r\n\t\tthis.listener = listener;\r\n\t\tthis.context = listener.context;\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( listener.getInput() );\r\n\r\n\t\tthis.autoplay = false;\r\n\r\n\t\tthis.buffer = null;\r\n\t\tthis.detune = 0;\r\n\t\tthis.loop = false;\r\n\t\tthis.loopStart = 0;\r\n\t\tthis.loopEnd = 0;\r\n\t\tthis.offset = 0;\r\n\t\tthis.duration = undefined;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.hasPlaybackControl = true;\r\n\t\tthis.source = null;\r\n\t\tthis.sourceType = 'empty';\r\n\r\n\t\tthis._startedAt = 0;\r\n\t\tthis._progress = 0;\r\n\t\tthis._connected = false;\r\n\r\n\t\tthis.filters = [];\r\n\r\n\t}\r\n\r\n\tgetOutput() {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t}\r\n\r\n\tsetNodeSource( audioNode ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'audioNode';\r\n\t\tthis.source = audioNode;\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetMediaElementSource( mediaElement ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'mediaNode';\r\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetMediaStreamSource( mediaStream ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'mediaStreamNode';\r\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetBuffer( audioBuffer ) {\r\n\r\n\t\tthis.buffer = audioBuffer;\r\n\t\tthis.sourceType = 'buffer';\r\n\r\n\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tplay( delay = 0 ) {\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._startedAt = this.context.currentTime + delay;\r\n\r\n\t\tconst source = this.context.createBufferSource();\r\n\t\tsource.buffer = this.buffer;\r\n\t\tsource.loop = this.loop;\r\n\t\tsource.loopStart = this.loopStart;\r\n\t\tsource.loopEnd = this.loopEnd;\r\n\t\tsource.onended = this.onEnded.bind( this );\r\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.setDetune( this.detune );\r\n\t\tthis.setPlaybackRate( this.playbackRate );\r\n\r\n\t\treturn this.connect();\r\n\r\n\t}\r\n\r\n\tpause() {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t// update current progress\r\n\r\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\r\n\r\n\t\t\tif ( this.loop === true ) {\r\n\r\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\r\n\r\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._progress = 0;\r\n\r\n\t\tif ( this.source !== null ) {\r\n\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconnect() {\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\tthis._connected = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdisconnect() {\r\n\r\n\t\tif ( this._connected === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\tthis._connected = false;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetFilters() {\r\n\r\n\t\treturn this.filters;\r\n\r\n\t}\r\n\r\n\tsetFilters( value ) {\r\n\r\n\t\tif ( ! value ) value = [];\r\n\r\n\t\tif ( this._connected === true ) {\r\n\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filters = value.slice();\r\n\t\t\tthis.connect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.filters = value.slice();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetDetune( value ) {\r\n\r\n\t\tthis.detune = value;\r\n\r\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\r\n\r\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetDetune() {\r\n\r\n\t\treturn this.detune;\r\n\r\n\t}\r\n\r\n\tgetFilter() {\r\n\r\n\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t}\r\n\r\n\tsetFilter( filter ) {\r\n\r\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t}\r\n\r\n\tsetPlaybackRate( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.playbackRate = value;\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetPlaybackRate() {\r\n\r\n\t\treturn this.playbackRate;\r\n\r\n\t}\r\n\r\n\tonEnded() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t}\r\n\r\n\tgetLoop() {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.loop;\r\n\r\n\t}\r\n\r\n\tsetLoop( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.loop = value;\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.source.loop = this.loop;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetLoopStart( value ) {\r\n\r\n\t\tthis.loopStart = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetLoopEnd( value ) {\r\n\r\n\t\tthis.loopEnd = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetVolume() {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t}\r\n\r\n\tsetVolume( value ) {\r\n\r\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _position = /*@__PURE__*/ new Vector3();\r\nconst _quaternion = /*@__PURE__*/ new Quaternion();\r\nconst _scale = /*@__PURE__*/ new Vector3();\r\nconst _orientation = /*@__PURE__*/ new Vector3();\r\n\r\nclass PositionalAudio extends Audio {\r\n\r\n\tconstructor( listener ) {\r\n\r\n\t\tsuper( listener );\r\n\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.panningModel = 'HRTF';\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tconnect() {\r\n\r\n\t\tsuper.connect();\r\n\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tdisconnect() {\r\n\r\n\t\tsuper.disconnect();\r\n\r\n\t\tthis.panner.disconnect( this.gain );\r\n\r\n\t}\r\n\r\n\tgetOutput() {\r\n\r\n\t\treturn this.panner;\r\n\r\n\t}\r\n\r\n\tgetRefDistance() {\r\n\r\n\t\treturn this.panner.refDistance;\r\n\r\n\t}\r\n\r\n\tsetRefDistance( value ) {\r\n\r\n\t\tthis.panner.refDistance = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetRolloffFactor() {\r\n\r\n\t\treturn this.panner.rolloffFactor;\r\n\r\n\t}\r\n\r\n\tsetRolloffFactor( value ) {\r\n\r\n\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetDistanceModel() {\r\n\r\n\t\treturn this.panner.distanceModel;\r\n\r\n\t}\r\n\r\n\tsetDistanceModel( value ) {\r\n\r\n\t\tthis.panner.distanceModel = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMaxDistance() {\r\n\r\n\t\treturn this.panner.maxDistance;\r\n\r\n\t}\r\n\r\n\tsetMaxDistance( value ) {\r\n\r\n\t\tthis.panner.maxDistance = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\r\n\r\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\r\n\r\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\r\n\r\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\r\n\r\n\t\tconst panner = this.panner;\r\n\r\n\t\tif ( panner.positionX ) {\r\n\r\n\t\t\t// code path for Chrome and Firefox (see #14393)\r\n\r\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\r\n\r\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\r\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\r\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\r\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\r\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\r\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\r\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AudioAnalyser {\r\n\r\n\tconstructor( audio, fftSize = 2048 ) {\r\n\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize;\r\n\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\r\n\t}\r\n\r\n\r\n\tgetFrequencyData() {\r\n\r\n\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\treturn this.data;\r\n\r\n\t}\r\n\r\n\tgetAverageFrequency() {\r\n\r\n\t\tlet value = 0;\r\n\t\tconst data = this.getFrequencyData();\r\n\r\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\tvalue += data[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn value / data.length;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PropertyMixer {\r\n\r\n\tconstructor( binding, typeName, valueSize ) {\r\n\r\n\t\tthis.binding = binding;\r\n\t\tthis.valueSize = valueSize;\r\n\r\n\t\tlet mixFunction,\r\n\t\t\tmixFunctionAdditive,\r\n\t\t\tsetIdentity;\r\n\r\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\r\n\t\t//\r\n\t\t// interpolators can use .buffer as their .result\r\n\t\t// the data then goes to 'incoming'\r\n\t\t//\r\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t// the cumulative result and are compared to detect\r\n\t\t// changes\r\n\t\t//\r\n\t\t// 'orig' stores the original state of the property\r\n\t\t//\r\n\t\t// 'add' is used for additive cumulative results\r\n\t\t//\r\n\t\t// 'work' is optional and is only present for quaternion types. It is used\r\n\t\t// to store intermediate quaternion multiplication results\r\n\r\n\t\tswitch ( typeName ) {\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\r\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\r\n\r\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\r\n\t\t\t\tthis._workIndex = 5;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'bool':\r\n\t\t\t\tmixFunction = this._select;\r\n\r\n\t\t\t\t// Use the regular mix function and for additive on these types,\r\n\t\t\t\t// additive is not relevant for non-numeric types\r\n\t\t\t\tmixFunctionAdditive = this._select;\r\n\r\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\r\n\r\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tmixFunction = this._lerp;\r\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\r\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\r\n\r\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\r\n\r\n\t\t}\r\n\r\n\t\tthis._mixBufferRegion = mixFunction;\r\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\r\n\t\tthis._setIdentity = setIdentity;\r\n\t\tthis._origIndex = 3;\r\n\t\tthis._addIndex = 4;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t\tthis.useCount = 0;\r\n\t\tthis.referenceCount = 0;\r\n\r\n\t}\r\n\r\n\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\taccumulate( accuIndex, weight ) {\r\n\r\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\tconst buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = accuIndex * stride + stride;\r\n\r\n\t\tlet currentWeight = this.cumulativeWeight;\r\n\r\n\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentWeight = weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\tcurrentWeight += weight;\r\n\t\t\tconst mix = weight / currentWeight;\r\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t}\r\n\r\n\t// accumulate data in the 'incoming' region into 'add'\r\n\taccumulateAdditive( weight ) {\r\n\r\n\t\tconst buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = stride * this._addIndex;\r\n\r\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\r\n\r\n\t\t\t// add = identity\r\n\r\n\t\t\tthis._setIdentity();\r\n\r\n\t\t}\r\n\r\n\t\t// add := add + incoming * weight\r\n\r\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\r\n\t\tthis.cumulativeWeightAdditive += weight;\r\n\r\n\t}\r\n\r\n\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\tapply( accuIndex ) {\r\n\r\n\t\tconst stride = this.valueSize,\r\n\t\t\tbuffer = this.buffer,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tweight = this.cumulativeWeight,\r\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\r\n\r\n\t\t\tbinding = this.binding;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\tconst originalValueOffset = stride * this._origIndex;\r\n\r\n\t\t\tthis._mixBufferRegion(\r\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t}\r\n\r\n\t\tif ( weightAdditive > 0 ) {\r\n\r\n\t\t\t// accuN := accuN + additive accuN\r\n\r\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// remember the state of the bound property and copy it to both accus\r\n\tsaveOriginalState() {\r\n\r\n\t\tconst binding = this.binding;\r\n\r\n\t\tconst buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toriginalValueOffset = stride * this._origIndex;\r\n\r\n\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t}\r\n\r\n\t\t// Add to identity for additive\r\n\t\tthis._setIdentity();\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t}\r\n\r\n\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\trestoreOriginalState() {\r\n\r\n\t\tconst originalValueOffset = this.valueSize * 3;\r\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t}\r\n\r\n\t_setAdditiveIdentityNumeric() {\r\n\r\n\t\tconst startIndex = this._addIndex * this.valueSize;\r\n\t\tconst endIndex = startIndex + this.valueSize;\r\n\r\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\r\n\r\n\t\t\tthis.buffer[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_setAdditiveIdentityQuaternion() {\r\n\r\n\t\tthis._setAdditiveIdentityNumeric();\r\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\r\n\r\n\t}\r\n\r\n\t_setAdditiveIdentityOther() {\r\n\r\n\t\tconst startIndex = this._origIndex * this.valueSize;\r\n\t\tconst targetIndex = this._addIndex * this.valueSize;\r\n\r\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\r\n\r\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// mix functions\r\n\r\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\r\n\r\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t}\r\n\r\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tconst workOffset = this._workIndex * stride;\r\n\r\n\t\t// Store result in intermediate buffer offset\r\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\r\n\r\n\t\t// Slerp to the intermediate result\r\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\r\n\r\n\t}\r\n\r\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tconst s = 1 - t;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tconst j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tconst j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Characters [].:/ are reserved for track binding syntax.\r\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\r\n\r\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n// instead, we exclude reserved characters and match everything else.\r\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\r\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\r\n\r\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n// be matched to parse the rest of the track name.\r\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\r\n\r\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\r\n\r\n// Object on target node, and accessor. May not contain reserved\r\n// characters. Accessor may contain any character except closing bracket.\r\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\r\n\r\n// Property and accessor. May not contain reserved characters. Accessor may\r\n// contain any non-bracket characters.\r\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\r\n\r\nconst _trackRe = new RegExp( ''\r\n\t+ '^'\r\n\t+ _directoryRe\r\n\t+ _nodeRe\r\n\t+ _objectRe\r\n\t+ _propertyRe\r\n\t+ '$'\r\n);\r\n\r\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\r\n\r\nclass Composite {\r\n\r\n\tconstructor( targetGroup, path, optionalParsedPath ) {\r\n\r\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis._targetGroup = targetGroup;\r\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n\t}\r\n\r\n\tgetValue( array, offset ) {\r\n\r\n\t\tthis.bind(); // bind all binding\r\n\r\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t// and only call .getValue on the first\r\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t}\r\n\r\n\tsetValue( array, offset ) {\r\n\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].bind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Note: This class uses a State pattern on a per-method basis:\r\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n// prototype version of these methods with one that represents\r\n// the bound state. When the property is not found, the methods\r\n// become no-ops.\r\nclass PropertyBinding {\r\n\r\n\tconstructor( rootNode, path, parsedPath ) {\r\n\r\n\t\tthis.path = path;\r\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\r\n\r\n\t\tthis.rootNode = rootNode;\r\n\r\n\t\t// initial state of these methods that calls 'bind'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n\r\n\tstatic create( root, path, parsedPath ) {\r\n\r\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\r\n\r\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t * node names, to ensure compatibility with parseTrackName().\r\n\t *\r\n\t * @param {string} name Node name to be sanitized.\r\n\t * @return {string}\r\n\t */\r\n\tstatic sanitizeNodeName( name ) {\r\n\r\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\r\n\r\n\t}\r\n\r\n\tstatic parseTrackName( trackName ) {\r\n\r\n\t\tconst matches = _trackRe.exec( trackName );\r\n\r\n\t\tif ( matches === null ) {\r\n\r\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\r\n\r\n\t\t}\r\n\r\n\t\tconst results = {\r\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\tnodeName: matches[ 2 ],\r\n\t\t\tobjectName: matches[ 3 ],\r\n\t\t\tobjectIndex: matches[ 4 ],\r\n\t\t\tpropertyName: matches[ 5 ], // required\r\n\t\t\tpropertyIndex: matches[ 6 ]\r\n\t\t};\r\n\r\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\r\n\r\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\r\n\r\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\r\n\r\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\r\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t// include '.' characters).\r\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\r\n\r\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\r\n\t\t\t\tresults.objectName = objectName;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\r\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\r\n\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\r\n\t}\r\n\r\n\tstatic findNode( root, nodeName ) {\r\n\r\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\t\treturn root;\r\n\r\n\t\t}\r\n\r\n\t\t// search into skeleton bones.\r\n\t\tif ( root.skeleton ) {\r\n\r\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\r\n\r\n\t\t\tif ( bone !== undefined ) {\r\n\r\n\t\t\t\treturn bone;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// search into node subtree.\r\n\t\tif ( root.children ) {\r\n\r\n\t\t\tconst searchNodeSubtree = function ( children ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst childNode = children[ i ];\r\n\r\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\t\tif ( result ) return result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\t\tif ( subTreeNode ) {\r\n\r\n\t\t\t\treturn subTreeNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// these are used to \"bind\" a nonexistent property\r\n\t_getValue_unavailable() {}\r\n\t_setValue_unavailable() {}\r\n\r\n\t// Getters\r\n\r\n\t_getValue_direct( buffer, offset ) {\r\n\r\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\r\n\r\n\t}\r\n\r\n\t_getValue_array( buffer, offset ) {\r\n\r\n\t\tconst source = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t}\r\n\r\n\t_getValue_toArray( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t}\r\n\r\n\t// Direct\r\n\r\n\t_setValue_direct( buffer, offset ) {\r\n\r\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t}\r\n\r\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// EntireArray\r\n\r\n\t_setValue_array( buffer, offset ) {\r\n\r\n\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// ArrayElement\r\n\r\n\t_setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t}\r\n\r\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// HasToFromArray\r\n\r\n\t_setValue_fromArray( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t}\r\n\r\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_getValue_unbound( targetArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.getValue( targetArray, offset );\r\n\r\n\t}\r\n\r\n\t_setValue_unbound( sourceArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t}\r\n\r\n\t// create getter / setter pair for a property in the scene graph\r\n\tbind() {\r\n\r\n\t\tlet targetObject = this.node;\r\n\t\tconst parsedPath = this.parsedPath;\r\n\r\n\t\tconst objectName = parsedPath.objectName;\r\n\t\tconst propertyName = parsedPath.propertyName;\r\n\t\tlet propertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\r\n\r\n\t\t\tthis.node = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// set fail state so we can just 'return' on error\r\n\t\tthis.getValue = this._getValue_unavailable;\r\n\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n\t\t// ensure there is a value node\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( objectName ) {\r\n\r\n\t\t\tlet objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map':\r\n\r\n\t\t\t\t\tif ( 'map' in targetObject ) {\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.map;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! targetObject.material.map ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.map;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// resolve property\r\n\t\tconst nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\tif ( nodeProperty === undefined ) {\r\n\r\n\t\t\tconst nodeName = parsedPath.nodeName;\r\n\r\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\r\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// determine versioning scheme\r\n\t\tlet versioning = this.Versioning.None;\r\n\r\n\t\tthis.targetObject = targetObject;\r\n\r\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\r\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\r\n\t\t}\r\n\r\n\t\t// determine how the property gets bound\r\n\t\tlet bindingType = this.BindingType.Direct;\r\n\r\n\t\tif ( propertyIndex !== undefined ) {\r\n\r\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\r\n\r\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\r\n\r\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\r\n\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\r\n\r\n\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t}\r\n\r\n\t\t// select getter / setter\r\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.node = null;\r\n\r\n\t\t// back to the prototype version of getValue / setValue\r\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n}\r\n\r\nPropertyBinding.Composite = Composite;\r\n\r\nPropertyBinding.prototype.BindingType = {\r\n\tDirect: 0,\r\n\tEntireArray: 1,\r\n\tArrayElement: 2,\r\n\tHasFromToArray: 3\r\n};\r\n\r\nPropertyBinding.prototype.Versioning = {\r\n\tNone: 0,\r\n\tNeedsUpdate: 1,\r\n\tMatrixWorldNeedsUpdate: 2\r\n};\r\n\r\nPropertyBinding.prototype.GetterByBindingType = [\r\n\r\n\tPropertyBinding.prototype._getValue_direct,\r\n\tPropertyBinding.prototype._getValue_array,\r\n\tPropertyBinding.prototype._getValue_arrayElement,\r\n\tPropertyBinding.prototype._getValue_toArray,\r\n\r\n];\r\n\r\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\r\n\r\n\t[\r\n\t\t// Direct\r\n\t\tPropertyBinding.prototype._setValue_direct,\r\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\r\n\r\n\t], [\r\n\r\n\t\t// EntireArray\r\n\r\n\t\tPropertyBinding.prototype._setValue_array,\r\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\r\n\r\n\t], [\r\n\r\n\t\t// ArrayElement\r\n\t\tPropertyBinding.prototype._setValue_arrayElement,\r\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\r\n\r\n\t], [\r\n\r\n\t\t// HasToFromArray\r\n\t\tPropertyBinding.prototype._setValue_fromArray,\r\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\r\n\r\n\t]\r\n\r\n];\r\n\r\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n *  - Add objects you would otherwise pass as 'root' to the\r\n *    constructor or the .clipAction method of AnimationMixer.\r\n *\r\n *  - Instead pass this object as 'root'.\r\n *\r\n *  - You can also add and remove objects later when the mixer\r\n *    is running.\r\n *\r\n * Note:\r\n *\r\n *    Objects of this class appear as one object to the mixer,\r\n *    so cache control of the individual objects must be done\r\n *    on the group.\r\n *\r\n * Limitation:\r\n *\r\n *  - The animated properties must be compatible among the\r\n *    all objects in the group.\r\n *\r\n *  - A single property can either be controlled through a\r\n *    target group or directly, but not both.\r\n */\r\n\r\nclass AnimationObjectGroup {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.isAnimationObjectGroup = true;\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t// cached objects followed by the active ones\r\n\t\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\t\tthis.nCachedObjects_ = 0; // threshold\r\n\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\tconst indices = {};\r\n\t\tthis._indicesByUUID = indices; // for bookkeeping\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t\t}\r\n\r\n\t\tthis._paths = []; // inside: string\r\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\r\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\r\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tobjects: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._objects.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget bindingsPerObject() {\r\n\r\n\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tadd() {\r\n\r\n\t\tconst objects = this._objects,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tpaths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tlet knownObject = undefined,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_;\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid;\r\n\t\t\tlet index = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\tindex = nObjects ++;\r\n\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\tknownObject = objects[ index ];\r\n\r\n\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\r\n\r\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\r\n\r\n\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t}\r\n\r\n\tremove() {\r\n\r\n\t\tconst objects = this._objects,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tlet nCachedObjects = this.nCachedObjects_;\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t}\r\n\r\n\t// remove & forget\r\n\tuncache() {\r\n\r\n\t\tconst objects = this._objects,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tlet nCachedObjects = this.nCachedObjects_,\r\n\t\t\tnObjects = objects.length;\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\tconst lastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // cached or active\r\n\r\n\t\t\t} // if object is known\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t}\r\n\r\n\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\tsubscribe_( path, parsedPath ) {\r\n\r\n\t\t// returns an array of bindings for the given path that is changed\r\n\t\t// according to the contained objects in the group\r\n\r\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\r\n\t\tlet index = indicesByPath[ path ];\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\tconst paths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tobjects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\tindex = bindings.length;\r\n\r\n\t\tindicesByPath[ path ] = index;\r\n\r\n\t\tpaths.push( path );\r\n\t\tparsedPaths.push( parsedPath );\r\n\t\tbindings.push( bindingsForPath );\r\n\r\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = objects[ i ];\r\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t\treturn bindingsForPath;\r\n\r\n\t}\r\n\r\n\tunsubscribe_( path ) {\r\n\r\n\t\t// tells the group to forget about a property path and no longer\r\n\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tconst paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\tparsedPaths.pop();\r\n\r\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\tpaths.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AnimationAction {\r\n\r\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\r\n\r\n\t\tthis._mixer = mixer;\r\n\t\tthis._clip = clip;\r\n\t\tthis._localRoot = localRoot;\r\n\t\tthis.blendMode = blendMode;\r\n\r\n\t\tconst tracks = clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tinterpolants = new Array( nTracks );\r\n\r\n\t\tconst interpolantSettings = {\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t};\r\n\r\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\tinterpolants[ i ] = interpolant;\r\n\t\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t\t}\r\n\r\n\t\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\t\tthis._interpolants = interpolants; // bound by the mixer\r\n\r\n\t\t// inside: PropertyMixer (managed by the mixer)\r\n\t\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\t\tthis._cacheIndex = null; // for the memory manager\r\n\t\tthis._byClipCacheIndex = null; // for the memory manager\r\n\r\n\t\tthis._timeScaleInterpolant = null;\r\n\t\tthis._weightInterpolant = null;\r\n\r\n\t\tthis.loop = LoopRepeat;\r\n\t\tthis._loopCount = - 1;\r\n\r\n\t\t// global mixer time when the action is to be started\r\n\t\t// it's set back to 'null' upon start of the action\r\n\t\tthis._startTime = null;\r\n\r\n\t\t// scaled local time of the action\r\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1;\r\n\t\tthis._effectiveTimeScale = 1;\r\n\r\n\t\tthis.weight = 1;\r\n\t\tthis._effectiveWeight = 1;\r\n\r\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\r\n\r\n\t\tthis.paused = false; // true -> zero effective time scale\r\n\t\tthis.enabled = true; // false -> zero effective weight\r\n\r\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\r\n\r\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\r\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\r\n\r\n\t}\r\n\r\n\t// State & Scheduling\r\n\r\n\tplay() {\r\n\r\n\t\tthis._mixer._activateAction( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\treturn this.reset();\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.paused = false;\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.time = 0; // restart clip\r\n\t\tthis._loopCount = - 1;// forget previous loops\r\n\t\tthis._startTime = null;// forget scheduling\r\n\r\n\t\treturn this.stopFading().stopWarping();\r\n\r\n\t}\r\n\r\n\tisRunning() {\r\n\r\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t}\r\n\r\n\t// return true when play has been called\r\n\tisScheduled() {\r\n\r\n\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t}\r\n\r\n\tstartAt( time ) {\r\n\r\n\t\tthis._startTime = time;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetLoop( mode, repetitions ) {\r\n\r\n\t\tthis.loop = mode;\r\n\t\tthis.repetitions = repetitions;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Weight\r\n\r\n\t// set the weight stopping any scheduled fading\r\n\t// although .enabled = false yields an effective weight of zero, this\r\n\t// method does *not* change .enabled, because it would be confusing\r\n\tsetEffectiveWeight( weight ) {\r\n\r\n\t\tthis.weight = weight;\r\n\r\n\t\t// note: same logic as when updated at runtime\r\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\treturn this.stopFading();\r\n\r\n\t}\r\n\r\n\t// return the weight considering fading and .enabled\r\n\tgetEffectiveWeight() {\r\n\r\n\t\treturn this._effectiveWeight;\r\n\r\n\t}\r\n\r\n\tfadeIn( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t}\r\n\r\n\tfadeOut( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t}\r\n\r\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\r\n\r\n\t\tfadeOutAction.fadeOut( duration );\r\n\t\tthis.fadeIn( duration );\r\n\r\n\t\tif ( warp ) {\r\n\r\n\t\t\tconst fadeInDuration = this._clip.duration,\r\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcrossFadeTo( fadeInAction, duration, warp ) {\r\n\r\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t}\r\n\r\n\tstopFading() {\r\n\r\n\t\tconst weightInterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Time Scale Control\r\n\r\n\t// set the time scale stopping any scheduled warping\r\n\t// although .paused = true yields an effective time scale of zero, this\r\n\t// method does *not* change .paused, because it would be confusing\r\n\tsetEffectiveTimeScale( timeScale ) {\r\n\r\n\t\tthis.timeScale = timeScale;\r\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t}\r\n\r\n\t// return the time scale considering warping and .paused\r\n\tgetEffectiveTimeScale() {\r\n\r\n\t\treturn this._effectiveTimeScale;\r\n\r\n\t}\r\n\r\n\tsetDuration( duration ) {\r\n\r\n\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t}\r\n\r\n\tsyncWith( action ) {\r\n\r\n\t\tthis.time = action.time;\r\n\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t}\r\n\r\n\thalt( duration ) {\r\n\r\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t}\r\n\r\n\twarp( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\tconst mixer = this._mixer,\r\n\t\t\tnow = mixer.time,\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\tlet interpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tconst times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstopWarping() {\r\n\r\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Object Accessors\r\n\r\n\tgetMixer() {\r\n\r\n\t\treturn this._mixer;\r\n\r\n\t}\r\n\r\n\tgetClip() {\r\n\r\n\t\treturn this._clip;\r\n\r\n\t}\r\n\r\n\tgetRoot() {\r\n\r\n\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t}\r\n\r\n\t// Interna\r\n\r\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\r\n\r\n\t\t// called by the mixer\r\n\r\n\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\r\n\t\t\tthis._updateWeight( time );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst startTime = this._startTime;\r\n\r\n\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t// check for scheduled start of action\r\n\r\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\tdeltaTime = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// apply time scale and advance time\r\n\r\n\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\tconst clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t// note: _updateTime may disable the action resulting in\r\n\t\t// an effective weight of 0\r\n\r\n\t\tconst weight = this._updateWeight( time );\r\n\r\n\t\tif ( weight > 0 ) {\r\n\r\n\t\t\tconst interpolants = this._interpolants;\r\n\t\t\tconst propertyMixers = this._propertyBindings;\r\n\r\n\t\t\tswitch ( this.blendMode ) {\r\n\r\n\t\t\t\tcase AdditiveAnimationBlendMode:\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase NormalAnimationBlendMode:\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_updateWeight( time ) {\r\n\r\n\t\tlet weight = 0;\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\tweight = this.weight;\r\n\t\t\tconst interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveWeight = weight;\r\n\t\treturn weight;\r\n\r\n\t}\r\n\r\n\t_updateTimeScale( time ) {\r\n\r\n\t\tlet timeScale = 0;\r\n\r\n\t\tif ( ! this.paused ) {\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tconst interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveTimeScale = timeScale;\r\n\t\treturn timeScale;\r\n\r\n\t}\r\n\r\n\t_updateTime( deltaTime ) {\r\n\r\n\t\tconst duration = this._clip.duration;\r\n\t\tconst loop = this.loop;\r\n\r\n\t\tlet time = this.time + deltaTime;\r\n\t\tlet loopCount = this._loopCount;\r\n\r\n\t\tconst pingPong = ( loop === LoopPingPong );\r\n\r\n\t\tif ( deltaTime === 0 ) {\r\n\r\n\t\t\tif ( loopCount === - 1 ) return time;\r\n\r\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\r\n\r\n\t\t}\r\n\r\n\t\tif ( loop === LoopOnce ) {\r\n\r\n\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tthis._loopCount = 0;\r\n\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle_stop: {\r\n\r\n\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tbreak handle_stop;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( time >= duration || time < 0 ) {\r\n\r\n\t\t\t\t// wrap around\r\n\r\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\tconst pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\tif ( pending <= 0 ) {\r\n\r\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\tif ( pending === 1 ) {\r\n\r\n\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\r\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.time = time;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\r\n\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\treturn duration - time;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn time;\r\n\r\n\t}\r\n\r\n\t_setEndings( atStart, atEnd, pingPong ) {\r\n\r\n\t\tconst settings = this._interpolantSettings;\r\n\r\n\t\tif ( pingPong ) {\r\n\r\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\r\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_scheduleFading( duration, weightNow, weightThen ) {\r\n\r\n\t\tconst mixer = this._mixer, now = mixer.time;\r\n\t\tlet interpolant = this._weightInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tconst times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\tvalues[ 0 ] = weightNow;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\t\tvalues[ 1 ] = weightThen;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\r\n\r\n\r\nclass AnimationMixer extends EventDispatcher {\r\n\r\n\tconstructor( root ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._root = root;\r\n\t\tthis._initMemoryManager();\r\n\t\tthis._accuIndex = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.timeScale = 1.0;\r\n\r\n\t}\r\n\r\n\t_bindAction( action, prototypeAction ) {\r\n\r\n\t\tconst root = action._localRoot || this._root,\r\n\t\t\ttracks = action._clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tbindings = action._propertyBindings,\r\n\t\t\tinterpolants = action._interpolants,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\r\n\r\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\tbindingsByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tconst track = tracks[ i ],\r\n\t\t\t\ttrackName = track.name;\r\n\r\n\t\t\tlet binding = bindingsByName[ trackName ];\r\n\r\n\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\tbinding = new PropertyMixer(\r\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_activateAction( action ) {\r\n\r\n\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\t\t// increment reference counts / sort out state\r\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._lendAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_deactivateAction( action ) {\r\n\r\n\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\t\t// decrement reference counts / sort out state\r\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Memory manager\r\n\r\n\t_initMemoryManager() {\r\n\r\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\tthis._nActiveActions = 0;\r\n\r\n\t\tthis._actionsByClip = {};\r\n\t\t// inside:\r\n\t\t// {\r\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\r\n\t\t// \tactionByRoot: AnimationAction - lookup\r\n\t\t// }\r\n\r\n\r\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\tthis._controlInterpolants = []; // same game as above\r\n\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tactions: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._actions.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn scope._nActiveActions;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbindings: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn scope._nActiveBindings;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontrolInterpolants: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Memory management for AnimationAction objects\r\n\r\n\t_isActiveAction( action ) {\r\n\r\n\t\tconst index = action._cacheIndex;\r\n\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t}\r\n\r\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\tactionsForClip = {\r\n\r\n\t\t\t\tknownActions: [ action ],\r\n\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t};\r\n\r\n\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\tknownActions.push( action );\r\n\r\n\t\t}\r\n\r\n\t\taction._cacheIndex = actions.length;\r\n\t\tactions.push( action );\r\n\r\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t}\r\n\r\n\t_removeInactiveAction( action ) {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\tactions.pop();\r\n\r\n\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\tconst clipUuid = action._clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\tlastKnownAction =\r\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\tknownActionsForClip.pop();\r\n\r\n\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\r\n\r\n\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t}\r\n\r\n\t_removeInactiveBindingsForAction( action ) {\r\n\r\n\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst binding = bindings[ i ];\r\n\r\n\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_lendAction( action ) {\r\n\r\n\t\t// [ active actions |  inactive actions  ]\r\n\t\t// [  active actions >| inactive actions ]\r\n\t\t//                 s        a\r\n\t\t//                  <-swap->\r\n\t\t//                 a        s\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\taction._cacheIndex = lastActiveIndex;\r\n\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t}\r\n\r\n\t_takeBackAction( action ) {\r\n\r\n\t\t// [  active actions  | inactive actions ]\r\n\t\t// [ active actions |< inactive actions  ]\r\n\t\t//        a        s\r\n\t\t//         <-swap->\r\n\t\t//        s        a\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t}\r\n\r\n\t// Memory management for PropertyMixer objects\r\n\r\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\r\n\r\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\tbindingByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t}\r\n\r\n\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\tbinding._cacheIndex = bindings.length;\r\n\t\tbindings.push( binding );\r\n\r\n\t}\r\n\r\n\t_removeInactiveBinding( binding ) {\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tpropBinding = binding.binding,\r\n\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\ttrackName = propBinding.path,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\tbindings.pop();\r\n\r\n\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\r\n\r\n\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_lendBinding( binding ) {\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t}\r\n\r\n\t_takeBackBinding( binding ) {\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t}\r\n\r\n\r\n\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t_lendControlInterpolant() {\r\n\r\n\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\r\n\r\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\tinterpolant = new LinearInterpolant(\r\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t1, _controlInterpolantsResultBuffer );\r\n\r\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\treturn interpolant;\r\n\r\n\t}\r\n\r\n\t_takeBackControlInterpolant( interpolant ) {\r\n\r\n\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t}\r\n\r\n\t// return an action for a clip optionally using a custom root target\r\n\t// object (this method allocates a lot of dynamic memory in case a\r\n\t// previously unknown clip/root combination is specified)\r\n\tclipAction( clip, optionalRoot, blendMode ) {\r\n\r\n\t\tconst root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid;\r\n\r\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\r\n\r\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\r\n\r\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\r\n\t\tlet prototypeAction = null;\r\n\r\n\t\tif ( blendMode === undefined ) {\r\n\r\n\t\t\tif ( clipObject !== null ) {\r\n\r\n\t\t\t\tblendMode = clipObject.blendMode;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tblendMode = NormalAnimationBlendMode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\r\n\r\n\t\t\t\treturn existingAction;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t// the bindings again but can just copy\r\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t// also, take the clip from the prototype action\r\n\t\t\tif ( clipObject === null )\r\n\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t}\r\n\r\n\t\t// clip must be known when specified via string\r\n\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t// allocate all resources required to run it\r\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\r\n\r\n\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t// and make the action known to the memory manager\r\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\treturn newAction;\r\n\r\n\t}\r\n\r\n\t// get an existing action\r\n\texistingAction( clip, optionalRoot ) {\r\n\r\n\t\tconst root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// deactivates all previously scheduled actions\r\n\tstopAllAction() {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions;\r\n\r\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\r\n\r\n\t\t\tactions[ i ].stop();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// advance the time and update apply the animation\r\n\tupdate( deltaTime ) {\r\n\r\n\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\ttime = this.time += deltaTime,\r\n\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t// run active actions\r\n\r\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tconst action = actions[ i ];\r\n\r\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Allows you to seek to a specific time in an animation.\r\n\tsetTime( timeInSeconds ) {\r\n\r\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\r\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\r\n\r\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\r\n\r\n\t\t}\r\n\r\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\r\n\r\n\t}\r\n\r\n\t// return this mixer's root target object\r\n\tgetRoot() {\r\n\r\n\t\treturn this._root;\r\n\r\n\t}\r\n\r\n\t// free all resources specific to a particular clip\r\n\tuncacheClip( clip ) {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tclipUuid = clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t// just throw away\r\n\r\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst action = actionsToRemove[ i ];\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\tconst cacheIndex = action._cacheIndex,\r\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\tactions.pop();\r\n\r\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// free all resources specific to a particular root target object\r\n\tuncacheRoot( root ) {\r\n\r\n\t\tconst rootUuid = root.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tfor ( const clipUuid in actionsByClip ) {\r\n\r\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\tfor ( const trackName in bindingByName ) {\r\n\r\n\t\t\t\tconst binding = bindingByName[ trackName ];\r\n\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// remove a targeted clip from the cache\r\n\tuncacheAction( clip, optionalRoot ) {\r\n\r\n\t\tconst action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\tif ( action !== null ) {\r\n\r\n\t\t\tthis._deactivateAction( action );\r\n\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uniform {\r\n\r\n\tconstructor( value ) {\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _id = 0;\r\n\r\nclass UniformsGroup extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isUniformsGroup = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis.uniforms = [];\r\n\r\n\t}\r\n\r\n\tadd( uniform ) {\r\n\r\n\t\tthis.uniforms.push( uniform );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremove( uniform ) {\r\n\r\n\t\tconst index = this.uniforms.indexOf( uniform );\r\n\r\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetName( name ) {\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\t\tthis.usage = source.usage;\r\n\r\n\t\tconst uniformsSource = source.uniforms;\r\n\r\n\t\tthis.uniforms.length = 0;\r\n\r\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\r\n\r\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\r\n\r\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\r\n\r\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\r\n\r\n\t\tsuper( array, stride );\r\n\r\n\t\tthis.isInstancedInterleavedBuffer = true;\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( data ) {\r\n\r\n\t\tconst ib = super.clone( data );\r\n\r\n\t\tib.meshPerAttribute = this.meshPerAttribute;\r\n\r\n\t\treturn ib;\r\n\r\n\t}\r\n\r\n\ttoJSON( data ) {\r\n\r\n\t\tconst json = super.toJSON( data );\r\n\r\n\t\tjson.isInstancedInterleavedBuffer = true;\r\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\r\n\r\n\t\treturn json;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass GLBufferAttribute {\r\n\r\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\r\n\r\n\t\tthis.isGLBufferAttribute = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.buffer = buffer;\r\n\t\tthis.type = type;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.elementSize = elementSize;\r\n\t\tthis.count = count;\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tsetBuffer( buffer ) {\r\n\r\n\t\tthis.buffer = buffer;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetType( type, elementSize ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.elementSize = elementSize;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetItemSize( itemSize ) {\r\n\r\n\t\tthis.itemSize = itemSize;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetCount( count ) {\r\n\r\n\t\tthis.count = count;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _matrix = /*@__PURE__*/ new Matrix4();\r\n\r\nclass Raycaster {\r\n\r\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\r\n\r\n\t\tthis.ray = new Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\t\tthis.camera = null;\r\n\t\tthis.layers = new Layers();\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: { threshold: 1 },\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tset( origin, direction ) {\r\n\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.ray.set( origin, direction );\r\n\r\n\t}\r\n\r\n\tsetFromCamera( coords, camera ) {\r\n\r\n\t\tif ( camera.isPerspectiveCamera ) {\r\n\r\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\t\tthis.camera = camera;\r\n\r\n\t\t} else if ( camera.isOrthographicCamera ) {\r\n\r\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\t\tthis.camera = camera;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetFromXRController( controller ) {\r\n\r\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\r\n\r\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\r\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tintersectObject( object, recursive = true, intersects = [] ) {\r\n\r\n\t\tintersect( object, this, intersects, recursive );\r\n\r\n\t\tintersects.sort( ascSort );\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\r\n\r\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t}\r\n\r\n\t\tintersects.sort( ascSort );\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction ascSort( a, b ) {\r\n\r\n\treturn a.distance - b.distance;\r\n\r\n}\r\n\r\nfunction intersect( object, raycaster, intersects, recursive ) {\r\n\r\n\tlet propagate = true;\r\n\r\n\tif ( object.layers.test( raycaster.layers ) ) {\r\n\r\n\t\tconst result = object.raycast( raycaster, intersects );\r\n\r\n\t\tif ( result === false ) propagate = false;\r\n\r\n\t}\r\n\r\n\tif ( propagate === true && recursive === true ) {\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\r\n * theta (the azimuthal angle) is measured from the positive z-axis.\r\n */\r\nclass Spherical {\r\n\r\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi; // polar angle\r\n\t\tthis.theta = theta; // azimuthal angle\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi;\r\n\t\tthis.theta = theta;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tthis.radius = other.radius;\r\n\t\tthis.phi = other.phi;\r\n\t\tthis.theta = other.theta;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// restrict phi to be between EPS and PI-EPS\r\n\tmakeSafe() {\r\n\r\n\t\tconst EPS = 0.000001;\r\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t}\r\n\r\n\tsetFromCartesianCoords( x, y, z ) {\r\n\r\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\tthis.theta = 0;\r\n\t\t\tthis.phi = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n */\r\n\r\nclass Cylindrical {\r\n\r\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\r\n\r\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\r\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\tthis.y = y; // height above the x-z plane\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( radius, theta, y ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.theta = theta;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tthis.radius = other.radius;\r\n\t\tthis.theta = other.theta;\r\n\t\tthis.y = other.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t}\r\n\r\n\tsetFromCartesianCoords( x, y, z ) {\r\n\r\n\t\tthis.radius = Math.sqrt( x * x + z * z );\r\n\t\tthis.theta = Math.atan2( x, z );\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$4 = /*@__PURE__*/ new Vector2();\r\n\r\nclass Box2 {\r\n\r\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.isBox2 = true;\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _startP = /*@__PURE__*/ new Vector3();\r\nconst _startEnd = /*@__PURE__*/ new Vector3();\r\n\r\nclass Line3 {\r\n\r\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\r\n\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\r\n\t}\r\n\r\n\tset( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tdelta( target ) {\r\n\r\n\t\treturn target.subVectors( this.end, this.start );\r\n\r\n\t}\r\n\r\n\tdistanceSq() {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t}\r\n\r\n\tdistance() {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t}\r\n\r\n\tat( t, target ) {\r\n\r\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t}\r\n\r\n\tclosestPointToPointParameter( point, clampToLine ) {\r\n\r\n\t\t_startP.subVectors( point, this.start );\r\n\t\t_startEnd.subVectors( this.end, this.start );\r\n\r\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\r\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\r\n\r\n\t\tlet t = startEnd_startP / startEnd2;\r\n\r\n\t\tif ( clampToLine ) {\r\n\r\n\t\t\tt = clamp( t, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, clampToLine, target ) {\r\n\r\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$3 = /*@__PURE__*/ new Vector3();\r\n\r\nclass SpotLightHelper extends Object3D {\r\n\r\n\tconstructor( light, color ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'SpotLightHelper';\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tconst positions = [\r\n\t\t\t0, 0, 0, \t0, 0, 1,\r\n\t\t\t0, 0, 0, \t1, 0, 1,\r\n\t\t\t0, 0, 0,\t- 1, 0, 1,\r\n\t\t\t0, 0, 0, \t0, 1, 1,\r\n\t\t\t0, 0, 0, \t0, - 1, 1\r\n\t\t];\r\n\r\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\r\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\t\tpositions.push(\r\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\r\n\r\n\t\tthis.cone = new LineSegments( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\t\tthis.light.target.updateWorldMatrix( true, false );\r\n\r\n\t\t// update the local matrix based on the parent and light target transforms\r\n\t\tif ( this.parent ) {\r\n\r\n\t\t\tthis.parent.updateWorldMatrix( true );\r\n\r\n\t\t\tthis.matrix\r\n\t\t\t\t.copy( this.parent.matrixWorld )\r\n\t\t\t\t.invert()\r\n\t\t\t\t.multiply( this.light.matrixWorld );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\r\n\r\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( _vector$3 );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.cone.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.cone.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$2 = /*@__PURE__*/ new Vector3();\r\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\r\n\r\n\r\nclass SkeletonHelper extends LineSegments {\r\n\r\n\tconstructor( object ) {\r\n\r\n\t\tconst bones = getBoneList( object );\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\tconst color1 = new Color( 0, 0, 1 );\r\n\t\tconst color2 = new Color( 0, 1, 0 );\r\n\r\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tconst bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\r\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isSkeletonHelper = true;\r\n\r\n\t\tthis.type = 'SkeletonHelper';\r\n\r\n\t\tthis.root = object;\r\n\t\tthis.bones = bones;\r\n\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tconst bones = this.bones;\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst position = geometry.getAttribute( 'position' );\r\n\r\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\r\n\r\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tconst bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\r\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\r\n\r\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\r\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\r\n\r\n\t\t\t\tj += 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction getBoneList( object ) {\r\n\r\n\tconst boneList = [];\r\n\r\n\tif ( object.isBone === true ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n}\r\n\r\nclass PointLightHelper extends Mesh {\r\n\r\n\tconstructor( light, sphereSize, color ) {\r\n\r\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\r\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'PointLightHelper';\r\n\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\r\n\t\t/*\r\n\t// TODO: delete this comment?\r\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tconst d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tconst d = this.light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$1 = /*@__PURE__*/ new Vector3();\r\nconst _color1 = /*@__PURE__*/ new Color();\r\nconst _color2 = /*@__PURE__*/ new Color();\r\n\r\nclass HemisphereLightHelper extends Object3D {\r\n\r\n\tconstructor( light, size, color ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'HemisphereLightHelper';\r\n\r\n\t\tconst geometry = new OctahedronGeometry( size );\r\n\t\tgeometry.rotateY( Math.PI * 0.5 );\r\n\r\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\r\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\r\n\r\n\t\tconst position = geometry.getAttribute( 'position' );\r\n\t\tconst colors = new Float32Array( position.count * 3 );\r\n\r\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n\r\n\t\tthis.add( new Mesh( geometry, this.material ) );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst mesh = this.children[ 0 ];\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\r\n\r\n\t\t\t_color1.copy( this.light.color );\r\n\t\t\t_color2.copy( this.light.groundColor );\r\n\r\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\r\n\r\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolors.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\r\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass GridHelper extends LineSegments {\r\n\r\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\r\n\r\n\t\tcolor1 = new Color( color1 );\r\n\t\tcolor2 = new Color( color2 );\r\n\r\n\t\tconst center = divisions / 2;\r\n\t\tconst step = size / divisions;\r\n\t\tconst halfSize = size / 2;\r\n\r\n\t\tconst vertices = [], colors = [];\r\n\r\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\r\n\r\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\r\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\r\n\r\n\t\t\tconst color = i === center ? color1 : color2;\r\n\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'GridHelper';\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PolarGridHelper extends LineSegments {\r\n\r\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\r\n\r\n\t\tcolor1 = new Color( color1 );\r\n\t\tcolor2 = new Color( color2 );\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\t// create the sectors\r\n\r\n\t\tif ( sectors > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\r\n\r\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tconst x = Math.sin( v ) * radius;\r\n\t\t\t\tconst z = Math.cos( v ) * radius;\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\r\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// create the rings\r\n\r\n\t\tfor ( let i = 0; i < rings; i ++ ) {\r\n\r\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tconst r = radius - ( radius / rings * i );\r\n\r\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\r\n\r\n\t\t\t\t// first vertex\r\n\r\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tlet x = Math.sin( v ) * r;\r\n\t\t\t\tlet z = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t\t// second vertex\r\n\r\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'PolarGridHelper';\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\nconst _v3 = /*@__PURE__*/ new Vector3();\r\n\r\nclass DirectionalLightHelper extends Object3D {\r\n\r\n\tconstructor( light, size, color ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'DirectionalLightHelper';\r\n\r\n\t\tif ( size === undefined ) size = 1;\r\n\r\n\t\tlet geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\r\n\t\t\t- size, size, 0,\r\n\t\t\tsize, size, 0,\r\n\t\t\tsize, - size, 0,\r\n\t\t\t- size, - size, 0,\r\n\t\t\t- size, size, 0\r\n\t\t], 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\r\n\r\n\t\tthis.lightPlane = new Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\r\n\t\tgeometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\t\tthis.targetLine = new Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\t\tthis.light.target.updateWorldMatrix( true, false );\r\n\r\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t_v3.subVectors( _v2, _v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( _v2 );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.lightPlane.material.color.set( this.color );\r\n\t\t\tthis.targetLine.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\r\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\tthis.targetLine.lookAt( _v2 );\r\n\t\tthis.targetLine.scale.z = _v3.length();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\nconst _camera = /*@__PURE__*/ new Camera();\r\n\r\n/**\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\r\n */\r\n\r\nclass CameraHelper extends LineSegments {\r\n\r\n\tconstructor( camera ) {\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\tconst pointMap = {};\r\n\r\n\t\t// near\r\n\r\n\t\taddLine( 'n1', 'n2' );\r\n\t\taddLine( 'n2', 'n4' );\r\n\t\taddLine( 'n4', 'n3' );\r\n\t\taddLine( 'n3', 'n1' );\r\n\r\n\t\t// far\r\n\r\n\t\taddLine( 'f1', 'f2' );\r\n\t\taddLine( 'f2', 'f4' );\r\n\t\taddLine( 'f4', 'f3' );\r\n\t\taddLine( 'f3', 'f1' );\r\n\r\n\t\t// sides\r\n\r\n\t\taddLine( 'n1', 'f1' );\r\n\t\taddLine( 'n2', 'f2' );\r\n\t\taddLine( 'n3', 'f3' );\r\n\t\taddLine( 'n4', 'f4' );\r\n\r\n\t\t// cone\r\n\r\n\t\taddLine( 'p', 'n1' );\r\n\t\taddLine( 'p', 'n2' );\r\n\t\taddLine( 'p', 'n3' );\r\n\t\taddLine( 'p', 'n4' );\r\n\r\n\t\t// up\r\n\r\n\t\taddLine( 'u1', 'u2' );\r\n\t\taddLine( 'u2', 'u3' );\r\n\t\taddLine( 'u3', 'u1' );\r\n\r\n\t\t// target\r\n\r\n\t\taddLine( 'c', 't' );\r\n\t\taddLine( 'p', 'c' );\r\n\r\n\t\t// cross\r\n\r\n\t\taddLine( 'cn1', 'cn2' );\r\n\t\taddLine( 'cn3', 'cn4' );\r\n\r\n\t\taddLine( 'cf1', 'cf2' );\r\n\t\taddLine( 'cf3', 'cf4' );\r\n\r\n\t\tfunction addLine( a, b ) {\r\n\r\n\t\t\taddPoint( a );\r\n\t\t\taddPoint( b );\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPoint( id ) {\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tcolors.push( 0, 0, 0 );\r\n\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'CameraHelper';\r\n\r\n\t\tthis.camera = camera;\r\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.pointMap = pointMap;\r\n\r\n\t\tthis.update();\r\n\r\n\t\t// colors\r\n\r\n\t\tconst colorFrustum = new Color( 0xffaa00 );\r\n\t\tconst colorCone = new Color( 0xff0000 );\r\n\t\tconst colorUp = new Color( 0x00aaff );\r\n\t\tconst colorTarget = new Color( 0xffffff );\r\n\t\tconst colorCross = new Color( 0x333333 );\r\n\r\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\r\n\r\n\t}\r\n\r\n\tsetColors( frustum, cone, up, target, cross ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\r\n\r\n\t\t// near\r\n\r\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\r\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\r\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\r\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\r\n\r\n\t\t// far\r\n\r\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\r\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\r\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\r\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\r\n\r\n\t\t// sides\r\n\r\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\r\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\r\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\r\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\r\n\r\n\t\t// cone\r\n\r\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\r\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\r\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\r\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\r\n\r\n\t\t// up\r\n\r\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\r\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\r\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\r\n\r\n\t\t// target\r\n\r\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\r\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\r\n\r\n\t\t// cross\r\n\r\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\r\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\r\n\r\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\r\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\r\n\r\n\t\tcolorAttribute.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst pointMap = this.pointMap;\r\n\r\n\t\tconst w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix inverse\r\n\t\t// world matrix must be identity\r\n\r\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\r\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\r\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\r\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\r\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\r\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\r\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\r\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\r\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\r\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\r\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\r\n\r\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\r\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\r\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\r\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\r\n\r\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\r\n\r\n\t_vector.set( x, y, z ).unproject( camera );\r\n\r\n\tconst points = pointMap[ point ];\r\n\r\n\tif ( points !== undefined ) {\r\n\r\n\t\tconst position = geometry.getAttribute( 'position' );\r\n\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _box = /*@__PURE__*/ new Box3();\r\n\r\nclass BoxHelper extends LineSegments {\r\n\r\n\tconstructor( object, color = 0xffff00 ) {\r\n\r\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tconst positions = new Float32Array( 8 * 3 );\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.type = 'BoxHelper';\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tupdate( object ) {\r\n\r\n\t\tif ( object !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\t_box.setFromObject( this.object );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _box.isEmpty() ) return;\r\n\r\n\t\tconst min = _box.min;\r\n\t\tconst max = _box.max;\r\n\r\n\t\t/*\r\n\t\t\t5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tconst position = this.geometry.attributes.position;\r\n\t\tconst array = position.array;\r\n\r\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\r\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\r\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\r\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tsetFromObject( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.update();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.object = source.object;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Box3Helper extends LineSegments {\r\n\r\n\tconstructor( box, color = 0xffff00 ) {\r\n\r\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\r\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tthis.type = 'Box3Helper';\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tconst box = this.box;\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tbox.getCenter( this.position );\r\n\r\n\t\tbox.getSize( this.scale );\r\n\r\n\t\tthis.scale.multiplyScalar( 0.5 );\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PlaneHelper extends Line {\r\n\r\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\r\n\r\n\t\tconst color = hex;\r\n\r\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\r\n\t\tthis.type = 'PlaneHelper';\r\n\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis.size = size;\r\n\r\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\r\n\r\n\t\tconst geometry2 = new BufferGeometry();\r\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tthis.position.set( 0, 0, 0 );\r\n\r\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\r\n\r\n\t\tthis.lookAt( this.plane.normal );\r\n\r\n\t\tthis.translateZ( - this.plane.constant );\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _axis = /*@__PURE__*/ new Vector3();\r\nlet _lineGeometry, _coneGeometry;\r\n\r\nclass ArrowHelper extends Object3D {\r\n\r\n\t// dir is assumed to be normalized\r\n\r\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'ArrowHelper';\r\n\r\n\t\tif ( _lineGeometry === undefined ) {\r\n\r\n\t\t\t_lineGeometry = new BufferGeometry();\r\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n\tsetDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tconst radians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\r\n\r\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\r\n\t\tthis.line.updateMatrix();\r\n\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\r\n\t}\r\n\r\n\tsetColor( color ) {\r\n\r\n\t\tthis.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source, false );\r\n\r\n\t\tthis.line.copy( source.line );\r\n\t\tthis.cone.copy( source.cone );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.line.geometry.dispose();\r\n\t\tthis.line.material.dispose();\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AxesHelper extends LineSegments {\r\n\r\n\tconstructor( size = 1 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t0, 0, 0,\tsize, 0, 0,\r\n\t\t\t0, 0, 0,\t0, size, 0,\r\n\t\t\t0, 0, 0,\t0, 0, size\r\n\t\t];\r\n\r\n\t\tconst colors = [\r\n\t\t\t1, 0, 0,\t1, 0.6, 0,\r\n\t\t\t0, 1, 0,\t0.6, 1, 0,\r\n\t\t\t0, 0, 1,\t0, 0.6, 1\r\n\t\t];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'AxesHelper';\r\n\r\n\t}\r\n\r\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\r\n\r\n\t\tconst color = new Color();\r\n\t\tconst array = this.geometry.attributes.color.array;\r\n\r\n\t\tcolor.set( xAxisColor );\r\n\t\tcolor.toArray( array, 0 );\r\n\t\tcolor.toArray( array, 3 );\r\n\r\n\t\tcolor.set( yAxisColor );\r\n\t\tcolor.toArray( array, 6 );\r\n\t\tcolor.toArray( array, 9 );\r\n\r\n\t\tcolor.set( zAxisColor );\r\n\t\tcolor.toArray( array, 12 );\r\n\t\tcolor.toArray( array, 15 );\r\n\r\n\t\tthis.geometry.attributes.color.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ShapePath {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'ShapePath';\r\n\r\n\t\tthis.color = new Color();\r\n\r\n\t\tthis.subPaths = [];\r\n\t\tthis.currentPath = null;\r\n\r\n\t}\r\n\r\n\tmoveTo( x, y ) {\r\n\r\n\t\tthis.currentPath = new Path();\r\n\t\tthis.subPaths.push( this.currentPath );\r\n\t\tthis.currentPath.moveTo( x, y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlineTo( x, y ) {\r\n\r\n\t\tthis.currentPath.lineTo( x, y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsplineThru( pts ) {\r\n\r\n\t\tthis.currentPath.splineThru( pts );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoShapes( isCCW ) {\r\n\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\tconst shapes = [];\r\n\r\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\tconst tmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\tconst polyLen = inPolygon.length;\r\n\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tlet inside = false;\r\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\r\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn\tinside;\r\n\r\n\t\t}\r\n\r\n\t\tconst isClockWise = ShapeUtils.isClockWise;\r\n\r\n\t\tconst subPaths = this.subPaths;\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\tlet solid, tmpPath, tmpShape;\r\n\t\tconst shapes = [];\r\n\r\n\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new Shape();\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\tconst betterShapeHoles = [];\r\n\t\tconst newShapes = [];\r\n\t\tlet newShapeHoles = [];\r\n\t\tlet mainIdx = 0;\r\n\t\tlet tmpPoints;\r\n\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\tif ( solid ) {\r\n\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\tlet ambiguous = false;\r\n\t\t\tlet toChange = 0;\r\n\r\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\tconst ho = sho[ hIdx ];\r\n\t\t\t\t\tlet hole_unassigned = true;\r\n\r\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\r\n\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\r\n\r\n\t\t\t\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet tmpHoles;\r\n\r\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\r\n\r\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\r\n\r\n\t\tsuper( width, height, { ...options, count } );\r\n\r\n\t\tthis.isWebGLMultipleRenderTargets = true;\r\n\r\n\t}\r\n\r\n\tget texture() {\r\n\r\n\t\treturn this.textures;\r\n\r\n\t}\r\n\r\n}\r\n\r\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\r\n\t\trevision: REVISION,\r\n\t} } ) );\r\n\r\n}\r\n\r\nif ( typeof window !== 'undefined' ) {\r\n\r\n\tif ( window.__THREE__ ) {\r\n\r\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\r\n\r\n\t} else {\r\n\r\n\t\twindow.__THREE__ = REVISION;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\r\n","// Rest of the OrbitControls.js code...\r\nimport {\r\n\tEventDispatcher,\r\n\tMOUSE,\r\n\tQuaternion,\r\n\tSpherical,\r\n\tTOUCH,\r\n\tVector2,\r\n\tVector3,\r\n\tPlane,\r\n\tRay,\r\n\tMathUtils\r\n} from 'three';\r\n\r\n// OrbitControls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\nconst _changeEvent = { type: 'change' };\r\nconst _startEvent = { type: 'start' };\r\nconst _endEvent = { type: 'end' };\r\nconst _ray = new Ray();\r\nconst _plane = new Plane();\r\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\r\n\r\nclass OrbitControls extends EventDispatcher {\r\n\r\n\tconstructor( object, domElement ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.domElement = domElement;\r\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\r\n\t\t// Set to false to disable this control\r\n\t\tthis.enabled = true;\r\n\r\n\t\t// \"target\" sets the location of focus, where the object orbits around\r\n\t\tthis.target = new Vector3();\r\n\r\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\r\n\t\tthis.cursor = new Vector3();\r\n\r\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\t\tthis.minDistance = 0;\r\n\t\tthis.maxDistance = Infinity;\r\n\r\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\r\n\t\tthis.minZoom = 0;\r\n\t\tthis.maxZoom = Infinity;\r\n\r\n\t\t// Limit camera target within a spherical area around the cursor\r\n\t\tthis.minTargetRadius = 0;\r\n\t\tthis.maxTargetRadius = Infinity;\r\n\r\n\t\t// How far you can orbit vertically, upper and lower limits.\r\n\t\t// Range is 0 to Math.PI radians.\r\n\t\tthis.minPolarAngle = 0; // radians\r\n\t\tthis.maxPolarAngle = Math.PI; // radians\r\n\r\n\t\t// How far you can orbit horizontally, upper and lower limits.\r\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\r\n\t\tthis.minAzimuthAngle = - Infinity; // radians\r\n\t\tthis.maxAzimuthAngle = Infinity; // radians\r\n\r\n\t\t// Set to true to enable damping (inertia)\r\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.enableDamping = false;\r\n\t\tthis.dampingFactor = 0.05;\r\n\r\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t\t// Set to false to disable zooming\r\n\t\tthis.enableZoom = true;\r\n\t\tthis.zoomSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable rotating\r\n\t\tthis.enableRotate = true;\r\n\t\tthis.rotateSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable panning\r\n\t\tthis.enablePan = true;\r\n\t\tthis.panSpeed = 1.0;\r\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\r\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\r\n\t\tthis.zoomToCursor = false;\r\n\r\n\t\t// Set to true to automatically rotate around the target\r\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.autoRotate = false;\r\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\r\n\r\n\t\t// The four arrow keys\r\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\r\n\r\n\t\t// Mouse buttons\r\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\r\n\r\n\t\t// Touch fingers\r\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\r\n\r\n\t\t// for reset\r\n\t\tthis.target0 = this.target.clone();\r\n\t\tthis.position0 = this.object.position.clone();\r\n\t\tthis.zoom0 = this.object.zoom;\r\n\r\n\t\t// the target DOM element for key events\r\n\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t//\r\n\t\t// public methods\r\n\t\t//\r\n\r\n\t\tthis.getPolarAngle = function () {\r\n\r\n\t\t\treturn spherical.phi;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getAzimuthalAngle = function () {\r\n\r\n\t\t\treturn spherical.theta;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDistance = function () {\r\n\r\n\t\t\treturn this.object.position.distanceTo( this.target );\r\n\r\n\t\t};\r\n\r\n\t\tthis.listenToKeyEvents = function ( domElement ) {\r\n\r\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = domElement;\r\n\r\n\t\t};\r\n\r\n\t\tthis.stopListenToKeyEvents = function () {\r\n\r\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t};\r\n\r\n\t\tthis.saveState = function () {\r\n\r\n\t\t\tscope.target0.copy( scope.target );\r\n\t\t\tscope.position0.copy( scope.object.position );\r\n\t\t\tscope.zoom0 = scope.object.zoom;\r\n\r\n\t\t};\r\n\r\n\t\tthis.reset = function () {\r\n\r\n\t\t\tscope.target.copy( scope.target0 );\r\n\t\t\tscope.object.position.copy( scope.position0 );\r\n\t\t\tscope.object.zoom = scope.zoom0;\r\n\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t\tstate = STATE.NONE;\r\n\r\n\t\t};\r\n\r\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\r\n\t\tthis.update = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\t// so camera.up is the orbit axis\r\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\r\n\t\t\tconst quatInverse = quat.clone().invert();\r\n\r\n\t\t\tconst lastPosition = new Vector3();\r\n\t\t\tconst lastQuaternion = new Quaternion();\r\n\t\t\tconst lastTargetPosition = new Vector3();\r\n\r\n\t\t\tconst twoPI = 2 * Math.PI;\r\n\r\n\t\t\treturn function update( deltaTime = null ) {\r\n\r\n\t\t\t\tconst position = scope.object.position;\r\n\r\n\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\r\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quat );\r\n\r\n\t\t\t\t// angle from z-axis around y-axis\r\n\t\t\t\tspherical.setFromVector3( offset );\r\n\r\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\r\n\r\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scope.enableDamping ) {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict theta to be between desired limits\r\n\r\n\t\t\t\tlet min = scope.minAzimuthAngle;\r\n\t\t\t\tlet max = scope.maxAzimuthAngle;\r\n\r\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\r\n\r\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\r\n\r\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\r\n\r\n\t\t\t\t\tif ( min <= max ) {\r\n\r\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\r\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\r\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict phi to be between desired limits\r\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\r\n\r\n\t\t\t\tspherical.makeSafe();\r\n\r\n\r\n\t\t\t\t// move target to panned location\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tscope.target.add( panOffset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\r\n\t\t\t\tscope.target.sub( scope.cursor );\r\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\r\n\t\t\t\tscope.target.add( scope.cursor );\r\n\r\n\t\t\t\tlet zoomChanged = false;\r\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\r\n\t\t\t\t// we adjust zoom later in these cases\r\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconst prevRadius = spherical.radius;\r\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\r\n\t\t\t\t\tzoomChanged = prevRadius != spherical.radius;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset.setFromSpherical( spherical );\r\n\r\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quatInverse );\r\n\r\n\t\t\t\tposition.copy( scope.target ).add( offset );\r\n\r\n\t\t\t\tscope.object.lookAt( scope.target );\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\r\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adjust camera position\r\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\r\n\r\n\t\t\t\t\tlet newRadius = null;\r\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t\t\t// move the camera down the pointer ray\r\n\t\t\t\t\t\t// this method avoids floating point error\r\n\t\t\t\t\t\tconst prevRadius = offset.length();\r\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\r\n\r\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\r\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\r\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\r\n\r\n\t\t\t\t\t\tzoomChanged = !! radiusDelta;\r\n\r\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\r\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\r\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\r\n\r\n\t\t\t\t\t\tconst prevZoom = scope.object.zoom;\r\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\r\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\r\n\r\n\t\t\t\t\t\tzoomChanged = prevZoom !== scope.object.zoom;\r\n\r\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\r\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\r\n\r\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\r\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\r\n\r\n\t\t\t\t\t\tnewRadius = offset.length();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\r\n\t\t\t\t\t\tscope.zoomToCursor = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// handle the placement of the target\r\n\t\t\t\t\tif ( newRadius !== null ) {\r\n\r\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\r\n\r\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\r\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\r\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\r\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\r\n\t\t\t\t\t\t\t\t.add( scope.object.position );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\r\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\r\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\r\n\r\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\r\n\t\t\t\t\t\t\t// extremely large values\r\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\r\n\r\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\r\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\tconst prevZoom = scope.object.zoom;\r\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\r\n\r\n\t\t\t\t\tif ( prevZoom !== scope.object.zoom ) {\r\n\r\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscale = 1;\r\n\t\t\t\tperformCursorZoom = false;\r\n\r\n\t\t\t\t// update condition is:\r\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\r\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n\t\t\t\tif ( zoomChanged ||\r\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\r\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\r\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > EPS ) {\r\n\r\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\t\t\tlastPosition.copy( scope.object.position );\r\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\r\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\r\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\r\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\r\n\r\n\t\t\tdocument.removeEventListener( 'keydown', interceptControlDown, { capture: true } );\r\n\r\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\r\n\r\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\t\tscope._domElementKeyEvents = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\t\t// internals\r\n\t\t//\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst STATE = {\r\n\t\t\tNONE: - 1,\r\n\t\t\tROTATE: 0,\r\n\t\t\tDOLLY: 1,\r\n\t\t\tPAN: 2,\r\n\t\t\tTOUCH_ROTATE: 3,\r\n\t\t\tTOUCH_PAN: 4,\r\n\t\t\tTOUCH_DOLLY_PAN: 5,\r\n\t\t\tTOUCH_DOLLY_ROTATE: 6\r\n\t\t};\r\n\r\n\t\tlet state = STATE.NONE;\r\n\r\n\t\tconst EPS = 0.000001;\r\n\r\n\t\t// current position in spherical coordinates\r\n\t\tconst spherical = new Spherical();\r\n\t\tconst sphericalDelta = new Spherical();\r\n\r\n\t\tlet scale = 1;\r\n\t\tconst panOffset = new Vector3();\r\n\r\n\t\tconst rotateStart = new Vector2();\r\n\t\tconst rotateEnd = new Vector2();\r\n\t\tconst rotateDelta = new Vector2();\r\n\r\n\t\tconst panStart = new Vector2();\r\n\t\tconst panEnd = new Vector2();\r\n\t\tconst panDelta = new Vector2();\r\n\r\n\t\tconst dollyStart = new Vector2();\r\n\t\tconst dollyEnd = new Vector2();\r\n\t\tconst dollyDelta = new Vector2();\r\n\r\n\t\tconst dollyDirection = new Vector3();\r\n\t\tconst mouse = new Vector2();\r\n\t\tlet performCursorZoom = false;\r\n\r\n\t\tconst pointers = [];\r\n\t\tconst pointerPositions = {};\r\n\r\n\t\tlet controlActive = false;\r\n\r\n\t\tfunction getAutoRotationAngle( deltaTime ) {\r\n\r\n\t\t\tif ( deltaTime !== null ) {\r\n\r\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getZoomScale( delta ) {\r\n\r\n\t\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\r\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalizedDelta );\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateLeft( angle ) {\r\n\r\n\t\t\tsphericalDelta.theta -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateUp( angle ) {\r\n\r\n\t\t\tsphericalDelta.phi -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tconst panLeft = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panLeft( distance, objectMatrix ) {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\r\n\t\t\t\tv.multiplyScalar( - distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tconst panUp = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panUp( distance, objectMatrix ) {\r\n\r\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\r\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv.multiplyScalar( distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\t// deltaX and deltaY are in pixels; right and down are positive\r\n\t\tconst pan = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\treturn function pan( deltaX, deltaY ) {\r\n\r\n\t\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t\t// perspective\r\n\t\t\t\t\tconst position = scope.object.position;\r\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\t\t\t\t\tlet targetDistance = offset.length();\r\n\r\n\t\t\t\t\t// half of the fov is center to top of screen\r\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\r\n\r\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\r\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\r\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\t// orthographic\r\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\r\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// camera neither orthographic nor perspective\r\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\r\n\t\t\t\t\tscope.enablePan = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tfunction dollyOut( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscale /= dollyScale;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction dollyIn( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscale *= dollyScale;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateZoomParameters( x, y ) {\r\n\r\n\t\t\tif ( ! scope.zoomToCursor ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tperformCursorZoom = true;\r\n\r\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\r\n\t\t\tconst dx = x - rect.left;\r\n\t\t\tconst dy = y - rect.top;\r\n\t\t\tconst w = rect.width;\r\n\t\t\tconst h = rect.height;\r\n\r\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\r\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\r\n\r\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfunction clampDistance( dist ) {\r\n\r\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event callbacks - update the object state\r\n\t\t//\r\n\r\n\t\tfunction handleMouseDownRotate( event ) {\r\n\r\n\t\t\trotateStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownDolly( event ) {\r\n\r\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\r\n\t\t\tdollyStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownPan( event ) {\r\n\r\n\t\t\tpanStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveRotate( event ) {\r\n\r\n\t\t\trotateEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveDolly( event ) {\r\n\r\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\r\n\r\n\t\t\tif ( dollyDelta.y > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\r\n\r\n\t\t\t} else if ( dollyDelta.y < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMovePan( event ) {\r\n\r\n\t\t\tpanEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseWheel( event ) {\r\n\r\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\r\n\r\n\t\t\tif ( event.deltaY < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\r\n\r\n\t\t\t} else if ( event.deltaY > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleKeyDown( event ) {\r\n\r\n\t\t\tlet needsUpdate = false;\r\n\r\n\t\t\tswitch ( event.code ) {\r\n\r\n\t\t\t\tcase scope.keys.UP:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.BOTTOM:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.LEFT:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.RIGHT:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t// prevent the browser from scrolling on cursor keys\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartRotate( event ) {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\trotateStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartPan( event ) {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\tpanStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDolly( event ) {\r\n\r\n\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\tconst dx = event.pageX - position.x;\r\n\t\t\tconst dy = event.pageY - position.y;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyStart.set( 0, distance );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyPan( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyRotate( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveRotate( event ) {\r\n\r\n\t\t\tif ( pointers.length == 1 ) {\r\n\r\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\trotateEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMovePan( event ) {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\tpanEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDolly( event ) {\r\n\r\n\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\tconst dx = event.pageX - position.x;\r\n\t\t\tconst dy = event.pageY - position.y;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyEnd.set( 0, distance );\r\n\r\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\r\n\r\n\t\t\tdollyOut( dollyDelta.y );\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\r\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\r\n\r\n\t\t\tupdateZoomParameters( centerX, centerY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyPan( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyRotate( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event handlers - FSM: listen for events and reset state\r\n\t\t//\r\n\r\n\t\tfunction onPointerDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( pointers.length === 0 ) {\r\n\r\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\r\n\r\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( isTrackingPointer( event ) ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\taddPointer( event );\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchStart( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseDown( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerMove( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchMove( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseMove( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerUp( event ) {\r\n\r\n\t\t\tremovePointer( event );\r\n\r\n\t\t\tswitch ( pointers.length ) {\r\n\r\n\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\r\n\r\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tconst pointerId = pointers[ 0 ];\r\n\t\t\t\t\tconst position = pointerPositions[ pointerId ];\r\n\r\n\t\t\t\t\t// minimal placeholder event - allows state correction on pointer-up\r\n\t\t\t\t\tonTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseDown( event ) {\r\n\r\n\t\t\tlet mouseAction;\r\n\r\n\t\t\tswitch ( event.button ) {\r\n\r\n\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tmouseAction = - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( mouseAction ) {\r\n\r\n\t\t\t\tcase MOUSE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownDolly( event );\r\n\r\n\t\t\t\t\tstate = STATE.DOLLY;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.ROTATE:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.PAN:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseMove( event ) {\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveRotate( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveDolly( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMovePan( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseWheel( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\thandleMouseWheel( customWheelEvent( event ) );\r\n\r\n\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t}\r\n\r\n\t\tfunction customWheelEvent( event ) {\r\n\r\n\t\t\tconst mode = event.deltaMode;\r\n\r\n\t\t\t// minimal wheel event altered to meet delta-zoom demand\r\n\t\t\tconst newEvent = {\r\n\t\t\t\tclientX: event.clientX,\r\n\t\t\t\tclientY: event.clientY,\r\n\t\t\t\tdeltaY: event.deltaY,\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase 1: // LINE_MODE\r\n\t\t\t\t\tnewEvent.deltaY *= 16;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2: // PAGE_MODE\r\n\t\t\t\t\tnewEvent.deltaY *= 100;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// detect if event was triggered by pinching\r\n\t\t\tif ( event.ctrlKey && ! controlActive ) {\r\n\r\n\t\t\t\tnewEvent.deltaY *= 10;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn newEvent;\r\n\r\n\t\t}\r\n\r\n\t\tfunction interceptControlDown( event ) {\r\n\r\n\t\t\tif ( event.key === 'Control' ) {\r\n\r\n\t\t\t\tcontrolActive = true;\r\n\r\n\r\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\r\n\r\n\t\t\t\tdocument.addEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction interceptControlUp( event ) {\r\n\r\n\t\t\tif ( event.key === 'Control' ) {\r\n\r\n\t\t\t\tcontrolActive = false;\r\n\r\n\r\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\r\n\r\n\t\t\t\tdocument.removeEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onKeyDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\r\n\r\n\t\t\thandleKeyDown( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchStart( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( pointers.length ) {\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartPan( event );\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchMove( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.TOUCH_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMovePan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyPan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextMenu( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPointer( event ) {\r\n\r\n\t\t\tpointers.push( event.pointerId );\r\n\r\n\t\t}\r\n\r\n\t\tfunction removePointer( event ) {\r\n\r\n\t\t\tdelete pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\r\n\r\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\r\n\r\n\t\t\t\t\tpointers.splice( i, 1 );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isTrackingPointer( event ) {\r\n\r\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\r\n\r\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) return true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfunction trackPointer( event ) {\r\n\r\n\t\t\tlet position = pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tif ( position === undefined ) {\r\n\r\n\t\t\t\tposition = new Vector2();\r\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.set( event.pageX, event.pageY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getSecondPointerPosition( event ) {\r\n\r\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\r\n\r\n\t\t\treturn pointerPositions[ pointerId ];\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\r\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\r\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\r\n\r\n\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\r\n\r\n\t\tdocument.addEventListener( 'keydown', interceptControlDown, { passive: true, capture: true } );\r\n\r\n\t\t// force an update at start\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OrbitControls };\r\n","import * as THREE from 'three';\r\nimport { OrbitControls } from './OrbitControls.js';\r\nimport earthTextureSrc from './textures/earth_texture4.jpg';\r\nimport civilization_359BC from './textures/civilization_359BC.png';\r\nimport civilization_338BC from './textures/civilization_338BC.png';\r\nimport civilization_335BC from './textures/civilization_335BC.png';\r\nimport civilization_333BC from './textures/civilization_333BC.png';\r\nimport civilization_331BC from './textures/civilization_331BC.png';\r\nimport civilization_330BC from './textures/civilization_330BC.png';\r\nimport civilization_327BC from './textures/civilization_327BC.png';\r\nimport civilization_325BC from './textures/civilization_325BC.png';\r\nimport civilization_323BC from './textures/civilization_323BC.png';\r\n\r\nconst civilizationMaps = {\r\n    '359': civilization_359BC,\r\n    '338': civilization_338BC,\r\n    '335': civilization_335BC,\r\n    '333': civilization_333BC,\r\n    '331': civilization_331BC,\r\n    '330': civilization_330BC,\r\n    '327': civilization_327BC,\r\n    '325': civilization_325BC,\r\n    '323': civilization_323BC,                                                                      \r\n};\r\n\r\nconst markerData = {\r\n    '115': [\r\n        { position: { lat: 41.5, lon: 12.9 }, text: 'Marker 1 in 115 AD' },\r\n        { position: { lat: 35.5, lon: 20.9 }, text: 'Marker 2 in 115 AD' },\r\n    ],\r\n    '2024': [\r\n        { position: { lat: 34.0522, lon: -118.2437 }, text: 'Marker in 2024 AD' },\r\n    ],\r\n};\r\n\r\nconst textureCache = {};\r\n\r\nlet scene, camera, renderer, controls, raycaster, globe, textureCanvas, context;\r\nlet markers = [];\r\n\r\nfunction init() {\r\n    scene = new THREE.Scene();\r\n\r\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.z = 8;\r\n\r\n    renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    window.addEventListener('resize', () => {\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n    });\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.2);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n    directionalLight.position.set(10, 10, 10);\r\n    scene.add(directionalLight);\r\n\r\n    const pointLight = new THREE.PointLight(0xffffff, 0.5);\r\n    pointLight.position.set(-10, -10, -10);\r\n    scene.add(pointLight);\r\n\r\n    textureCanvas = document.createElement('canvas');\r\n    textureCanvas.width = 7680;\r\n    textureCanvas.height = 3840;\r\n    context = textureCanvas.getContext('2d');\r\n\r\n    preloadTextures().then(() => {\r\n        drawInitialTexture();\r\n        initGlobe();\r\n        animate();\r\n    });\r\n\r\n    controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.25;\r\n    controls.rotateSpeed = 0.35;\r\n    controls.enablePan = false;\r\n    controls.mouseButtons = {\r\n        LEFT: THREE.MOUSE.ROTATE,\r\n        MIDDLE: THREE.MOUSE.DOLLY,\r\n        RIGHT: THREE.MOUSE.ROTATE\r\n    };\r\n\r\n    raycaster = new THREE.Raycaster();\r\n\r\n    renderer.domElement.addEventListener('click', onClick, false);\r\n}\r\n\r\nfunction preloadTextures() {\r\n    const promises = Object.keys(civilizationMaps).map(yearKey => {\r\n        return new Promise((resolve, reject) => {\r\n            const img = new Image();\r\n            img.src = civilizationMaps[yearKey];\r\n            img.onload = () => {\r\n                textureCache[yearKey] = img;\r\n                resolve();\r\n            };\r\n            img.onerror = reject;\r\n        });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n}\r\n\r\nfunction drawInitialTexture(callback) {\r\n    const baseMap = new Image();\r\n    baseMap.src = earthTextureSrc;\r\n    console.log('Attempting to load image:', baseMap.src);\r\n\r\n    baseMap.onload = () => {\r\n        console.log('Image loaded successfully');\r\n        context.clearRect(0, 0, textureCanvas.width, textureCanvas.height);\r\n        context.drawImage(baseMap, 0, 0, textureCanvas.width, textureCanvas.height);\r\n        globe.material.map.needsUpdate = true;\r\n        if (callback) callback();\r\n    };\r\n\r\n    baseMap.onerror = (error) => {\r\n        console.error('Error loading base map:', error);\r\n        if (callback) callback(error);\r\n    };\r\n}\r\n\r\nfunction drawTextureForYear(selectedYear) {\r\n    const yearKey = selectedYear.toString();\r\n\r\n    if (textureCache[yearKey]) {\r\n        const civilizationMap = textureCache[yearKey];\r\n        console.log('Using cached image for year:', yearKey);\r\n        context.clearRect(0, 0, textureCanvas.width, textureCanvas.height);\r\n        drawInitialTexture(() => {\r\n            context.drawImage(civilizationMap, 0, 0, textureCanvas.width, textureCanvas.height);\r\n            globe.material.map.needsUpdate = true;\r\n            drawMarkersForYear(yearKey);\r\n        });\r\n    } else {\r\n        console.error('No map available for year:', selectedYear);\r\n        drawMarkersForYear(yearKey);\r\n    }\r\n}\r\n\r\n\r\nfunction drawMarkersForYear(yearKey) {\r\n    markers.forEach(marker => scene.remove(marker));\r\n    markers = [];\r\n\r\n    if (markerData[yearKey]) {\r\n        markerData[yearKey].forEach(data => {\r\n            const marker = createMarker(data.position, data.text);\r\n            scene.add(marker);\r\n            markers.push(marker);\r\n        });\r\n    }\r\n}\r\n\r\nfunction createMarker(position, text) {\r\n    const markerGroup = new THREE.Group();\r\n\r\n    // Create the main body of the exclamation point\r\n    const cylinderGeometry = new THREE.CylinderGeometry(0.03, 0.01, 0.2, 32);\r\n    const cylinderMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000, transparent: true, opacity: 0.8 });\r\n    const cylinder = new THREE.Mesh(cylinderGeometry, cylinderMaterial);\r\n    cylinder.position.y = 0.20;\r\n\r\n    // Create the dot of the exclamation point\r\n    const sphereGeometry = new THREE.SphereGeometry(0.02, 32, 32);\r\n    const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000, transparent: true, opacity: 0.8 });\r\n    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n    sphere.position.y = 0.05;\r\n\r\n    // Add both parts to the marker group\r\n    markerGroup.add(cylinder);\r\n    markerGroup.add(sphere);\r\n\r\n    // Add a point light to illuminate the area around the marker\r\n    const pointLight = new THREE.PointLight(0xff0000, 1, 5);\r\n    markerGroup.add(pointLight);\r\n\r\n    markerGroup.position.copy(latLonToVector3(position.lat, position.lon, 3));\r\n    markerGroup.userData = { text };\r\n\r\n    return markerGroup;\r\n}\r\n\r\n\r\nfunction latLonToVector3(lat, lon, radius) {\r\n    const phi = (90 - lat) * (Math.PI / 180);\r\n    const theta = (lon + 180) * (Math.PI / 180);\r\n    \r\n    const x = -((radius) * Math.sin(phi) * Math.cos(theta));\r\n    const z = ((radius) * Math.sin(phi) * Math.sin(theta));\r\n    const y = ((radius) * Math.cos(phi));\r\n    \r\n    return new THREE.Vector3(x, y, z);\r\n}\r\n\r\nfunction initGlobe() {\r\n    const texture = new THREE.CanvasTexture(textureCanvas);\r\n    const geometry = new THREE.SphereGeometry(3, 50, 50);\r\n    const material = new THREE.MeshStandardMaterial({ map: texture });\r\n    globe = new THREE.Mesh(geometry, material);\r\n    scene.add(globe);\r\n}\r\n\r\nfunction createInfoWindow(title, text) {\r\n    // Remove existing info window\r\n    const existingWindow = document.querySelector('.info-window');\r\n    if (existingWindow) {\r\n        existingWindow.remove();\r\n    }\r\n\r\n    // Create new info window\r\n    const infoWindow = document.createElement('div');\r\n    infoWindow.className = 'info-window';\r\n    infoWindow.innerHTML = `\r\n        <h2>${title}</h2>\r\n        <p>${text}</p>\r\n        <span class=\"close-btn\">X</span>\r\n    `;\r\n\r\n    document.body.appendChild(infoWindow);\r\n\r\n    // Close button functionality\r\n    infoWindow.querySelector('.close-btn').addEventListener('click', function() {\r\n        infoWindow.remove();\r\n    });\r\n}\r\n\r\nfunction onClick(event) {\r\n    const mouse = new THREE.Vector2();\r\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n    raycaster.setFromCamera(mouse, camera);\r\n\r\n    const intersects = raycaster.intersectObjects(scene.children, true);\r\n\r\n    if (intersects.length > 0) {\r\n        const selectedObject = intersects[0].object;\r\n        if (selectedObject === globe) {\r\n            console.log('Globe clicked!');\r\n        } else {\r\n            const marker = intersects.find(intersect => markers.includes(intersect.object.parent));\r\n            if (marker) {\r\n                const markerText = marker.object.parent.userData.text;\r\n                createInfoWindow(\"Marker Info\", markerText);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n}\r\n\r\ninit();\r\n\r\nconst timeline = document.getElementById('timeline');\r\nconst yearInput = document.getElementById('yearInput');\r\nconst yearLabel = document.getElementById('yearLabel');\r\n\r\nfunction updateYearLabel(selectedYear) {\r\n    const year = parseInt(selectedYear, 10);\r\n    if (year < 0) {\r\n        yearLabel.innerText = `${Math.abs(year)} BC`;\r\n    } else {\r\n        yearLabel.innerText = `${year} AD`;\r\n    }\r\n}\r\n\r\ntimeline.addEventListener('input', (event) => {\r\n    const selectedYear = event.target.value;\r\n    yearInput.value = selectedYear;\r\n    updateYearLabel(selectedYear);\r\n    drawTextureForYear(selectedYear);\r\n});\r\n\r\nyearInput.addEventListener('change', (event) => {\r\n    const selectedYear = event.target.value;\r\n    timeline.value = selectedYear;\r\n    updateYearLabel(selectedYear);\r\n    drawTextureForYear(selectedYear);\r\n});\r\n"]}